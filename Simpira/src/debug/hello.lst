
C:/Users/shu/wsFreedomStudio/simpira_test/src/debug/hello.elf:     file format elf32-littleriscv
C:/Users/shu/wsFreedomStudio/simpira_test/src/debug/hello.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x0000103c memsz 0x0000103c flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x20017f48 align 2**12
         filesz 0x00001ac4 memsz 0x00001ac4 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00000ac8 vaddr 0x80001ac8 paddr 0x80001ac8 align 2**12
         filesz 0x00000000 memsz 0x00000ca8 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002080 vaddr 0x20011080 paddr 0x20011080 align 2**12
         filesz 0x00006ec4 memsz 0x00006ec4 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002dc  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  200102e0  200102e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  200102ec  200102ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000cd4  20010368  20010368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00006ec4  20011080  20011080  00002080  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00001ac4  80000000  20017f48  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  80001ac8  80001ac8  0000aac8  2**3  ALLOC
  7 .stack            00000400  80001b70  80001b70  0000aac8  2**4  ALLOC
  8 .heap             00000800  80001f70  80001f70  0000aac8  2**3  ALLOC
  9 .debug_info       0001f856  00000000  00000000  0000aac4  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     000028cc  00000000  00000000  0002a31a  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000b90  00000000  00000000  0002cbe8  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000970  00000000  00000000  0002d778  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000af4d  00000000  00000000  0002e0e8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004a44  00000000  00000000  00039035  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003da79  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003daa9  2**0  CONTENTS, READONLY
 17 .debug_frame      00002d8c  00000000  00000000  0003dad8  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102e0 l    d  .init_array	00000000 .init_array
200102ec l    d  .ctors	00000000 .ctors
20010368 l    d  .rodata	00000000 .rodata
20011080 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80001ac8 l    d  .bss	00000000 .bss
80001b70 l    d  .stack	00000000 .stack
80001f70 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
200100c0 l     F .init	00000000 __metal_memory_scrub
2001012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010240 l       .init	00000000 _skip_init
200104c8 l       .rodata	00000000 argv
200104cc l       .rodata	00000000 envp
200104d0 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20016314 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
2001632e l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20016348 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
2001635e l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20016372 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20016384 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20016394 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
200163aa l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
200163bc l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
200106cc l     O .rodata	00000880 pll_configs
200163d2 l     F .text	0000004e get_pll_config_freq
20016634 l     F .text	000000ac find_closest_config
200166e0 l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 hello.c
00000000 l    df *ABS*	00000000 findfp.c
200120a4 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
200123a8 l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
200136ea l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20013714 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
2001373c l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20013778 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
200138d8 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20013e18 l     F .text	00000024 __metal_driver_cpu_hartid
20013e3c l     F .text	0000002a __metal_driver_cpu_timebase
20013e66 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20013e90 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
2001586a l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20015894 l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
200158be l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
200158e6 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
2001590e l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20015930 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20016a6e l     F .text	00000026 __metal_driver_sifive_gpio0_base
20016a94 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20016abe l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
200174cc l     F .text	00000040 __metal_driver_sifive_uart0_control_base
2001750c l     F .text	00000048 __metal_driver_sifive_uart0_interrupt_parent
20017554 l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20017590 l     F .text	00000048 __metal_driver_sifive_uart0_clock
200175d8 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20017618 l     F .text	0000003c __metal_driver_sifive_uart0_pinmux_output_selector
20017654 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
20017a30 l     F .text	000000da pre_rate_change_callback_func
20017b0a l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80001000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20016124 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
2001613e l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20016154 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20016168 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20016224 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
2001623e l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20016254 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20016268 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
200169f6 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20017e80 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 C:\Users\shu\AppData\Local\Temp\ccYTnK9c.o
80000000 l       .data	00000000 AESTable
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80001aa4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80001ae0 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
80001ad8 l     O .bss	00000004 init_done.1
80001adc l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20017e00 l       .text	00000000 IRQ_0
20017e04 l       .text	00000000 IRQ_1
20017e08 l       .text	00000000 IRQ_2
20017e0c l       .text	00000000 IRQ_3
20017e10 l       .text	00000000 IRQ_4
20017e14 l       .text	00000000 IRQ_5
20017e18 l       .text	00000000 IRQ_6
20017e1c l       .text	00000000 IRQ_7
20017e20 l       .text	00000000 IRQ_8
20017e24 l       .text	00000000 IRQ_9
20017e28 l       .text	00000000 IRQ_10
20017e2c l       .text	00000000 IRQ_11
20017e30 l       .text	00000000 IRQ_12
20017e34 l       .text	00000000 IRQ_13
20017e38 l       .text	00000000 IRQ_14
20017e3c l       .text	00000000 IRQ_15
20017e40 l       .text	00000000 IRQ_LC0
20017e44 l       .text	00000000 IRQ_LC1
20017e48 l       .text	00000000 IRQ_LC2
20017e4c l       .text	00000000 IRQ_LC3
20017e50 l       .text	00000000 IRQ_LC4
20017e54 l       .text	00000000 IRQ_LC5
20017e58 l       .text	00000000 IRQ_LC6
20017e5c l       .text	00000000 IRQ_LC7
20017e60 l       .text	00000000 IRQ_LC8
20017e64 l       .text	00000000 IRQ_LC9
20017e68 l       .text	00000000 IRQ_LC10
20017e6c l       .text	00000000 IRQ_LC11
20017e70 l       .text	00000000 IRQ_LC12
20017e74 l       .text	00000000 IRQ_LC13
20017e78 l       .text	00000000 IRQ_LC14
20017e7c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102ec l       .init_array	00000000 metal_constructors_end
200102f0 l       .init_array	00000000 __fini_array_end
200102f0 l       .init_array	00000000 metal_destructors_end
200102f0 l       .init_array	00000000 metal_destructors_start
200102f0 l       .init_array	00000000 __fini_array_start
200102e0 l       .init_array	00000000 __init_array_end
200102e0 l       .init_array	00000000 __preinit_array_end
200102e0 l       .init_array	00000000 __init_array_start
200102e0 l       .init_array	00000000 metal_constructors_start
200102e0 l       .init_array	00000000 __preinit_array_start
20010fd4 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20013138 g     F .text	0000002e _isatty_r
20014750  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20012b70 g     F .text	00000032 _lseek_r
20017ca2 g     F .text	00000026 metal_clock_get_rate_hz
20017990 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20013ab4 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
200177e6 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
200146ba  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20011218 g     F .text	00000da8 AES_128_encrypt
20014f62 g     F .text	00000058 __metal_valid_interrupt_id
20012068 g     F .text	0000003c printf
200102e8 g     O .init_array	00000004 _use_hfxosc_ptr
200153da g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
800022a0 g       .data	00000000 __global_pointer$
200102ec g     F .ctors	00000024 metal_tty_init
20017c4e g     F .text	00000054 _metal_clock_append_to_callbacks
2001598a g     F .text	00000046 __metal_plic0_complete_interrupt
200151a6 g     F .text	000001e0 __metal_driver_riscv_cpu_controller_interrupt_register
200102e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20012758 g     F .text	00000036 __sseek
2001215a g     F .text	0000006a __sinit
20012794 g     F .text	000000c0 __swbuf_r
80001ac8 g       .data	00000000 __tls_base
20012116 g     F .text	00000044 __sfmoreglue
20012cb6 g     F .text	00000002 __malloc_unlock
20017d98 g     F .text	0000002e metal_cpu_get
80001a38 g     O .data	00000020 __metal_dt_serial_10013000
200170a6 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
200104dc g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80001b6c g       .bss	00000000 metal_segment_bss_target_end
200137a8 g     F .text	0000009a __metal_clint0_mtime_get
200157de g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
200178aa g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20016e5c g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20013318 g     F .text	0000000a __errno
08000000 g       .rodata	00000000 metal_segment_itim_target_start
200177b6 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20017744 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20010142 g     F .init	0000000e __metal_synchronize_harts
80001ac8 g       .data	00000000 metal_segment_bss_target_start
20013842 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20013108 g     F .text	00000030 _fstat_r
200172f6 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80001ad0 g     O .bss	00000004 errno
200164c4 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20017d10 g     F .text	00000030 metal_clock_register_pre_rate_change_callback
20014a3e  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100cc  w    F .init	00000000 __metal_before_start
20013614  w    F .text	00000014 metal_init_run
80001a58 g     O .data	00000020 __metal_dt_serial_10023000
20010668 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20010624 g     O .rodata	00000044 __metal_driver_vtable_cpu
200136bc g     F .text	0000002e metal_uart_set_baud_rate
20017b3a g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20015466 g     F .text	00000070 __metal_driver_cpu_mcycle_get
20010f4c g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80001f70 g       .heap	00000000 metal_segment_heap_target_start
2001210c g     F .text	0000000a _cleanup_r
80001ab4 g     O .data	00000008 __metal_dt_cpu_0
200149a8  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20016890 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20016088 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20014c96  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20014022 g     F .text	00000018 __metal_default_exception_handler
20013188 g     F .text	00000026 _fstat
20013de4 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
200153f6 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20013eb4 g     F .text	00000030 __metal_driver_cpu_get
200105c0 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20013f16 g     F .text	00000018 __metal_interrupt_global_disable
200160fc g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20014912  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20014ad4  w    F .text	00000096 metal_lc10_interrupt_vector_handler
200126a8 g     F .text	00000030 _sbrk_r
20015ea8 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20015076 g     F .text	0000004e __metal_exception_register
20013524 g     F .text	00000078 metal_init
200130d6 g     F .text	00000032 _read_r
200155f8 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20016f3e g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20014112 g     F .text	00000068 __metal_default_sw_handler
20017d40 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000106c g     O .data	0000000c __metal_dt_clock_2
20017694 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
200131ae g     F .text	00000020 _isatty
20017004 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
200176d2 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20011034 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20011018 g     O .rodata	00000004 _global_impure_ptr
2001417a  w    F .text	00000092 metal_timer_interrupt_vector_handler
20013382 g     F .text	0000005e __libc_init_array
20016f7e g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20014b6a  w    F .text	00000096 metal_lc11_interrupt_vector_handler
200162f2 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20015386 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20013222 g     F .text	0000007e _sbrk
20016ef8 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20017c0c g     F .text	00000042 _metal_clock_call_all_callbacks
200102ba g     F .init	00000002 _init
20013f78 g     F .text	0000001a __metal_interrupt_timer_disable
200170f0 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
200156b6 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20010f98 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
2001770c g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20017044 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
2001334c g     F .text	00000036 __libc_fini_array
80001a90 g     O .data	0000000c __metal_dt_clock_4
2001747e g     F .text	00000020 __metal_driver_gpio_interrupt_controller
2001359c g     F .text	00000078 metal_fini
20015640 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
2001584a g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20013fca g     F .text	0000002c __metal_interrupt_local_enable
20013db0 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
2001363c g     F .text	00000026 metal_tty_putc
20015b88 g     F .text	00000018 __metal_plic0_default_handler
200132a0  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80001060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20015ef8 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
2001420c g     F .text	00000016 __metal_default_beu_handler
200103d4 g     O .rodata	00000020 __sf_fake_stderr
20013fae g     F .text	0000001c __metal_interrupt_external_disable
200176b4 g     F .text	0000001e __metal_driver_sifive_uart0_get_interrupt_id
2001544a g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
200150c4 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
200123d0 g     F .text	00000042 __sfputs_r
20015798 g     F .text	00000046 __metal_driver_cpu_exception_register
20013f2e g     F .text	00000018 __metal_interrupt_software_enable
2001458e  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20012c9a g     F .text	0000001a memchr
20012cb8 g     F .text	000000a2 _free_r
80001ad4 g     O .bss	00000004 _global_atexit
20015a50 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20014e58 g     F .text	00000058 __metal_controller_interrupt_vector_mode
2001345c g     F .text	000000c8 __call_exitprocs
80001f70 g       .stack	00000000 _sp
200102e0 g     O .init_array	00000004 _metal_tty_init_ptr
20010150 g     F .init	00000000 _start
2001617e g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
200131ce g     F .text	0000002a _lseek
20015778 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
2001580c g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20013f92 g     F .text	0000001c __metal_interrupt_external_enable
200133e0 g     F .text	0000007c __register_exitproc
200178da g     F .text	00000040 __metal_driver_sifive_uart0_putc
20015c44 g     F .text	00000152 __metal_driver_riscv_plic0_init
20015e58 g     F .text	00000050 __metal_driver_riscv_plic0_enable
20016ecc g     F .text	0000002c __metal_driver_sifive_gpio0_output
2001487c  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20013ee4 g     F .text	0000001a __metal_myhart_id
2001749e g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20014080  w    F .text	00000092 metal_software_interrupt_vector_handler
200153b0 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
20012994 g     F .text	00000030 _close_r
20011180 g     F .text	00000094 AES_128_keyschedule
20017970 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20013996 g     F .text	000000da __metal_driver_riscv_clint0_register
80001aac g     O .data	00000008 __metal_dt_clint_2000000
20012888 g     F .text	0000010c __swsetup_r
200121c4 g     F .text	0000009c __sfp
20017cc8 g     F .text	00000048 metal_clock_set_rate_hz
200126d8 g     F .text	00000032 __sread
20016e1c g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102bc  w    F .init	00000000 secondary_main
20014052  w    F .text	0000002e metal_interrupt_vector_handler
20012cb4 g     F .text	00000002 __malloc_lock
2001777e g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20012b0a g     F .text	00000066 _fflush_r
20015a16 g     F .text	0000003a __metal_plic0_get_threshold
20016a08 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
200103f4 g     O .rodata	00000020 __sf_fake_stdin
20014fba g     F .text	000000bc __metal_local_interrupt_enable
20013c70 g     F .text	00000140 __metal_driver_riscv_clint0_command_request
20011fc0 g     F .text	000000a8 memset
200147e6  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20011080 g     F .text	000000e8 main
20011168 g       .text	00000012 getcycles
80001ac8 g       .data	00000000 metal_segment_data_target_end
20017860 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
2001101c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20015654 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20015718 g     F .text	00000060 __metal_driver_cpu_get_msip
20017de0 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
2001582a g     F .text	00000020 __metal_driver_cpu_set_exception_pc
2001594e g     F .text	0000003c __metal_plic0_claim_interrupt
20017830 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
2001278e g     F .text	00000006 __sclose
20014c00  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2001008a g     F .init	00000000 metal_mem_scrub
200122ca g     F .text	000000de _malloc_r
20013a98 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80001ac0 g     O .data	00000004 __metal_dt_prci_10008000
200154d6 g     F .text	00000046 __metal_driver_cpu_timebase_get
20015fec g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
20017dc6 g     F .text	0000001a metal_cpu_get_current_hartid
2001627e g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20017e00 g       .text	00000000 __metal_vector_table
20011040 g       *ABS*	00000000 metal_segment_itim_source_start
80001aa8  w    O .data	00000004 __metal_cpu_table
80001090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102ba g     F .init	00000002 _fini
20012068 g     F .text	0000003c iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20015ab2 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2001033c g     F .ctors	0000002a use_hfxosc
20013efe g     F .text	00000018 __metal_interrupt_global_enable
2001330e g     F .text	0000000a atexit
20012854 g     F .text	00000034 _write_r
20013f5e g     F .text	0000001a __metal_interrupt_timer_enable
2001791a g     F .text	00000056 __metal_driver_sifive_uart0_getc
20013bbe g     F .text	000000b2 __metal_driver_riscv_clint0_disable
20012d5a g     F .text	0000010c _printf_common
80001aa0 g     O .data	00000004 _impure_ptr
20015582 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
200129c4 g     F .text	00000146 __sflush_r
20015f28 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20016420 g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80001078 g     O .data	0000000c __metal_dt_clock_5
20016a36 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20017ef0 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20013b0c g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20017f48 g       *ABS*	00000000 metal_segment_data_source_start
20010134 g       .init	00000000 early_trap_vector
80002770 g       .heap	00000000 metal_segment_heap_target_end
20014eb0 g     F .text	000000b2 __metal_controller_interrupt_vector
80001a84 g     O .data	0000000c __metal_dt_clock_1
80001460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20012ba2 g     F .text	0000005a __swhatbuf_r
20016fbe g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20014222 g     F .text	00000066 __metal_default_timer_handler
200132a0 g     F .text	0000006e _write
20015ba0 g     F .text	000000a4 __metal_plic0_handler
20014624  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20014dc2  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20017d72 g     F .text	00000026 metal_cpu_interrupt_controller
2001270a g     F .text	0000004e __swrite
20013322 g     F .text	0000002a exit
20012412 g     F .text	00000296 _vfiprintf_r
20012260 g     F .text	0000006a _fwalk_reent
20017f0e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20011040 g       *ABS*	00000000 metal_segment_lim_source_start
20010414 g     O .rodata	00000020 __sf_fake_stdout
80001abc g     O .data	00000004 __metal_dt_gpio_10012000
2001403a g     F .text	00000018 __metal_default_interrupt_handler
2001368e g     F .text	0000002e metal_uart_putc
200131f8 g     F .text	0000002a _read
20013628  w    F .text	00000014 metal_fini_run
20016ea2 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20014300 g     F .text	0000017e __metal_exception_handler
200144f8  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20017f30 g     F .text	00000014 _exit
2001551c g     F .text	00000066 __metal_driver_cpu_mtime_get
20012bfc g     F .text	0000009e __smakebuf_r
20013a70 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20012e66 g     F .text	00000270 _printf_i
80001acc g     O .bss	00000004 __malloc_sbrk_start
20014d2c  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20011024 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
2001390e g     F .text	00000088 __metal_driver_riscv_clint0_init
80001ac8 g     O .bss	00000004 __malloc_free_list
20010310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20012412 g     F .text	00000296 _vfprintf_r
20015612 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20015ae6 g     F .text	000000a2 __metal_plic0_enable
20010088  w      .init	00000000 __register_frame_info
20016202 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20015626 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20013ff6 g     F .text	0000002c __metal_interrupt_local_disable
20013f46 g     F .text	00000018 __metal_interrupt_software_disable
20013662 g     F .text	0000002c metal_uart_init
80001a78 g     O .data	0000000c __metal_dt_clock_3
80001084 g     O .data	0000000c __metal_dt_clock_6
200159d0 g     F .text	00000046 __metal_plic0_set_threshold
20015f50 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20013166 g     F .text	00000022 _close
2001102c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20015d96 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff2197          	auipc	gp,0x5fff2
20010004:	2a018193          	addi	gp,gp,672 # 800022a0 <__global_pointer$>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11428293          	addi	t0,t0,276 # 20010134 <early_trap_vector>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	00000113          	li	sp,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010030:	00011463          	bnez	sp,20010038 <_enter+0x38>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:56
    la sp, _sp
20010034:	cd018113          	addi	sp,gp,-816 # 80001f70 <_sp>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20010038:	f1402573          	csrr	a0,mhartid
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:60
    li t0, 0
2001003c:	4281                	li	t0,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:61
    la t1, __stack_size
2001003e:	40000313          	li	t1,1024
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010042:	ff017113          	andi	sp,sp,-16
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
20010046:	00a28563          	beq	t0,a0,20010050 <_enter+0x50>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004a:	911a                	add	sp,sp,t1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:66
    addi t0, t0, 1
2001004c:	0285                	addi	t0,t0,1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:67
    j 1b
2001004e:	bfd5                	j	20010042 <_enter+0x42>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010050:	00000097          	auipc	ra,0x0
20010054:	07c08093          	addi	ra,ra,124 # 200100cc <__metal_before_start>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:77
    beqz ra, 1f
20010058:	00008363          	beqz	ra,2001005e <_enter+0x5e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:78
    jalr ra
2001005c:	9082                	jalr	ra
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2001005e:	f1402573          	csrr	a0,mhartid
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:85
    li a1, 0
20010062:	4581                	li	a1,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:86
    li a2, 0
20010064:	4601                	li	a2,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:87
    call _start
20010066:	20ed                	jal	20010150 <_start>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20010068:	00000093          	li	ra,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:93
    beqz ra, 1f
2001006c:	00008363          	beqz	ra,20010072 <_enter+0x72>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:94
    jalr ra
20010070:	9082                	jalr	ra
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20010072:	00000297          	auipc	t0,0x0
20010076:	00c28293          	addi	t0,t0,12 # 2001007e <_enter+0x7e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2001007a:	30529073          	csrw	mtvec,t0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
2001007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:103
     j 1b
20010082:	bff5                	j	2001007e <_enter+0x7e>
20010084:	0000                	unimp
	...

20010088 <__register_frame_info>:
__register_frame_info():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010088:	8082                	ret

2001008a <metal_mem_scrub>:
metal_mem_scrub():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2001008a:	46a1                	li	a3,8
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2001008c:	3006b373          	csrrc	t1,mstatus,a3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010090:	4291                	li	t0,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20010092:	0055c563          	blt	a1,t0,2001009c <metal_mem_scrub+0x12>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20010096:	00357613          	andi	a2,a0,3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2001009a:	ca11                	beqz	a2,200100ae <metal_mem_scrub+0x24>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2001009c:	00050023          	sb	zero,0(a0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100a0:	0505                	addi	a0,a0,1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100a2:	15fd                	addi	a1,a1,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100a4:	feb047e3          	bgtz	a1,20010092 <metal_mem_scrub+0x8>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100a8:	30031073          	csrw	mstatus,t1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:39
    ret
200100ac:	8082                	ret
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100ae:	00052023          	sw	zero,0(a0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100b2:	0511                	addi	a0,a0,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100b4:	15f1                	addi	a1,a1,-4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100b6:	fcb04ee3          	bgtz	a1,20010092 <metal_mem_scrub+0x8>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100ba:	30031073          	csrw	mstatus,t1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:46
    ret
200100be:	8082                	ret

200100c0 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100c0:	00032023          	sw	zero,0(t1)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100c4:	0311                	addi	t1,t1,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100c6:	fe734de3          	blt	t1,t2,200100c0 <__metal_memory_scrub>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100ca:	8082                	ret

200100cc <__metal_before_start>:
__metal_before_start():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100cc:	8406                	mv	s0,ra
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
200100ce:	dfff0297          	auipc	t0,0xdfff0
200100d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
200100d6:	04028c63          	beqz	t0,2001012e <skip_scrub>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
200100da:	dfff0297          	auipc	t0,0xdfff0
200100de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
200100e2:	f14027f3          	csrr	a5,mhartid
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100e6:	46a1                	li	a3,8
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
200100e8:	3006b073          	csrc	mstatus,a3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
200100ec:	830a                	mv	t1,sp
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
200100ee:	dfff0397          	auipc	t2,0xdfff0
200100f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
200100f6:	938a                	add	t2,t2,sp
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
200100f8:	00730363          	beq	t1,t2,200100fe <__metal_before_start+0x32>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
200100fc:	37d1                	jal	200100c0 <__metal_memory_scrub>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
200100fe:	02579863          	bne	a5,t0,2001012e <skip_scrub>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20010102:	5fff0317          	auipc	t1,0x5fff0
20010106:	efe30313          	addi	t1,t1,-258 # 80000000 <metal_segment_data_target_start>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2001010a:	5fff2397          	auipc	t2,0x5fff2
2001010e:	9be38393          	addi	t2,t2,-1602 # 80001ac8 <__malloc_free_list>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20010112:	00730363          	beq	t1,t2,20010118 <__metal_before_start+0x4c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20010116:	376d                	jal	200100c0 <__metal_memory_scrub>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20010118:	e7ff0317          	auipc	t1,0xe7ff0
2001011c:	ee830313          	addi	t1,t1,-280 # 8000000 <metal_segment_itim_target_end>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20010120:	e7ff0397          	auipc	t2,0xe7ff0
20010124:	ee038393          	addi	t2,t2,-288 # 8000000 <metal_segment_itim_target_end>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20010128:	00730363          	beq	t1,t2,2001012e <skip_scrub>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
2001012c:	3f51                	jal	200100c0 <__metal_memory_scrub>

2001012e <skip_scrub>:
skip_scrub():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2001012e:	80a2                	mv	ra,s0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/scrub.S:130
    ret
20010130:	8082                	ret
	...

20010134 <early_trap_vector>:
early_trap_vector():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010134:	342022f3          	csrr	t0,mcause
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010138:	34102373          	csrr	t1,mepc
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/trap.S:66
    csrr t2, mtval
2001013c:	343023f3          	csrr	t2,mtval
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/trap.S:67
    j early_trap_vector
20010140:	bfd5                	j	20010134 <early_trap_vector>

20010142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20010142:	1141                	addi	sp,sp,-16
20010144:	c622                	sw	s0,12(sp)
20010146:	0800                	addi	s0,sp,16
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010148:	0001                	nop
2001014a:	4432                	lw	s0,12(sp)
2001014c:	0141                	addi	sp,sp,16
2001014e:	8082                	ret

20010150 <_start>:
_start():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010150:	8406                	mv	s0,ra
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20010152:	5fff2197          	auipc	gp,0x5fff2
20010156:	14e18193          	addi	gp,gp,334 # 800022a0 <__global_pointer$>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2001015a:	00000293          	li	t0,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
2001015e:	0e551163          	bne	a0,t0,20010240 <_skip_init>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20010162:	00008297          	auipc	t0,0x8
20010166:	de628293          	addi	t0,t0,-538 # 20017f48 <metal_segment_data_source_start>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2001016a:	5fff0317          	auipc	t1,0x5fff0
2001016e:	e9630313          	addi	t1,t1,-362 # 80000000 <metal_segment_data_target_start>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20010172:	5fff2397          	auipc	t2,0x5fff2
20010176:	95638393          	addi	t2,t2,-1706 # 80001ac8 <__malloc_free_list>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2001017a:	00628c63          	beq	t0,t1,20010192 <_start+0x42>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
2001017e:	00735a63          	bge	t1,t2,20010192 <_start+0x42>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20010182:	0002a503          	lw	a0,0(t0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
20010186:	0291                	addi	t0,t0,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20010188:	00a32023          	sw	a0,0(t1)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
2001018c:	0311                	addi	t1,t1,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
2001018e:	fe734ae3          	blt	t1,t2,20010182 <_start+0x32>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20010192:	00001297          	auipc	t0,0x1
20010196:	eae28293          	addi	t0,t0,-338 # 20011040 <metal_segment_itim_source_start>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2001019a:	e7ff0317          	auipc	t1,0xe7ff0
2001019e:	e6630313          	addi	t1,t1,-410 # 8000000 <metal_segment_itim_target_end>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101a2:	e7ff0397          	auipc	t2,0xe7ff0
200101a6:	e5e38393          	addi	t2,t2,-418 # 8000000 <metal_segment_itim_target_end>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101aa:	00628c63          	beq	t0,t1,200101c2 <_start+0x72>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101ae:	00735a63          	bge	t1,t2,200101c2 <_start+0x72>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101b2:	0002a503          	lw	a0,0(t0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101b6:	0291                	addi	t0,t0,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101b8:	00a32023          	sw	a0,0(t1)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
200101bc:	0311                	addi	t1,t1,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
200101be:	fe734ae3          	blt	t1,t2,200101b2 <_start+0x62>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101c2:	0000100f          	fence.i
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
200101c6:	00001297          	auipc	t0,0x1
200101ca:	e7a28293          	addi	t0,t0,-390 # 20011040 <metal_segment_itim_source_start>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
200101ce:	5fff0317          	auipc	t1,0x5fff0
200101d2:	e3230313          	addi	t1,t1,-462 # 80000000 <metal_segment_data_target_start>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
200101d6:	5fff0397          	auipc	t2,0x5fff0
200101da:	e2a38393          	addi	t2,t2,-470 # 80000000 <metal_segment_data_target_start>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
200101de:	00628c63          	beq	t0,t1,200101f6 <_start+0xa6>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
200101e2:	00735a63          	bge	t1,t2,200101f6 <_start+0xa6>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101e6:	0002a503          	lw	a0,0(t0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
200101ea:	0291                	addi	t0,t0,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
200101ec:	00a32023          	sw	a0,0(t1)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
200101f0:	0311                	addi	t1,t1,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
200101f2:	fe734ae3          	blt	t1,t2,200101e6 <_start+0x96>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101f6:	0000100f          	fence.i
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
200101fa:	5fff2317          	auipc	t1,0x5fff2
200101fe:	8ce30313          	addi	t1,t1,-1842 # 80001ac8 <__malloc_free_list>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20010202:	8cc18393          	addi	t2,gp,-1844 # 80001b6c <metal_segment_bss_target_end>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
20010206:	00735763          	bge	t1,t2,20010214 <_start+0xc4>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2001020a:	00032023          	sw	zero,0(t1)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
2001020e:	0311                	addi	t1,t1,4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20010210:	fe734de3          	blt	t1,t2,2001020a <_start+0xba>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20010214:	5fff2217          	auipc	tp,0x5fff2
20010218:	8b420213          	addi	tp,tp,-1868 # 80001ac8 <__malloc_free_list>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2001021c:	c211                	beqz	a2,20010220 <_start+0xd0>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:167
  jalr a2
2001021e:	9602                	jalr	a2
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010220:	00003517          	auipc	a0,0x3
20010224:	12c50513          	addi	a0,a0,300 # 2001334c <__libc_fini_array>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:172
  call atexit
20010228:	0e6030ef          	jal	ra,2001330e <atexit>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
2001022c:	156030ef          	jal	ra,20013382 <__libc_init_array>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010230:	00003517          	auipc	a0,0x3
20010234:	3f850513          	addi	a0,a0,1016 # 20013628 <metal_fini_run>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:178
  call atexit
20010238:	0d6030ef          	jal	ra,2001330e <atexit>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:179
  call metal_init_run
2001023c:	3d8030ef          	jal	ra,20013614 <metal_init_run>

20010240 <_skip_init>:
_skip_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010240:	3709                	jal	20010142 <__metal_synchronize_harts>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20010242:	56fd                	li	a3,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20010244:	3046b073          	csrc	mie,a3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20010248:	3446b073          	csrc	mip,a3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2001024c:	301027f3          	csrr	a5,misa
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20010250:	00042737          	lui	a4,0x42
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20010254:	8f7d                	and	a4,a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
20010256:	c709                	beqz	a4,20010260 <_skip_init+0x20>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20010258:	3036b073          	csrc	mideleg,a3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
2001025c:	3026b073          	csrc	medeleg,a3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010260:	00040737          	lui	a4,0x40
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20010264:	8f7d                	and	a4,a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
20010266:	c319                	beqz	a4,2001026c <_skip_init+0x2c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20010268:	1806b073          	csrc	satp,a3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2001026c:	6741                	lui	a4,0x10
2001026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20010272:	8ff9                	and	a5,a5,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20010274:	cb89                	beqz	a5,20010286 <_skip_init+0x46>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20010276:	300027f3          	csrr	a5,mstatus
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2001027a:	6709                	lui	a4,0x2
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
2001027c:	8fd9                	or	a5,a5,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
2001027e:	30079073          	csrw	mstatus,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20010282:	00305073          	csrwi	fcsr,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20010286:	301027f3          	csrr	a5,misa
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2001028a:	00200737          	lui	a4,0x200
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
2001028e:	8ff9                	and	a5,a5,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20010290:	c799                	beqz	a5,2001029e <_skip_init+0x5e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20010292:	300027f3          	csrr	a5,mstatus
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
20010296:	2007e793          	ori	a5,a5,512
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2001029a:	30079073          	csrw	mstatus,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2001029e:	4505                	li	a0,1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
200102a0:	00000597          	auipc	a1,0x0
200102a4:	22858593          	addi	a1,a1,552 # 200104c8 <argv>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
200102a8:	00000617          	auipc	a2,0x0
200102ac:	22460613          	addi	a2,a2,548 # 200104cc <envp>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:236
  call secondary_main
200102b0:	2031                	jal	200102bc <secondary_main>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102b2:	070030ef          	jal	ra,20013322 <exit>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102b6:	80a2                	mv	ra,s0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:248
  ret
200102b8:	8082                	ret

200102ba <_fini>:
_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102ba:	8082                	ret

200102bc <secondary_main>:
secondary_main():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102bc:	1141                	addi	sp,sp,-16
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102be:	c206                	sw	ra,4(sp)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102c0:	f14022f3          	csrr	t0,mhartid
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
200102c4:	00000313          	li	t1,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
200102c8:	00628563          	beq	t0,t1,200102d2 <secondary_main+0x16>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:281
1:
  wfi
200102cc:	10500073          	wfi
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:282
  j 1b
200102d0:	bff5                	j	200102cc <secondary_main+0x10>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:284
2:
  call main
200102d2:	5af000ef          	jal	ra,20011080 <main>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102d6:	4092                	lw	ra,4(sp)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102d8:	0141                	addi	sp,sp,16
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/crt0.S:291
  ret
200102da:	8082                	ret

Disassembly of section .ctors:

200102ec <metal_tty_init>:
metal_tty_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
200102ec:	1141                	addi	sp,sp,-16
200102ee:	c606                	sw	ra,12(sp)
200102f0:	c422                	sw	s0,8(sp)
200102f2:	0800                	addi	s0,sp,16
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
200102f4:	67f1                	lui	a5,0x1c
200102f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
200102fa:	800027b7          	lui	a5,0x80002
200102fe:	a3878513          	addi	a0,a5,-1480 # 80001a38 <metal_segment_heap_target_end+0xfffff2c8>
20010302:	360030ef          	jal	ra,20013662 <metal_uart_init>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/tty.c:30
}
20010306:	0001                	nop
20010308:	40b2                	lw	ra,12(sp)
2001030a:	4422                	lw	s0,8(sp)
2001030c:	0141                	addi	sp,sp,16
2001030e:	8082                	ret

20010310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20010310:	1101                	addi	sp,sp,-32
20010312:	ce06                	sw	ra,28(sp)
20010314:	cc22                	sw	s0,24(sp)
20010316:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010318:	07c060ef          	jal	ra,20016394 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001031c:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20010320:	fec42783          	lw	a5,-20(s0)
20010324:	c799                	beqz	a5,20010332 <metal_sifive_fe310_g000_pll_init+0x22>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20010326:	800027b7          	lui	a5,0x80002
2001032a:	a9078513          	addi	a0,a5,-1392 # 80001a90 <metal_segment_heap_target_end+0xfffff320>
2001032e:	0f2060ef          	jal	ra,20016420 <__metal_driver_sifive_fe310_g000_pll_init>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20010332:	0001                	nop
20010334:	40f2                	lw	ra,28(sp)
20010336:	4462                	lw	s0,24(sp)
20010338:	6105                	addi	sp,sp,32
2001033a:	8082                	ret

2001033c <use_hfxosc>:
use_hfxosc():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2001033c:	1101                	addi	sp,sp,-32
2001033e:	ce06                	sw	ra,28(sp)
20010340:	cc22                	sw	s0,24(sp)
20010342:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010344:	050060ef          	jal	ra,20016394 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010348:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2001034c:	fec42583          	lw	a1,-20(s0)
20010350:	800027b7          	lui	a5,0x80002
20010354:	a9078513          	addi	a0,a5,-1392 # 80001a90 <metal_segment_heap_target_end+0xfffff320>
20010358:	171070ef          	jal	ra,20017cc8 <metal_clock_set_rate_hz>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2001035c:	0001                	nop
2001035e:	40f2                	lw	ra,28(sp)
20010360:	4462                	lw	s0,24(sp)
20010362:	6105                	addi	sp,sp,32
20010364:	8082                	ret

Disassembly of section .text:

20011080 <main>:
main():
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:14
extern void AES_128_keyschedule(unsigned char *rk);
extern void AES_128_encrypt(const unsigned char *, const unsigned char *, unsigned char *);


int main(void)
{
20011080:	7171                	addi	sp,sp,-176
20011082:	d706                	sw	ra,172(sp)
20011084:	d522                	sw	s0,168(sp)
20011086:	1900                	addi	s0,sp,176
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:15
    unsigned char in[16] = {0x00, };
20011088:	fc042423          	sw	zero,-56(s0)
2001108c:	fc042623          	sw	zero,-52(s0)
20011090:	fc042823          	sw	zero,-48(s0)
20011094:	fc042a23          	sw	zero,-44(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:18
    unsigned char out[16];

    unsigned char rk[6*16] = {0x00, 0x00, 0x00, 0x00,
20011098:	200107b7          	lui	a5,0x20010
2001109c:	37478793          	addi	a5,a5,884 # 20010374 <use_hfxosc+0x38>
200110a0:	4390                	lw	a2,0(a5)
200110a2:	43d4                	lw	a3,4(a5)
200110a4:	4798                	lw	a4,8(a5)
200110a6:	f4c42c23          	sw	a2,-168(s0)
200110aa:	f4d42e23          	sw	a3,-164(s0)
200110ae:	f6e42023          	sw	a4,-160(s0)
200110b2:	00c7d703          	lhu	a4,12(a5)
200110b6:	f6e41223          	sh	a4,-156(s0)
200110ba:	00e7c783          	lbu	a5,14(a5)
200110be:	f6f40323          	sb	a5,-154(s0)
200110c2:	f6740793          	addi	a5,s0,-153
200110c6:	05100713          	li	a4,81
200110ca:	863a                	mv	a2,a4
200110cc:	4581                	li	a1,0
200110ce:	853e                	mv	a0,a5
200110d0:	6f1000ef          	jal	ra,20011fc0 <memset>
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:23
    							0x10, 0x00, 0x00, 0x00,
    							0x20, 0x00, 0x00, 0x00,
    							0x30, 0x00, };

    unsigned int* rk32 = (unsigned int*)rk;
200110d4:	f5840793          	addi	a5,s0,-168
200110d8:	fef42423          	sw	a5,-24(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:25

    AES_128_keyschedule(rk);
200110dc:	f5840793          	addi	a5,s0,-168
200110e0:	853e                	mv	a0,a5
200110e2:	2879                	jal	20011180 <AES_128_keyschedule>
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:28


    uint64_t oldcount = getcycles();
200110e4:	2051                	jal	20011168 <getcycles>
200110e6:	fea42023          	sw	a0,-32(s0)
200110ea:	feb42223          	sw	a1,-28(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:29
    for(int i=0; i<10000; i++) AES_128_encrypt(rk, in, out);
200110ee:	fe042623          	sw	zero,-20(s0)
200110f2:	a005                	j	20011112 <main+0x92>
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:29 (discriminator 3)
200110f4:	fb840693          	addi	a3,s0,-72
200110f8:	fc840713          	addi	a4,s0,-56
200110fc:	f5840793          	addi	a5,s0,-168
20011100:	8636                	mv	a2,a3
20011102:	85ba                	mv	a1,a4
20011104:	853e                	mv	a0,a5
20011106:	2a09                	jal	20011218 <AES_128_encrypt>
20011108:	fec42783          	lw	a5,-20(s0)
2001110c:	0785                	addi	a5,a5,1
2001110e:	fef42623          	sw	a5,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:29 (discriminator 1)
20011112:	fec42703          	lw	a4,-20(s0)
20011116:	6789                	lui	a5,0x2
20011118:	70f78793          	addi	a5,a5,1807 # 270f <__heap_size+0x1f0f>
2001111c:	fce7dce3          	bge	a5,a4,200110f4 <main+0x74>
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:30
    uint64_t cyclecount = getcycles()-oldcount;
20011120:	20a1                	jal	20011168 <getcycles>
20011122:	862a                	mv	a2,a0
20011124:	86ae                	mv	a3,a1
20011126:	fe042503          	lw	a0,-32(s0)
2001112a:	fe442583          	lw	a1,-28(s0)
2001112e:	40a60733          	sub	a4,a2,a0
20011132:	883a                	mv	a6,a4
20011134:	01063833          	sltu	a6,a2,a6
20011138:	40b687b3          	sub	a5,a3,a1
2001113c:	410786b3          	sub	a3,a5,a6
20011140:	87b6                	mv	a5,a3
20011142:	fce42c23          	sw	a4,-40(s0)
20011146:	fcf42e23          	sw	a5,-36(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:32

    printf("cyc: %d\n", (unsigned int)cyclecount);
2001114a:	fd842783          	lw	a5,-40(s0)
2001114e:	85be                	mv	a1,a5
20011150:	200107b7          	lui	a5,0x20010
20011154:	36878513          	addi	a0,a5,872 # 20010368 <use_hfxosc+0x2c>
20011158:	711000ef          	jal	ra,20012068 <iprintf>
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:41
//    for (int i = 0; i < 16; ++i) {
//        printf("%02x ", out[i]);
//    }
//    printf("\n");

    return 0;
2001115c:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\src/hello.c:42
}
2001115e:	853e                	mv	a0,a5
20011160:	50ba                	lw	ra,172(sp)
20011162:	542a                	lw	s0,168(sp)
20011164:	614d                	addi	sp,sp,176
20011166:	8082                	ret

20011168 <getcycles>:
getcycles():
C:\Users\shu\wsFreedomStudio\simpira_test\src/getcycles.S:6
.text

.globl getcycles
.align 2
getcycles:
    csrr a1, mcycleh
20011168:	b80025f3          	csrr	a1,mcycleh
C:\Users\shu\wsFreedomStudio\simpira_test\src/getcycles.S:7
    csrr a0, mcycle
2001116c:	b0002573          	csrr	a0,mcycle
C:\Users\shu\wsFreedomStudio\simpira_test\src/getcycles.S:8
    csrr a2, mcycleh
20011170:	b8002673          	csrr	a2,mcycleh
C:\Users\shu\wsFreedomStudio\simpira_test\src/getcycles.S:9
    bne a1, a2, getcycles
20011174:	fec59ae3          	bne	a1,a2,20011168 <getcycles>
C:\Users\shu\wsFreedomStudio\simpira_test\src/getcycles.S:10
    ret
20011178:	8082                	ret
2001117a:	0000                	unimp
2001117c:	0000                	unimp
	...

20011180 <AES_128_keyschedule>:
AES_128_keyschedule():
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:278

.globl AES_128_keyschedule
.type AES_128_keyschedule, %function
.align 3
AES_128_keyschedule:
    lw      t0, 0(a0)
20011180:	00052283          	lw	t0,0(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:279
    lw      t1, 4(a0)
20011184:	00452303          	lw	t1,4(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:280
    lw      t2, 8(a0)
20011188:	00852383          	lw	t2,8(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:281
    lw      t3, 12(a0)
2001118c:	00c52e03          	lw	t3,12(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:284

    //c(2)
    addi    a0, a0, 16
20011190:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:285
    Fcb     3
20011192:	028d                	addi	t0,t0,3
20011194:	030d                	addi	t1,t1,3
20011196:	038d                	addi	t2,t2,3
20011198:	0e0d                	addi	t3,t3,3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:286
    sw      t0, 0(a0)
2001119a:	00552023          	sw	t0,0(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:287
    sw      t1, 4(a0)
2001119e:	00652223          	sw	t1,4(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:288
    sw      t2, 8(a0)
200111a2:	00752423          	sw	t2,8(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:289
    sw      t3, 12(a0)
200111a6:	01c52623          	sw	t3,12(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:292

    //c(3)
    addi    a0, a0, 16
200111aa:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:293
    Fcb     -1
200111ac:	12fd                	addi	t0,t0,-1
200111ae:	137d                	addi	t1,t1,-1
200111b0:	13fd                	addi	t2,t2,-1
200111b2:	1e7d                	addi	t3,t3,-1
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:294
    sw      t0, 0(a0)
200111b4:	00552023          	sw	t0,0(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:295
    sw      t1, 4(a0)
200111b8:	00652223          	sw	t1,4(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:296
    sw      t2, 8(a0)
200111bc:	00752423          	sw	t2,8(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:297
    sw      t3, 12(a0)
200111c0:	01c52623          	sw	t3,12(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:300

    //c(4)
    addi    a0, a0, 16
200111c4:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:301
    Fcb     3
200111c6:	028d                	addi	t0,t0,3
200111c8:	030d                	addi	t1,t1,3
200111ca:	038d                	addi	t2,t2,3
200111cc:	0e0d                	addi	t3,t3,3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:302
    sw      t0, 0(a0)
200111ce:	00552023          	sw	t0,0(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:303
    sw      t1, 4(a0)
200111d2:	00652223          	sw	t1,4(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:304
    sw      t2, 8(a0)
200111d6:	00752423          	sw	t2,8(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:305
    sw      t3, 12(a0)
200111da:	01c52623          	sw	t3,12(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:308

    //c(5)
    addi    a0, a0, 16
200111de:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:309
    Fcb     -1
200111e0:	12fd                	addi	t0,t0,-1
200111e2:	137d                	addi	t1,t1,-1
200111e4:	13fd                	addi	t2,t2,-1
200111e6:	1e7d                	addi	t3,t3,-1
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:310
    sw      t0, 0(a0)
200111e8:	00552023          	sw	t0,0(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:311
    sw      t1, 4(a0)
200111ec:	00652223          	sw	t1,4(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:312
    sw      t2, 8(a0)
200111f0:	00752423          	sw	t2,8(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:313
    sw      t3, 12(a0)
200111f4:	01c52623          	sw	t3,12(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:316

    //c(6)
    addi    a0, a0, 16
200111f8:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:317
    Fcb     3
200111fa:	028d                	addi	t0,t0,3
200111fc:	030d                	addi	t1,t1,3
200111fe:	038d                	addi	t2,t2,3
20011200:	0e0d                	addi	t3,t3,3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:318
    sw      t0, 0(a0)
20011202:	00552023          	sw	t0,0(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:319
    sw      t1, 4(a0)
20011206:	00652223          	sw	t1,4(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:320
    sw      t2, 8(a0)
2001120a:	00752423          	sw	t2,8(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:321
    sw      t3, 12(a0)
2001120e:	01c52623          	sw	t3,12(a0)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:322
    ret
20011212:	8082                	ret
20011214:	00000013          	nop

20011218 <AES_128_encrypt>:
AES_128_encrypt():
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:507
.align 3
AES_128_encrypt:
    // rk in a0, in in a1, out in a2

    // push s0-s5
    addi    sp, sp, -28
20011218:	1111                	addi	sp,sp,-28
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:508
    sw      s0,  4(sp)
2001121a:	c222                	sw	s0,4(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:509
    sw      s1,  8(sp)
2001121c:	c426                	sw	s1,8(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:510
    sw      s2, 12(sp)
2001121e:	c64a                	sw	s2,12(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:511
    sw      s3, 16(sp)
20011220:	c84e                	sw	s3,16(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:512
    sw      s4, 20(sp)
20011222:	ca52                	sw	s4,20(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:513
    sw      s5, 24(sp)
20011224:	cc56                	sw	s5,24(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:516

    // load input
    lw      a3,  0(a1)
20011226:	4194                	lw	a3,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:517
    lw      a4,  4(a1)
20011228:	41d8                	lw	a4,4(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:518
    lw      a5,  8(a1)
2001122a:	459c                	lw	a5,8(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:519
    lw      a6, 12(a1)
2001122c:	00c5a803          	lw	a6,12(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:522

    // load table addresses once
    la      t4, AESTable
20011230:	5ffefe97          	auipc	t4,0x5ffef
20011234:	dd0e8e93          	addi	t4,t4,-560 # 80000000 <metal_segment_data_target_start>
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:523
    addi    t5, t4, 4
20011238:	004e8f13          	addi	t5,t4,4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:524
    addi    s4, t4, 8
2001123c:	008e8a13          	addi	s4,t4,8
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:525
    addi    s5, t4, 12
20011240:	00ce8a93          	addi	s5,t4,12
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:528

    // load 0x00000ff0 in t6
    li      t6, 0xff0
20011244:	6f85                	lui	t6,0x1
20011246:	1fc1                	addi	t6,t6,-16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:531


    round  a3,a4,a5,a6, t0,t1,t2,t3,   0(a0), t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
20011248:	00052283          	lw	t0,0(a0)
2001124c:	00452303          	lw	t1,4(a0)
20011250:	00852383          	lw	t2,8(a0)
20011254:	00c52e03          	lw	t3,12(a0)
20011258:	0ff6f413          	zext.b	s0,a3
2001125c:	0ff77493          	zext.b	s1,a4
20011260:	0ff7f913          	zext.b	s2,a5
20011264:	0ff87993          	zext.b	s3,a6
20011268:	0412                	slli	s0,s0,0x4
2001126a:	0492                	slli	s1,s1,0x4
2001126c:	0912                	slli	s2,s2,0x4
2001126e:	0992                	slli	s3,s3,0x4
20011270:	01e405b3          	add	a1,s0,t5
20011274:	4180                	lw	s0,0(a1)
20011276:	01e485b3          	add	a1,s1,t5
2001127a:	4184                	lw	s1,0(a1)
2001127c:	01e905b3          	add	a1,s2,t5
20011280:	0005a903          	lw	s2,0(a1)
20011284:	01e985b3          	add	a1,s3,t5
20011288:	0005a983          	lw	s3,0(a1)
2001128c:	0082c2b3          	xor	t0,t0,s0
20011290:	00934333          	xor	t1,t1,s1
20011294:	0123c3b3          	xor	t2,t2,s2
20011298:	013e4e33          	xor	t3,t3,s3
2001129c:	8291                	srli	a3,a3,0x4
2001129e:	8311                	srli	a4,a4,0x4
200112a0:	8391                	srli	a5,a5,0x4
200112a2:	00485813          	srli	a6,a6,0x4
200112a6:	01f77433          	and	s0,a4,t6
200112aa:	01f7f4b3          	and	s1,a5,t6
200112ae:	01f87933          	and	s2,a6,t6
200112b2:	01f6f9b3          	and	s3,a3,t6
200112b6:	015405b3          	add	a1,s0,s5
200112ba:	4180                	lw	s0,0(a1)
200112bc:	015485b3          	add	a1,s1,s5
200112c0:	4184                	lw	s1,0(a1)
200112c2:	015905b3          	add	a1,s2,s5
200112c6:	0005a903          	lw	s2,0(a1)
200112ca:	015985b3          	add	a1,s3,s5
200112ce:	0005a983          	lw	s3,0(a1)
200112d2:	0082c2b3          	xor	t0,t0,s0
200112d6:	00934333          	xor	t1,t1,s1
200112da:	0123c3b3          	xor	t2,t2,s2
200112de:	013e4e33          	xor	t3,t3,s3
200112e2:	82a1                	srli	a3,a3,0x8
200112e4:	8321                	srli	a4,a4,0x8
200112e6:	83a1                	srli	a5,a5,0x8
200112e8:	00885813          	srli	a6,a6,0x8
200112ec:	01f7f433          	and	s0,a5,t6
200112f0:	01f874b3          	and	s1,a6,t6
200112f4:	01f6f933          	and	s2,a3,t6
200112f8:	01f779b3          	and	s3,a4,t6
200112fc:	01d405b3          	add	a1,s0,t4
20011300:	4180                	lw	s0,0(a1)
20011302:	01d485b3          	add	a1,s1,t4
20011306:	4184                	lw	s1,0(a1)
20011308:	01d905b3          	add	a1,s2,t4
2001130c:	0005a903          	lw	s2,0(a1)
20011310:	01d985b3          	add	a1,s3,t4
20011314:	0005a983          	lw	s3,0(a1)
20011318:	0082c2b3          	xor	t0,t0,s0
2001131c:	00934333          	xor	t1,t1,s1
20011320:	0123c3b3          	xor	t2,t2,s2
20011324:	013e4e33          	xor	t3,t3,s3
20011328:	82a1                	srli	a3,a3,0x8
2001132a:	8321                	srli	a4,a4,0x8
2001132c:	83a1                	srli	a5,a5,0x8
2001132e:	00885813          	srli	a6,a6,0x8
20011332:	01f87433          	and	s0,a6,t6
20011336:	01f6f4b3          	and	s1,a3,t6
2001133a:	01f77933          	and	s2,a4,t6
2001133e:	01f7f9b3          	and	s3,a5,t6
20011342:	014405b3          	add	a1,s0,s4
20011346:	4180                	lw	s0,0(a1)
20011348:	014485b3          	add	a1,s1,s4
2001134c:	4184                	lw	s1,0(a1)
2001134e:	014905b3          	add	a1,s2,s4
20011352:	0005a903          	lw	s2,0(a1)
20011356:	014985b3          	add	a1,s3,s4
2001135a:	0005a983          	lw	s3,0(a1)
2001135e:	0082c2b3          	xor	t0,t0,s0
20011362:	00934333          	xor	t1,t1,s1
20011366:	0123c3b3          	xor	t2,t2,s2
2001136a:	013e4e33          	xor	t3,t3,s3
2001136e:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:532
    zround t0,t1,t2,t3, a3,a4,a5,a6,          t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
20011370:	0ff2f413          	zext.b	s0,t0
20011374:	0ff37493          	zext.b	s1,t1
20011378:	0ff3f913          	zext.b	s2,t2
2001137c:	0ffe7993          	zext.b	s3,t3
20011380:	0412                	slli	s0,s0,0x4
20011382:	0492                	slli	s1,s1,0x4
20011384:	0912                	slli	s2,s2,0x4
20011386:	0992                	slli	s3,s3,0x4
20011388:	01e405b3          	add	a1,s0,t5
2001138c:	4194                	lw	a3,0(a1)
2001138e:	01e485b3          	add	a1,s1,t5
20011392:	4198                	lw	a4,0(a1)
20011394:	01e905b3          	add	a1,s2,t5
20011398:	419c                	lw	a5,0(a1)
2001139a:	01e985b3          	add	a1,s3,t5
2001139e:	0005a803          	lw	a6,0(a1)
200113a2:	0042d293          	srli	t0,t0,0x4
200113a6:	00435313          	srli	t1,t1,0x4
200113aa:	0043d393          	srli	t2,t2,0x4
200113ae:	004e5e13          	srli	t3,t3,0x4
200113b2:	01f37433          	and	s0,t1,t6
200113b6:	01f3f4b3          	and	s1,t2,t6
200113ba:	01fe7933          	and	s2,t3,t6
200113be:	01f2f9b3          	and	s3,t0,t6
200113c2:	015405b3          	add	a1,s0,s5
200113c6:	4180                	lw	s0,0(a1)
200113c8:	015485b3          	add	a1,s1,s5
200113cc:	4184                	lw	s1,0(a1)
200113ce:	015905b3          	add	a1,s2,s5
200113d2:	0005a903          	lw	s2,0(a1)
200113d6:	015985b3          	add	a1,s3,s5
200113da:	0005a983          	lw	s3,0(a1)
200113de:	8ea1                	xor	a3,a3,s0
200113e0:	8f25                	xor	a4,a4,s1
200113e2:	0127c7b3          	xor	a5,a5,s2
200113e6:	01384833          	xor	a6,a6,s3
200113ea:	0082d293          	srli	t0,t0,0x8
200113ee:	00835313          	srli	t1,t1,0x8
200113f2:	0083d393          	srli	t2,t2,0x8
200113f6:	008e5e13          	srli	t3,t3,0x8
200113fa:	01f3f433          	and	s0,t2,t6
200113fe:	01fe74b3          	and	s1,t3,t6
20011402:	01f2f933          	and	s2,t0,t6
20011406:	01f379b3          	and	s3,t1,t6
2001140a:	01d405b3          	add	a1,s0,t4
2001140e:	4180                	lw	s0,0(a1)
20011410:	01d485b3          	add	a1,s1,t4
20011414:	4184                	lw	s1,0(a1)
20011416:	01d905b3          	add	a1,s2,t4
2001141a:	0005a903          	lw	s2,0(a1)
2001141e:	01d985b3          	add	a1,s3,t4
20011422:	0005a983          	lw	s3,0(a1)
20011426:	8ea1                	xor	a3,a3,s0
20011428:	8f25                	xor	a4,a4,s1
2001142a:	0127c7b3          	xor	a5,a5,s2
2001142e:	01384833          	xor	a6,a6,s3
20011432:	0082d293          	srli	t0,t0,0x8
20011436:	00835313          	srli	t1,t1,0x8
2001143a:	0083d393          	srli	t2,t2,0x8
2001143e:	008e5e13          	srli	t3,t3,0x8
20011442:	01fe7433          	and	s0,t3,t6
20011446:	01f2f4b3          	and	s1,t0,t6
2001144a:	01f37933          	and	s2,t1,t6
2001144e:	01f3f9b3          	and	s3,t2,t6
20011452:	014405b3          	add	a1,s0,s4
20011456:	4180                	lw	s0,0(a1)
20011458:	014485b3          	add	a1,s1,s4
2001145c:	4184                	lw	s1,0(a1)
2001145e:	014905b3          	add	a1,s2,s4
20011462:	0005a903          	lw	s2,0(a1)
20011466:	014985b3          	add	a1,s3,s4
2001146a:	0005a983          	lw	s3,0(a1)
2001146e:	8ea1                	xor	a3,a3,s0
20011470:	8f25                	xor	a4,a4,s1
20011472:	0127c7b3          	xor	a5,a5,s2
20011476:	01384833          	xor	a6,a6,s3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:533
    round  a3,a4,a5,a6, t0,t1,t2,t3,   0(a0), t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
2001147a:	00052283          	lw	t0,0(a0)
2001147e:	00452303          	lw	t1,4(a0)
20011482:	00852383          	lw	t2,8(a0)
20011486:	00c52e03          	lw	t3,12(a0)
2001148a:	0ff6f413          	zext.b	s0,a3
2001148e:	0ff77493          	zext.b	s1,a4
20011492:	0ff7f913          	zext.b	s2,a5
20011496:	0ff87993          	zext.b	s3,a6
2001149a:	0412                	slli	s0,s0,0x4
2001149c:	0492                	slli	s1,s1,0x4
2001149e:	0912                	slli	s2,s2,0x4
200114a0:	0992                	slli	s3,s3,0x4
200114a2:	01e405b3          	add	a1,s0,t5
200114a6:	4180                	lw	s0,0(a1)
200114a8:	01e485b3          	add	a1,s1,t5
200114ac:	4184                	lw	s1,0(a1)
200114ae:	01e905b3          	add	a1,s2,t5
200114b2:	0005a903          	lw	s2,0(a1)
200114b6:	01e985b3          	add	a1,s3,t5
200114ba:	0005a983          	lw	s3,0(a1)
200114be:	0082c2b3          	xor	t0,t0,s0
200114c2:	00934333          	xor	t1,t1,s1
200114c6:	0123c3b3          	xor	t2,t2,s2
200114ca:	013e4e33          	xor	t3,t3,s3
200114ce:	8291                	srli	a3,a3,0x4
200114d0:	8311                	srli	a4,a4,0x4
200114d2:	8391                	srli	a5,a5,0x4
200114d4:	00485813          	srli	a6,a6,0x4
200114d8:	01f77433          	and	s0,a4,t6
200114dc:	01f7f4b3          	and	s1,a5,t6
200114e0:	01f87933          	and	s2,a6,t6
200114e4:	01f6f9b3          	and	s3,a3,t6
200114e8:	015405b3          	add	a1,s0,s5
200114ec:	4180                	lw	s0,0(a1)
200114ee:	015485b3          	add	a1,s1,s5
200114f2:	4184                	lw	s1,0(a1)
200114f4:	015905b3          	add	a1,s2,s5
200114f8:	0005a903          	lw	s2,0(a1)
200114fc:	015985b3          	add	a1,s3,s5
20011500:	0005a983          	lw	s3,0(a1)
20011504:	0082c2b3          	xor	t0,t0,s0
20011508:	00934333          	xor	t1,t1,s1
2001150c:	0123c3b3          	xor	t2,t2,s2
20011510:	013e4e33          	xor	t3,t3,s3
20011514:	82a1                	srli	a3,a3,0x8
20011516:	8321                	srli	a4,a4,0x8
20011518:	83a1                	srli	a5,a5,0x8
2001151a:	00885813          	srli	a6,a6,0x8
2001151e:	01f7f433          	and	s0,a5,t6
20011522:	01f874b3          	and	s1,a6,t6
20011526:	01f6f933          	and	s2,a3,t6
2001152a:	01f779b3          	and	s3,a4,t6
2001152e:	01d405b3          	add	a1,s0,t4
20011532:	4180                	lw	s0,0(a1)
20011534:	01d485b3          	add	a1,s1,t4
20011538:	4184                	lw	s1,0(a1)
2001153a:	01d905b3          	add	a1,s2,t4
2001153e:	0005a903          	lw	s2,0(a1)
20011542:	01d985b3          	add	a1,s3,t4
20011546:	0005a983          	lw	s3,0(a1)
2001154a:	0082c2b3          	xor	t0,t0,s0
2001154e:	00934333          	xor	t1,t1,s1
20011552:	0123c3b3          	xor	t2,t2,s2
20011556:	013e4e33          	xor	t3,t3,s3
2001155a:	82a1                	srli	a3,a3,0x8
2001155c:	8321                	srli	a4,a4,0x8
2001155e:	83a1                	srli	a5,a5,0x8
20011560:	00885813          	srli	a6,a6,0x8
20011564:	01f87433          	and	s0,a6,t6
20011568:	01f6f4b3          	and	s1,a3,t6
2001156c:	01f77933          	and	s2,a4,t6
20011570:	01f7f9b3          	and	s3,a5,t6
20011574:	014405b3          	add	a1,s0,s4
20011578:	4180                	lw	s0,0(a1)
2001157a:	014485b3          	add	a1,s1,s4
2001157e:	4184                	lw	s1,0(a1)
20011580:	014905b3          	add	a1,s2,s4
20011584:	0005a903          	lw	s2,0(a1)
20011588:	014985b3          	add	a1,s3,s4
2001158c:	0005a983          	lw	s3,0(a1)
20011590:	0082c2b3          	xor	t0,t0,s0
20011594:	00934333          	xor	t1,t1,s1
20011598:	0123c3b3          	xor	t2,t2,s2
2001159c:	013e4e33          	xor	t3,t3,s3
200115a0:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:534
    zround t0,t1,t2,t3, a3,a4,a5,a6,          t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
200115a2:	0ff2f413          	zext.b	s0,t0
200115a6:	0ff37493          	zext.b	s1,t1
200115aa:	0ff3f913          	zext.b	s2,t2
200115ae:	0ffe7993          	zext.b	s3,t3
200115b2:	0412                	slli	s0,s0,0x4
200115b4:	0492                	slli	s1,s1,0x4
200115b6:	0912                	slli	s2,s2,0x4
200115b8:	0992                	slli	s3,s3,0x4
200115ba:	01e405b3          	add	a1,s0,t5
200115be:	4194                	lw	a3,0(a1)
200115c0:	01e485b3          	add	a1,s1,t5
200115c4:	4198                	lw	a4,0(a1)
200115c6:	01e905b3          	add	a1,s2,t5
200115ca:	419c                	lw	a5,0(a1)
200115cc:	01e985b3          	add	a1,s3,t5
200115d0:	0005a803          	lw	a6,0(a1)
200115d4:	0042d293          	srli	t0,t0,0x4
200115d8:	00435313          	srli	t1,t1,0x4
200115dc:	0043d393          	srli	t2,t2,0x4
200115e0:	004e5e13          	srli	t3,t3,0x4
200115e4:	01f37433          	and	s0,t1,t6
200115e8:	01f3f4b3          	and	s1,t2,t6
200115ec:	01fe7933          	and	s2,t3,t6
200115f0:	01f2f9b3          	and	s3,t0,t6
200115f4:	015405b3          	add	a1,s0,s5
200115f8:	4180                	lw	s0,0(a1)
200115fa:	015485b3          	add	a1,s1,s5
200115fe:	4184                	lw	s1,0(a1)
20011600:	015905b3          	add	a1,s2,s5
20011604:	0005a903          	lw	s2,0(a1)
20011608:	015985b3          	add	a1,s3,s5
2001160c:	0005a983          	lw	s3,0(a1)
20011610:	8ea1                	xor	a3,a3,s0
20011612:	8f25                	xor	a4,a4,s1
20011614:	0127c7b3          	xor	a5,a5,s2
20011618:	01384833          	xor	a6,a6,s3
2001161c:	0082d293          	srli	t0,t0,0x8
20011620:	00835313          	srli	t1,t1,0x8
20011624:	0083d393          	srli	t2,t2,0x8
20011628:	008e5e13          	srli	t3,t3,0x8
2001162c:	01f3f433          	and	s0,t2,t6
20011630:	01fe74b3          	and	s1,t3,t6
20011634:	01f2f933          	and	s2,t0,t6
20011638:	01f379b3          	and	s3,t1,t6
2001163c:	01d405b3          	add	a1,s0,t4
20011640:	4180                	lw	s0,0(a1)
20011642:	01d485b3          	add	a1,s1,t4
20011646:	4184                	lw	s1,0(a1)
20011648:	01d905b3          	add	a1,s2,t4
2001164c:	0005a903          	lw	s2,0(a1)
20011650:	01d985b3          	add	a1,s3,t4
20011654:	0005a983          	lw	s3,0(a1)
20011658:	8ea1                	xor	a3,a3,s0
2001165a:	8f25                	xor	a4,a4,s1
2001165c:	0127c7b3          	xor	a5,a5,s2
20011660:	01384833          	xor	a6,a6,s3
20011664:	0082d293          	srli	t0,t0,0x8
20011668:	00835313          	srli	t1,t1,0x8
2001166c:	0083d393          	srli	t2,t2,0x8
20011670:	008e5e13          	srli	t3,t3,0x8
20011674:	01fe7433          	and	s0,t3,t6
20011678:	01f2f4b3          	and	s1,t0,t6
2001167c:	01f37933          	and	s2,t1,t6
20011680:	01f3f9b3          	and	s3,t2,t6
20011684:	014405b3          	add	a1,s0,s4
20011688:	4180                	lw	s0,0(a1)
2001168a:	014485b3          	add	a1,s1,s4
2001168e:	4184                	lw	s1,0(a1)
20011690:	014905b3          	add	a1,s2,s4
20011694:	0005a903          	lw	s2,0(a1)
20011698:	014985b3          	add	a1,s3,s4
2001169c:	0005a983          	lw	s3,0(a1)
200116a0:	8ea1                	xor	a3,a3,s0
200116a2:	8f25                	xor	a4,a4,s1
200116a4:	0127c7b3          	xor	a5,a5,s2
200116a8:	01384833          	xor	a6,a6,s3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:535
    round  a3,a4,a5,a6, t0,t1,t2,t3,   0(a0), t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
200116ac:	00052283          	lw	t0,0(a0)
200116b0:	00452303          	lw	t1,4(a0)
200116b4:	00852383          	lw	t2,8(a0)
200116b8:	00c52e03          	lw	t3,12(a0)
200116bc:	0ff6f413          	zext.b	s0,a3
200116c0:	0ff77493          	zext.b	s1,a4
200116c4:	0ff7f913          	zext.b	s2,a5
200116c8:	0ff87993          	zext.b	s3,a6
200116cc:	0412                	slli	s0,s0,0x4
200116ce:	0492                	slli	s1,s1,0x4
200116d0:	0912                	slli	s2,s2,0x4
200116d2:	0992                	slli	s3,s3,0x4
200116d4:	01e405b3          	add	a1,s0,t5
200116d8:	4180                	lw	s0,0(a1)
200116da:	01e485b3          	add	a1,s1,t5
200116de:	4184                	lw	s1,0(a1)
200116e0:	01e905b3          	add	a1,s2,t5
200116e4:	0005a903          	lw	s2,0(a1)
200116e8:	01e985b3          	add	a1,s3,t5
200116ec:	0005a983          	lw	s3,0(a1)
200116f0:	0082c2b3          	xor	t0,t0,s0
200116f4:	00934333          	xor	t1,t1,s1
200116f8:	0123c3b3          	xor	t2,t2,s2
200116fc:	013e4e33          	xor	t3,t3,s3
20011700:	8291                	srli	a3,a3,0x4
20011702:	8311                	srli	a4,a4,0x4
20011704:	8391                	srli	a5,a5,0x4
20011706:	00485813          	srli	a6,a6,0x4
2001170a:	01f77433          	and	s0,a4,t6
2001170e:	01f7f4b3          	and	s1,a5,t6
20011712:	01f87933          	and	s2,a6,t6
20011716:	01f6f9b3          	and	s3,a3,t6
2001171a:	015405b3          	add	a1,s0,s5
2001171e:	4180                	lw	s0,0(a1)
20011720:	015485b3          	add	a1,s1,s5
20011724:	4184                	lw	s1,0(a1)
20011726:	015905b3          	add	a1,s2,s5
2001172a:	0005a903          	lw	s2,0(a1)
2001172e:	015985b3          	add	a1,s3,s5
20011732:	0005a983          	lw	s3,0(a1)
20011736:	0082c2b3          	xor	t0,t0,s0
2001173a:	00934333          	xor	t1,t1,s1
2001173e:	0123c3b3          	xor	t2,t2,s2
20011742:	013e4e33          	xor	t3,t3,s3
20011746:	82a1                	srli	a3,a3,0x8
20011748:	8321                	srli	a4,a4,0x8
2001174a:	83a1                	srli	a5,a5,0x8
2001174c:	00885813          	srli	a6,a6,0x8
20011750:	01f7f433          	and	s0,a5,t6
20011754:	01f874b3          	and	s1,a6,t6
20011758:	01f6f933          	and	s2,a3,t6
2001175c:	01f779b3          	and	s3,a4,t6
20011760:	01d405b3          	add	a1,s0,t4
20011764:	4180                	lw	s0,0(a1)
20011766:	01d485b3          	add	a1,s1,t4
2001176a:	4184                	lw	s1,0(a1)
2001176c:	01d905b3          	add	a1,s2,t4
20011770:	0005a903          	lw	s2,0(a1)
20011774:	01d985b3          	add	a1,s3,t4
20011778:	0005a983          	lw	s3,0(a1)
2001177c:	0082c2b3          	xor	t0,t0,s0
20011780:	00934333          	xor	t1,t1,s1
20011784:	0123c3b3          	xor	t2,t2,s2
20011788:	013e4e33          	xor	t3,t3,s3
2001178c:	82a1                	srli	a3,a3,0x8
2001178e:	8321                	srli	a4,a4,0x8
20011790:	83a1                	srli	a5,a5,0x8
20011792:	00885813          	srli	a6,a6,0x8
20011796:	01f87433          	and	s0,a6,t6
2001179a:	01f6f4b3          	and	s1,a3,t6
2001179e:	01f77933          	and	s2,a4,t6
200117a2:	01f7f9b3          	and	s3,a5,t6
200117a6:	014405b3          	add	a1,s0,s4
200117aa:	4180                	lw	s0,0(a1)
200117ac:	014485b3          	add	a1,s1,s4
200117b0:	4184                	lw	s1,0(a1)
200117b2:	014905b3          	add	a1,s2,s4
200117b6:	0005a903          	lw	s2,0(a1)
200117ba:	014985b3          	add	a1,s3,s4
200117be:	0005a983          	lw	s3,0(a1)
200117c2:	0082c2b3          	xor	t0,t0,s0
200117c6:	00934333          	xor	t1,t1,s1
200117ca:	0123c3b3          	xor	t2,t2,s2
200117ce:	013e4e33          	xor	t3,t3,s3
200117d2:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:536
    zround t0,t1,t2,t3, a3,a4,a5,a6,          t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
200117d4:	0ff2f413          	zext.b	s0,t0
200117d8:	0ff37493          	zext.b	s1,t1
200117dc:	0ff3f913          	zext.b	s2,t2
200117e0:	0ffe7993          	zext.b	s3,t3
200117e4:	0412                	slli	s0,s0,0x4
200117e6:	0492                	slli	s1,s1,0x4
200117e8:	0912                	slli	s2,s2,0x4
200117ea:	0992                	slli	s3,s3,0x4
200117ec:	01e405b3          	add	a1,s0,t5
200117f0:	4194                	lw	a3,0(a1)
200117f2:	01e485b3          	add	a1,s1,t5
200117f6:	4198                	lw	a4,0(a1)
200117f8:	01e905b3          	add	a1,s2,t5
200117fc:	419c                	lw	a5,0(a1)
200117fe:	01e985b3          	add	a1,s3,t5
20011802:	0005a803          	lw	a6,0(a1)
20011806:	0042d293          	srli	t0,t0,0x4
2001180a:	00435313          	srli	t1,t1,0x4
2001180e:	0043d393          	srli	t2,t2,0x4
20011812:	004e5e13          	srli	t3,t3,0x4
20011816:	01f37433          	and	s0,t1,t6
2001181a:	01f3f4b3          	and	s1,t2,t6
2001181e:	01fe7933          	and	s2,t3,t6
20011822:	01f2f9b3          	and	s3,t0,t6
20011826:	015405b3          	add	a1,s0,s5
2001182a:	4180                	lw	s0,0(a1)
2001182c:	015485b3          	add	a1,s1,s5
20011830:	4184                	lw	s1,0(a1)
20011832:	015905b3          	add	a1,s2,s5
20011836:	0005a903          	lw	s2,0(a1)
2001183a:	015985b3          	add	a1,s3,s5
2001183e:	0005a983          	lw	s3,0(a1)
20011842:	8ea1                	xor	a3,a3,s0
20011844:	8f25                	xor	a4,a4,s1
20011846:	0127c7b3          	xor	a5,a5,s2
2001184a:	01384833          	xor	a6,a6,s3
2001184e:	0082d293          	srli	t0,t0,0x8
20011852:	00835313          	srli	t1,t1,0x8
20011856:	0083d393          	srli	t2,t2,0x8
2001185a:	008e5e13          	srli	t3,t3,0x8
2001185e:	01f3f433          	and	s0,t2,t6
20011862:	01fe74b3          	and	s1,t3,t6
20011866:	01f2f933          	and	s2,t0,t6
2001186a:	01f379b3          	and	s3,t1,t6
2001186e:	01d405b3          	add	a1,s0,t4
20011872:	4180                	lw	s0,0(a1)
20011874:	01d485b3          	add	a1,s1,t4
20011878:	4184                	lw	s1,0(a1)
2001187a:	01d905b3          	add	a1,s2,t4
2001187e:	0005a903          	lw	s2,0(a1)
20011882:	01d985b3          	add	a1,s3,t4
20011886:	0005a983          	lw	s3,0(a1)
2001188a:	8ea1                	xor	a3,a3,s0
2001188c:	8f25                	xor	a4,a4,s1
2001188e:	0127c7b3          	xor	a5,a5,s2
20011892:	01384833          	xor	a6,a6,s3
20011896:	0082d293          	srli	t0,t0,0x8
2001189a:	00835313          	srli	t1,t1,0x8
2001189e:	0083d393          	srli	t2,t2,0x8
200118a2:	008e5e13          	srli	t3,t3,0x8
200118a6:	01fe7433          	and	s0,t3,t6
200118aa:	01f2f4b3          	and	s1,t0,t6
200118ae:	01f37933          	and	s2,t1,t6
200118b2:	01f3f9b3          	and	s3,t2,t6
200118b6:	014405b3          	add	a1,s0,s4
200118ba:	4180                	lw	s0,0(a1)
200118bc:	014485b3          	add	a1,s1,s4
200118c0:	4184                	lw	s1,0(a1)
200118c2:	014905b3          	add	a1,s2,s4
200118c6:	0005a903          	lw	s2,0(a1)
200118ca:	014985b3          	add	a1,s3,s4
200118ce:	0005a983          	lw	s3,0(a1)
200118d2:	8ea1                	xor	a3,a3,s0
200118d4:	8f25                	xor	a4,a4,s1
200118d6:	0127c7b3          	xor	a5,a5,s2
200118da:	01384833          	xor	a6,a6,s3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:537
    round  a3,a4,a5,a6, t0,t1,t2,t3,   0(a0), t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
200118de:	00052283          	lw	t0,0(a0)
200118e2:	00452303          	lw	t1,4(a0)
200118e6:	00852383          	lw	t2,8(a0)
200118ea:	00c52e03          	lw	t3,12(a0)
200118ee:	0ff6f413          	zext.b	s0,a3
200118f2:	0ff77493          	zext.b	s1,a4
200118f6:	0ff7f913          	zext.b	s2,a5
200118fa:	0ff87993          	zext.b	s3,a6
200118fe:	0412                	slli	s0,s0,0x4
20011900:	0492                	slli	s1,s1,0x4
20011902:	0912                	slli	s2,s2,0x4
20011904:	0992                	slli	s3,s3,0x4
20011906:	01e405b3          	add	a1,s0,t5
2001190a:	4180                	lw	s0,0(a1)
2001190c:	01e485b3          	add	a1,s1,t5
20011910:	4184                	lw	s1,0(a1)
20011912:	01e905b3          	add	a1,s2,t5
20011916:	0005a903          	lw	s2,0(a1)
2001191a:	01e985b3          	add	a1,s3,t5
2001191e:	0005a983          	lw	s3,0(a1)
20011922:	0082c2b3          	xor	t0,t0,s0
20011926:	00934333          	xor	t1,t1,s1
2001192a:	0123c3b3          	xor	t2,t2,s2
2001192e:	013e4e33          	xor	t3,t3,s3
20011932:	8291                	srli	a3,a3,0x4
20011934:	8311                	srli	a4,a4,0x4
20011936:	8391                	srli	a5,a5,0x4
20011938:	00485813          	srli	a6,a6,0x4
2001193c:	01f77433          	and	s0,a4,t6
20011940:	01f7f4b3          	and	s1,a5,t6
20011944:	01f87933          	and	s2,a6,t6
20011948:	01f6f9b3          	and	s3,a3,t6
2001194c:	015405b3          	add	a1,s0,s5
20011950:	4180                	lw	s0,0(a1)
20011952:	015485b3          	add	a1,s1,s5
20011956:	4184                	lw	s1,0(a1)
20011958:	015905b3          	add	a1,s2,s5
2001195c:	0005a903          	lw	s2,0(a1)
20011960:	015985b3          	add	a1,s3,s5
20011964:	0005a983          	lw	s3,0(a1)
20011968:	0082c2b3          	xor	t0,t0,s0
2001196c:	00934333          	xor	t1,t1,s1
20011970:	0123c3b3          	xor	t2,t2,s2
20011974:	013e4e33          	xor	t3,t3,s3
20011978:	82a1                	srli	a3,a3,0x8
2001197a:	8321                	srli	a4,a4,0x8
2001197c:	83a1                	srli	a5,a5,0x8
2001197e:	00885813          	srli	a6,a6,0x8
20011982:	01f7f433          	and	s0,a5,t6
20011986:	01f874b3          	and	s1,a6,t6
2001198a:	01f6f933          	and	s2,a3,t6
2001198e:	01f779b3          	and	s3,a4,t6
20011992:	01d405b3          	add	a1,s0,t4
20011996:	4180                	lw	s0,0(a1)
20011998:	01d485b3          	add	a1,s1,t4
2001199c:	4184                	lw	s1,0(a1)
2001199e:	01d905b3          	add	a1,s2,t4
200119a2:	0005a903          	lw	s2,0(a1)
200119a6:	01d985b3          	add	a1,s3,t4
200119aa:	0005a983          	lw	s3,0(a1)
200119ae:	0082c2b3          	xor	t0,t0,s0
200119b2:	00934333          	xor	t1,t1,s1
200119b6:	0123c3b3          	xor	t2,t2,s2
200119ba:	013e4e33          	xor	t3,t3,s3
200119be:	82a1                	srli	a3,a3,0x8
200119c0:	8321                	srli	a4,a4,0x8
200119c2:	83a1                	srli	a5,a5,0x8
200119c4:	00885813          	srli	a6,a6,0x8
200119c8:	01f87433          	and	s0,a6,t6
200119cc:	01f6f4b3          	and	s1,a3,t6
200119d0:	01f77933          	and	s2,a4,t6
200119d4:	01f7f9b3          	and	s3,a5,t6
200119d8:	014405b3          	add	a1,s0,s4
200119dc:	4180                	lw	s0,0(a1)
200119de:	014485b3          	add	a1,s1,s4
200119e2:	4184                	lw	s1,0(a1)
200119e4:	014905b3          	add	a1,s2,s4
200119e8:	0005a903          	lw	s2,0(a1)
200119ec:	014985b3          	add	a1,s3,s4
200119f0:	0005a983          	lw	s3,0(a1)
200119f4:	0082c2b3          	xor	t0,t0,s0
200119f8:	00934333          	xor	t1,t1,s1
200119fc:	0123c3b3          	xor	t2,t2,s2
20011a00:	013e4e33          	xor	t3,t3,s3
20011a04:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:538
    zround t0,t1,t2,t3, a3,a4,a5,a6,          t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
20011a06:	0ff2f413          	zext.b	s0,t0
20011a0a:	0ff37493          	zext.b	s1,t1
20011a0e:	0ff3f913          	zext.b	s2,t2
20011a12:	0ffe7993          	zext.b	s3,t3
20011a16:	0412                	slli	s0,s0,0x4
20011a18:	0492                	slli	s1,s1,0x4
20011a1a:	0912                	slli	s2,s2,0x4
20011a1c:	0992                	slli	s3,s3,0x4
20011a1e:	01e405b3          	add	a1,s0,t5
20011a22:	4194                	lw	a3,0(a1)
20011a24:	01e485b3          	add	a1,s1,t5
20011a28:	4198                	lw	a4,0(a1)
20011a2a:	01e905b3          	add	a1,s2,t5
20011a2e:	419c                	lw	a5,0(a1)
20011a30:	01e985b3          	add	a1,s3,t5
20011a34:	0005a803          	lw	a6,0(a1)
20011a38:	0042d293          	srli	t0,t0,0x4
20011a3c:	00435313          	srli	t1,t1,0x4
20011a40:	0043d393          	srli	t2,t2,0x4
20011a44:	004e5e13          	srli	t3,t3,0x4
20011a48:	01f37433          	and	s0,t1,t6
20011a4c:	01f3f4b3          	and	s1,t2,t6
20011a50:	01fe7933          	and	s2,t3,t6
20011a54:	01f2f9b3          	and	s3,t0,t6
20011a58:	015405b3          	add	a1,s0,s5
20011a5c:	4180                	lw	s0,0(a1)
20011a5e:	015485b3          	add	a1,s1,s5
20011a62:	4184                	lw	s1,0(a1)
20011a64:	015905b3          	add	a1,s2,s5
20011a68:	0005a903          	lw	s2,0(a1)
20011a6c:	015985b3          	add	a1,s3,s5
20011a70:	0005a983          	lw	s3,0(a1)
20011a74:	8ea1                	xor	a3,a3,s0
20011a76:	8f25                	xor	a4,a4,s1
20011a78:	0127c7b3          	xor	a5,a5,s2
20011a7c:	01384833          	xor	a6,a6,s3
20011a80:	0082d293          	srli	t0,t0,0x8
20011a84:	00835313          	srli	t1,t1,0x8
20011a88:	0083d393          	srli	t2,t2,0x8
20011a8c:	008e5e13          	srli	t3,t3,0x8
20011a90:	01f3f433          	and	s0,t2,t6
20011a94:	01fe74b3          	and	s1,t3,t6
20011a98:	01f2f933          	and	s2,t0,t6
20011a9c:	01f379b3          	and	s3,t1,t6
20011aa0:	01d405b3          	add	a1,s0,t4
20011aa4:	4180                	lw	s0,0(a1)
20011aa6:	01d485b3          	add	a1,s1,t4
20011aaa:	4184                	lw	s1,0(a1)
20011aac:	01d905b3          	add	a1,s2,t4
20011ab0:	0005a903          	lw	s2,0(a1)
20011ab4:	01d985b3          	add	a1,s3,t4
20011ab8:	0005a983          	lw	s3,0(a1)
20011abc:	8ea1                	xor	a3,a3,s0
20011abe:	8f25                	xor	a4,a4,s1
20011ac0:	0127c7b3          	xor	a5,a5,s2
20011ac4:	01384833          	xor	a6,a6,s3
20011ac8:	0082d293          	srli	t0,t0,0x8
20011acc:	00835313          	srli	t1,t1,0x8
20011ad0:	0083d393          	srli	t2,t2,0x8
20011ad4:	008e5e13          	srli	t3,t3,0x8
20011ad8:	01fe7433          	and	s0,t3,t6
20011adc:	01f2f4b3          	and	s1,t0,t6
20011ae0:	01f37933          	and	s2,t1,t6
20011ae4:	01f3f9b3          	and	s3,t2,t6
20011ae8:	014405b3          	add	a1,s0,s4
20011aec:	4180                	lw	s0,0(a1)
20011aee:	014485b3          	add	a1,s1,s4
20011af2:	4184                	lw	s1,0(a1)
20011af4:	014905b3          	add	a1,s2,s4
20011af8:	0005a903          	lw	s2,0(a1)
20011afc:	014985b3          	add	a1,s3,s4
20011b00:	0005a983          	lw	s3,0(a1)
20011b04:	8ea1                	xor	a3,a3,s0
20011b06:	8f25                	xor	a4,a4,s1
20011b08:	0127c7b3          	xor	a5,a5,s2
20011b0c:	01384833          	xor	a6,a6,s3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:539
    round  a3,a4,a5,a6, t0,t1,t2,t3,   0(a0), t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
20011b10:	00052283          	lw	t0,0(a0)
20011b14:	00452303          	lw	t1,4(a0)
20011b18:	00852383          	lw	t2,8(a0)
20011b1c:	00c52e03          	lw	t3,12(a0)
20011b20:	0ff6f413          	zext.b	s0,a3
20011b24:	0ff77493          	zext.b	s1,a4
20011b28:	0ff7f913          	zext.b	s2,a5
20011b2c:	0ff87993          	zext.b	s3,a6
20011b30:	0412                	slli	s0,s0,0x4
20011b32:	0492                	slli	s1,s1,0x4
20011b34:	0912                	slli	s2,s2,0x4
20011b36:	0992                	slli	s3,s3,0x4
20011b38:	01e405b3          	add	a1,s0,t5
20011b3c:	4180                	lw	s0,0(a1)
20011b3e:	01e485b3          	add	a1,s1,t5
20011b42:	4184                	lw	s1,0(a1)
20011b44:	01e905b3          	add	a1,s2,t5
20011b48:	0005a903          	lw	s2,0(a1)
20011b4c:	01e985b3          	add	a1,s3,t5
20011b50:	0005a983          	lw	s3,0(a1)
20011b54:	0082c2b3          	xor	t0,t0,s0
20011b58:	00934333          	xor	t1,t1,s1
20011b5c:	0123c3b3          	xor	t2,t2,s2
20011b60:	013e4e33          	xor	t3,t3,s3
20011b64:	8291                	srli	a3,a3,0x4
20011b66:	8311                	srli	a4,a4,0x4
20011b68:	8391                	srli	a5,a5,0x4
20011b6a:	00485813          	srli	a6,a6,0x4
20011b6e:	01f77433          	and	s0,a4,t6
20011b72:	01f7f4b3          	and	s1,a5,t6
20011b76:	01f87933          	and	s2,a6,t6
20011b7a:	01f6f9b3          	and	s3,a3,t6
20011b7e:	015405b3          	add	a1,s0,s5
20011b82:	4180                	lw	s0,0(a1)
20011b84:	015485b3          	add	a1,s1,s5
20011b88:	4184                	lw	s1,0(a1)
20011b8a:	015905b3          	add	a1,s2,s5
20011b8e:	0005a903          	lw	s2,0(a1)
20011b92:	015985b3          	add	a1,s3,s5
20011b96:	0005a983          	lw	s3,0(a1)
20011b9a:	0082c2b3          	xor	t0,t0,s0
20011b9e:	00934333          	xor	t1,t1,s1
20011ba2:	0123c3b3          	xor	t2,t2,s2
20011ba6:	013e4e33          	xor	t3,t3,s3
20011baa:	82a1                	srli	a3,a3,0x8
20011bac:	8321                	srli	a4,a4,0x8
20011bae:	83a1                	srli	a5,a5,0x8
20011bb0:	00885813          	srli	a6,a6,0x8
20011bb4:	01f7f433          	and	s0,a5,t6
20011bb8:	01f874b3          	and	s1,a6,t6
20011bbc:	01f6f933          	and	s2,a3,t6
20011bc0:	01f779b3          	and	s3,a4,t6
20011bc4:	01d405b3          	add	a1,s0,t4
20011bc8:	4180                	lw	s0,0(a1)
20011bca:	01d485b3          	add	a1,s1,t4
20011bce:	4184                	lw	s1,0(a1)
20011bd0:	01d905b3          	add	a1,s2,t4
20011bd4:	0005a903          	lw	s2,0(a1)
20011bd8:	01d985b3          	add	a1,s3,t4
20011bdc:	0005a983          	lw	s3,0(a1)
20011be0:	0082c2b3          	xor	t0,t0,s0
20011be4:	00934333          	xor	t1,t1,s1
20011be8:	0123c3b3          	xor	t2,t2,s2
20011bec:	013e4e33          	xor	t3,t3,s3
20011bf0:	82a1                	srli	a3,a3,0x8
20011bf2:	8321                	srli	a4,a4,0x8
20011bf4:	83a1                	srli	a5,a5,0x8
20011bf6:	00885813          	srli	a6,a6,0x8
20011bfa:	01f87433          	and	s0,a6,t6
20011bfe:	01f6f4b3          	and	s1,a3,t6
20011c02:	01f77933          	and	s2,a4,t6
20011c06:	01f7f9b3          	and	s3,a5,t6
20011c0a:	014405b3          	add	a1,s0,s4
20011c0e:	4180                	lw	s0,0(a1)
20011c10:	014485b3          	add	a1,s1,s4
20011c14:	4184                	lw	s1,0(a1)
20011c16:	014905b3          	add	a1,s2,s4
20011c1a:	0005a903          	lw	s2,0(a1)
20011c1e:	014985b3          	add	a1,s3,s4
20011c22:	0005a983          	lw	s3,0(a1)
20011c26:	0082c2b3          	xor	t0,t0,s0
20011c2a:	00934333          	xor	t1,t1,s1
20011c2e:	0123c3b3          	xor	t2,t2,s2
20011c32:	013e4e33          	xor	t3,t3,s3
20011c36:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:540
    zround t0,t1,t2,t3, a3,a4,a5,a6,          t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
20011c38:	0ff2f413          	zext.b	s0,t0
20011c3c:	0ff37493          	zext.b	s1,t1
20011c40:	0ff3f913          	zext.b	s2,t2
20011c44:	0ffe7993          	zext.b	s3,t3
20011c48:	0412                	slli	s0,s0,0x4
20011c4a:	0492                	slli	s1,s1,0x4
20011c4c:	0912                	slli	s2,s2,0x4
20011c4e:	0992                	slli	s3,s3,0x4
20011c50:	01e405b3          	add	a1,s0,t5
20011c54:	4194                	lw	a3,0(a1)
20011c56:	01e485b3          	add	a1,s1,t5
20011c5a:	4198                	lw	a4,0(a1)
20011c5c:	01e905b3          	add	a1,s2,t5
20011c60:	419c                	lw	a5,0(a1)
20011c62:	01e985b3          	add	a1,s3,t5
20011c66:	0005a803          	lw	a6,0(a1)
20011c6a:	0042d293          	srli	t0,t0,0x4
20011c6e:	00435313          	srli	t1,t1,0x4
20011c72:	0043d393          	srli	t2,t2,0x4
20011c76:	004e5e13          	srli	t3,t3,0x4
20011c7a:	01f37433          	and	s0,t1,t6
20011c7e:	01f3f4b3          	and	s1,t2,t6
20011c82:	01fe7933          	and	s2,t3,t6
20011c86:	01f2f9b3          	and	s3,t0,t6
20011c8a:	015405b3          	add	a1,s0,s5
20011c8e:	4180                	lw	s0,0(a1)
20011c90:	015485b3          	add	a1,s1,s5
20011c94:	4184                	lw	s1,0(a1)
20011c96:	015905b3          	add	a1,s2,s5
20011c9a:	0005a903          	lw	s2,0(a1)
20011c9e:	015985b3          	add	a1,s3,s5
20011ca2:	0005a983          	lw	s3,0(a1)
20011ca6:	8ea1                	xor	a3,a3,s0
20011ca8:	8f25                	xor	a4,a4,s1
20011caa:	0127c7b3          	xor	a5,a5,s2
20011cae:	01384833          	xor	a6,a6,s3
20011cb2:	0082d293          	srli	t0,t0,0x8
20011cb6:	00835313          	srli	t1,t1,0x8
20011cba:	0083d393          	srli	t2,t2,0x8
20011cbe:	008e5e13          	srli	t3,t3,0x8
20011cc2:	01f3f433          	and	s0,t2,t6
20011cc6:	01fe74b3          	and	s1,t3,t6
20011cca:	01f2f933          	and	s2,t0,t6
20011cce:	01f379b3          	and	s3,t1,t6
20011cd2:	01d405b3          	add	a1,s0,t4
20011cd6:	4180                	lw	s0,0(a1)
20011cd8:	01d485b3          	add	a1,s1,t4
20011cdc:	4184                	lw	s1,0(a1)
20011cde:	01d905b3          	add	a1,s2,t4
20011ce2:	0005a903          	lw	s2,0(a1)
20011ce6:	01d985b3          	add	a1,s3,t4
20011cea:	0005a983          	lw	s3,0(a1)
20011cee:	8ea1                	xor	a3,a3,s0
20011cf0:	8f25                	xor	a4,a4,s1
20011cf2:	0127c7b3          	xor	a5,a5,s2
20011cf6:	01384833          	xor	a6,a6,s3
20011cfa:	0082d293          	srli	t0,t0,0x8
20011cfe:	00835313          	srli	t1,t1,0x8
20011d02:	0083d393          	srli	t2,t2,0x8
20011d06:	008e5e13          	srli	t3,t3,0x8
20011d0a:	01fe7433          	and	s0,t3,t6
20011d0e:	01f2f4b3          	and	s1,t0,t6
20011d12:	01f37933          	and	s2,t1,t6
20011d16:	01f3f9b3          	and	s3,t2,t6
20011d1a:	014405b3          	add	a1,s0,s4
20011d1e:	4180                	lw	s0,0(a1)
20011d20:	014485b3          	add	a1,s1,s4
20011d24:	4184                	lw	s1,0(a1)
20011d26:	014905b3          	add	a1,s2,s4
20011d2a:	0005a903          	lw	s2,0(a1)
20011d2e:	014985b3          	add	a1,s3,s4
20011d32:	0005a983          	lw	s3,0(a1)
20011d36:	8ea1                	xor	a3,a3,s0
20011d38:	8f25                	xor	a4,a4,s1
20011d3a:	0127c7b3          	xor	a5,a5,s2
20011d3e:	01384833          	xor	a6,a6,s3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:541
    round  a3,a4,a5,a6, t0,t1,t2,t3,   0(a0), t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
20011d42:	00052283          	lw	t0,0(a0)
20011d46:	00452303          	lw	t1,4(a0)
20011d4a:	00852383          	lw	t2,8(a0)
20011d4e:	00c52e03          	lw	t3,12(a0)
20011d52:	0ff6f413          	zext.b	s0,a3
20011d56:	0ff77493          	zext.b	s1,a4
20011d5a:	0ff7f913          	zext.b	s2,a5
20011d5e:	0ff87993          	zext.b	s3,a6
20011d62:	0412                	slli	s0,s0,0x4
20011d64:	0492                	slli	s1,s1,0x4
20011d66:	0912                	slli	s2,s2,0x4
20011d68:	0992                	slli	s3,s3,0x4
20011d6a:	01e405b3          	add	a1,s0,t5
20011d6e:	4180                	lw	s0,0(a1)
20011d70:	01e485b3          	add	a1,s1,t5
20011d74:	4184                	lw	s1,0(a1)
20011d76:	01e905b3          	add	a1,s2,t5
20011d7a:	0005a903          	lw	s2,0(a1)
20011d7e:	01e985b3          	add	a1,s3,t5
20011d82:	0005a983          	lw	s3,0(a1)
20011d86:	0082c2b3          	xor	t0,t0,s0
20011d8a:	00934333          	xor	t1,t1,s1
20011d8e:	0123c3b3          	xor	t2,t2,s2
20011d92:	013e4e33          	xor	t3,t3,s3
20011d96:	8291                	srli	a3,a3,0x4
20011d98:	8311                	srli	a4,a4,0x4
20011d9a:	8391                	srli	a5,a5,0x4
20011d9c:	00485813          	srli	a6,a6,0x4
20011da0:	01f77433          	and	s0,a4,t6
20011da4:	01f7f4b3          	and	s1,a5,t6
20011da8:	01f87933          	and	s2,a6,t6
20011dac:	01f6f9b3          	and	s3,a3,t6
20011db0:	015405b3          	add	a1,s0,s5
20011db4:	4180                	lw	s0,0(a1)
20011db6:	015485b3          	add	a1,s1,s5
20011dba:	4184                	lw	s1,0(a1)
20011dbc:	015905b3          	add	a1,s2,s5
20011dc0:	0005a903          	lw	s2,0(a1)
20011dc4:	015985b3          	add	a1,s3,s5
20011dc8:	0005a983          	lw	s3,0(a1)
20011dcc:	0082c2b3          	xor	t0,t0,s0
20011dd0:	00934333          	xor	t1,t1,s1
20011dd4:	0123c3b3          	xor	t2,t2,s2
20011dd8:	013e4e33          	xor	t3,t3,s3
20011ddc:	82a1                	srli	a3,a3,0x8
20011dde:	8321                	srli	a4,a4,0x8
20011de0:	83a1                	srli	a5,a5,0x8
20011de2:	00885813          	srli	a6,a6,0x8
20011de6:	01f7f433          	and	s0,a5,t6
20011dea:	01f874b3          	and	s1,a6,t6
20011dee:	01f6f933          	and	s2,a3,t6
20011df2:	01f779b3          	and	s3,a4,t6
20011df6:	01d405b3          	add	a1,s0,t4
20011dfa:	4180                	lw	s0,0(a1)
20011dfc:	01d485b3          	add	a1,s1,t4
20011e00:	4184                	lw	s1,0(a1)
20011e02:	01d905b3          	add	a1,s2,t4
20011e06:	0005a903          	lw	s2,0(a1)
20011e0a:	01d985b3          	add	a1,s3,t4
20011e0e:	0005a983          	lw	s3,0(a1)
20011e12:	0082c2b3          	xor	t0,t0,s0
20011e16:	00934333          	xor	t1,t1,s1
20011e1a:	0123c3b3          	xor	t2,t2,s2
20011e1e:	013e4e33          	xor	t3,t3,s3
20011e22:	82a1                	srli	a3,a3,0x8
20011e24:	8321                	srli	a4,a4,0x8
20011e26:	83a1                	srli	a5,a5,0x8
20011e28:	00885813          	srli	a6,a6,0x8
20011e2c:	01f87433          	and	s0,a6,t6
20011e30:	01f6f4b3          	and	s1,a3,t6
20011e34:	01f77933          	and	s2,a4,t6
20011e38:	01f7f9b3          	and	s3,a5,t6
20011e3c:	014405b3          	add	a1,s0,s4
20011e40:	4180                	lw	s0,0(a1)
20011e42:	014485b3          	add	a1,s1,s4
20011e46:	4184                	lw	s1,0(a1)
20011e48:	014905b3          	add	a1,s2,s4
20011e4c:	0005a903          	lw	s2,0(a1)
20011e50:	014985b3          	add	a1,s3,s4
20011e54:	0005a983          	lw	s3,0(a1)
20011e58:	0082c2b3          	xor	t0,t0,s0
20011e5c:	00934333          	xor	t1,t1,s1
20011e60:	0123c3b3          	xor	t2,t2,s2
20011e64:	013e4e33          	xor	t3,t3,s3
20011e68:	0541                	addi	a0,a0,16
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:557
    round  a3,a4,a5,a6, t0,t1,t2,t3,   0(a0), t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
    round  t0,t1,t2,t3, a3,a4,a5,a6,    0(a0), t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
    round  a3,a4,a5,a6, t0,t1,t2,t3,   0(a0), t4,t5,s4,s5, t6, s0,s1,s2,s3,a1
*/
    // final round
    slli    s0, t0, 4
20011e6a:	00429413          	slli	s0,t0,0x4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:558
    slli    s1, t1, 4
20011e6e:	00431493          	slli	s1,t1,0x4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:559
    slli    s2, t2, 4
20011e72:	00439913          	slli	s2,t2,0x4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:560
    slli    s3, t3, 4
20011e76:	004e1993          	slli	s3,t3,0x4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:561
    and     s0, s0, t6
20011e7a:	01f47433          	and	s0,s0,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:562
    and     s1, s1, t6
20011e7e:	01f4f4b3          	and	s1,s1,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:563
    and     s2, s2, t6
20011e82:	01f97933          	and	s2,s2,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:564
    and     s3, s3, t6
20011e86:	01f9f9b3          	and	s3,s3,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:565
    add     a1, s0, t4
20011e8a:	01d405b3          	add	a1,s0,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:566
    lbu     a3, (a1)
20011e8e:	0005c683          	lbu	a3,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:567
    add     a1, s1, t4
20011e92:	01d485b3          	add	a1,s1,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:568
    lbu     a4, (a1)
20011e96:	0005c703          	lbu	a4,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:569
    add     a1, s2, t4
20011e9a:	01d905b3          	add	a1,s2,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:570
    lbu     a5, (a1)
20011e9e:	0005c783          	lbu	a5,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:571
    add     a1, s3, t4
20011ea2:	01d985b3          	add	a1,s3,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:572
    lbu     a6, (a1)
20011ea6:	0005c803          	lbu	a6,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:574

    srli    s0, t1, 4
20011eaa:	00435413          	srli	s0,t1,0x4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:575
    srli    s1, t2, 4
20011eae:	0043d493          	srli	s1,t2,0x4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:576
    srli    s2, t3, 4
20011eb2:	004e5913          	srli	s2,t3,0x4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:577
    srli    s3, t0, 4
20011eb6:	0042d993          	srli	s3,t0,0x4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:578
    and     s0, s0, t6
20011eba:	01f47433          	and	s0,s0,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:579
    and     s1, s1, t6
20011ebe:	01f4f4b3          	and	s1,s1,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:580
    and     s2, s2, t6
20011ec2:	01f97933          	and	s2,s2,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:581
    and     s3, s3, t6
20011ec6:	01f9f9b3          	and	s3,s3,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:582
    add     a1, s0, t4
20011eca:	01d405b3          	add	a1,s0,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:583
    lbu     s0, (a1)
20011ece:	0005c403          	lbu	s0,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:584
    add     a1, s1, t4
20011ed2:	01d485b3          	add	a1,s1,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:585
    lbu     s1, (a1)
20011ed6:	0005c483          	lbu	s1,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:586
    add     a1, s2, t4
20011eda:	01d905b3          	add	a1,s2,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:587
    lbu     s2, (a1)
20011ede:	0005c903          	lbu	s2,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:588
    add     a1, s3, t4
20011ee2:	01d985b3          	add	a1,s3,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:589
    lbu     s3, (a1)
20011ee6:	0005c983          	lbu	s3,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:590
    slli    s0, s0, 8
20011eea:	0422                	slli	s0,s0,0x8
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:591
    slli    s1, s1, 8
20011eec:	04a2                	slli	s1,s1,0x8
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:592
    slli    s2, s2, 8
20011eee:	0922                	slli	s2,s2,0x8
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:593
    slli    s3, s3, 8
20011ef0:	09a2                	slli	s3,s3,0x8
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:594
    xor     a3, a3, s0
20011ef2:	8ea1                	xor	a3,a3,s0
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:595
    xor     a4, a4, s1
20011ef4:	8f25                	xor	a4,a4,s1
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:596
    xor     a5, a5, s2
20011ef6:	0127c7b3          	xor	a5,a5,s2
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:597
    xor     a6, a6, s3
20011efa:	01384833          	xor	a6,a6,s3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:599

    srli    s0, t2, 12
20011efe:	00c3d413          	srli	s0,t2,0xc
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:600
    srli    s1, t3, 12
20011f02:	00ce5493          	srli	s1,t3,0xc
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:601
    srli    s2, t0, 12
20011f06:	00c2d913          	srli	s2,t0,0xc
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:602
    srli    s3, t1, 12
20011f0a:	00c35993          	srli	s3,t1,0xc
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:603
    and     s0, s0, t6
20011f0e:	01f47433          	and	s0,s0,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:604
    and     s1, s1, t6
20011f12:	01f4f4b3          	and	s1,s1,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:605
    and     s2, s2, t6
20011f16:	01f97933          	and	s2,s2,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:606
    and     s3, s3, t6
20011f1a:	01f9f9b3          	and	s3,s3,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:607
    add     a1, s0, t4
20011f1e:	01d405b3          	add	a1,s0,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:608
    lbu     s0, (a1)
20011f22:	0005c403          	lbu	s0,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:609
    add     a1, s1, t4
20011f26:	01d485b3          	add	a1,s1,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:610
    lbu     s1, (a1)
20011f2a:	0005c483          	lbu	s1,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:611
    add     a1, s2, t4
20011f2e:	01d905b3          	add	a1,s2,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:612
    lbu     s2, (a1)
20011f32:	0005c903          	lbu	s2,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:613
    add     a1, s3, t4
20011f36:	01d985b3          	add	a1,s3,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:614
    lbu     s3, (a1)
20011f3a:	0005c983          	lbu	s3,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:615
    slli    s0, s0, 16
20011f3e:	0442                	slli	s0,s0,0x10
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:616
    slli    s1, s1, 16
20011f40:	04c2                	slli	s1,s1,0x10
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:617
    slli    s2, s2, 16
20011f42:	0942                	slli	s2,s2,0x10
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:618
    slli    s3, s3, 16
20011f44:	09c2                	slli	s3,s3,0x10
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:619
    xor     a3, a3, s0
20011f46:	8ea1                	xor	a3,a3,s0
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:620
    xor     a4, a4, s1
20011f48:	8f25                	xor	a4,a4,s1
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:621
    xor     a5, a5, s2
20011f4a:	0127c7b3          	xor	a5,a5,s2
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:622
    xor     a6, a6, s3
20011f4e:	01384833          	xor	a6,a6,s3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:624

    srli    s0, t3, 20
20011f52:	014e5413          	srli	s0,t3,0x14
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:625
    srli    s1, t0, 20
20011f56:	0142d493          	srli	s1,t0,0x14
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:626
    srli    s2, t1, 20
20011f5a:	01435913          	srli	s2,t1,0x14
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:627
    srli    s3, t2, 20
20011f5e:	0143d993          	srli	s3,t2,0x14
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:628
    and     s0, s0, t6
20011f62:	01f47433          	and	s0,s0,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:629
    and     s1, s1, t6
20011f66:	01f4f4b3          	and	s1,s1,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:630
    and     s2, s2, t6
20011f6a:	01f97933          	and	s2,s2,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:631
    and     s3, s3, t6
20011f6e:	01f9f9b3          	and	s3,s3,t6
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:632
    add     a1, s0, t4
20011f72:	01d405b3          	add	a1,s0,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:633
    lbu     s0, (a1)
20011f76:	0005c403          	lbu	s0,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:634
    add     a1, s1, t4
20011f7a:	01d485b3          	add	a1,s1,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:635
    lbu     s1, (a1)
20011f7e:	0005c483          	lbu	s1,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:636
    add     a1, s2, t4
20011f82:	01d905b3          	add	a1,s2,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:637
    lbu     s2, (a1)
20011f86:	0005c903          	lbu	s2,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:638
    add     a1, s3, t4
20011f8a:	01d985b3          	add	a1,s3,t4
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:639
    lbu     s3, (a1)
20011f8e:	0005c983          	lbu	s3,0(a1)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:640
    slli    s0, s0, 24
20011f92:	0462                	slli	s0,s0,0x18
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:641
    slli    s1, s1, 24
20011f94:	04e2                	slli	s1,s1,0x18
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:642
    slli    s2, s2, 24
20011f96:	0962                	slli	s2,s2,0x18
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:643
    slli    s3, s3, 24
20011f98:	09e2                	slli	s3,s3,0x18
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:644
    xor     a3, a3, s0
20011f9a:	8ea1                	xor	a3,a3,s0
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:645
    xor     a4, a4, s1
20011f9c:	8f25                	xor	a4,a4,s1
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:646
    xor     a5, a5, s2
20011f9e:	0127c7b3          	xor	a5,a5,s2
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:647
    xor     a6, a6, s3
20011fa2:	01384833          	xor	a6,a6,s3
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:650

    // store output
    sw      a3,  0(a2)
20011fa6:	c214                	sw	a3,0(a2)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:651
    sw      a4,  4(a2)
20011fa8:	c258                	sw	a4,4(a2)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:652
    sw      a5,  8(a2)
20011faa:	c61c                	sw	a5,8(a2)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:653
    sw      a6, 12(a2)
20011fac:	01062623          	sw	a6,12(a2)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:656

    // pop s0-s5
    lw      s0,  4(sp)
20011fb0:	4412                	lw	s0,4(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:657
    lw      s1,  8(sp)
20011fb2:	44a2                	lw	s1,8(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:658
    lw      s2, 12(sp)
20011fb4:	4932                	lw	s2,12(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:659
    lw      s3, 16(sp)
20011fb6:	49c2                	lw	s3,16(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:660
    lw      s4, 20(sp)
20011fb8:	4a52                	lw	s4,20(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:661
    lw      s5, 24(sp)
20011fba:	4ae2                	lw	s5,24(sp)
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:662
    addi    sp, sp, 28
20011fbc:	0171                	addi	sp,sp,28
C:\Users\shu\wsFreedomStudio\simpira_test\src/aes_asm.S:664

    ret
20011fbe:	8082                	ret

20011fc0 <memset>:
memset():
20011fc0:	433d                	li	t1,15
20011fc2:	872a                	mv	a4,a0
20011fc4:	02c37363          	bgeu	t1,a2,20011fea <memset+0x2a>
20011fc8:	00f77793          	andi	a5,a4,15
20011fcc:	efbd                	bnez	a5,2001204a <memset+0x8a>
20011fce:	e5ad                	bnez	a1,20012038 <memset+0x78>
20011fd0:	ff067693          	andi	a3,a2,-16
20011fd4:	8a3d                	andi	a2,a2,15
20011fd6:	96ba                	add	a3,a3,a4
20011fd8:	c30c                	sw	a1,0(a4)
20011fda:	c34c                	sw	a1,4(a4)
20011fdc:	c70c                	sw	a1,8(a4)
20011fde:	c74c                	sw	a1,12(a4)
20011fe0:	0741                	addi	a4,a4,16
20011fe2:	fed76be3          	bltu	a4,a3,20011fd8 <memset+0x18>
20011fe6:	e211                	bnez	a2,20011fea <memset+0x2a>
20011fe8:	8082                	ret
20011fea:	40c306b3          	sub	a3,t1,a2
20011fee:	068a                	slli	a3,a3,0x2
20011ff0:	00000297          	auipc	t0,0x0
20011ff4:	9696                	add	a3,a3,t0
20011ff6:	00a68067          	jr	10(a3)
20011ffa:	00b70723          	sb	a1,14(a4) # 20000e <__heap_size+0x1ff80e>
20011ffe:	00b706a3          	sb	a1,13(a4)
20012002:	00b70623          	sb	a1,12(a4)
20012006:	00b705a3          	sb	a1,11(a4)
2001200a:	00b70523          	sb	a1,10(a4)
2001200e:	00b704a3          	sb	a1,9(a4)
20012012:	00b70423          	sb	a1,8(a4)
20012016:	00b703a3          	sb	a1,7(a4)
2001201a:	00b70323          	sb	a1,6(a4)
2001201e:	00b702a3          	sb	a1,5(a4)
20012022:	00b70223          	sb	a1,4(a4)
20012026:	00b701a3          	sb	a1,3(a4)
2001202a:	00b70123          	sb	a1,2(a4)
2001202e:	00b700a3          	sb	a1,1(a4)
20012032:	00b70023          	sb	a1,0(a4)
20012036:	8082                	ret
20012038:	0ff5f593          	zext.b	a1,a1
2001203c:	00859693          	slli	a3,a1,0x8
20012040:	8dd5                	or	a1,a1,a3
20012042:	01059693          	slli	a3,a1,0x10
20012046:	8dd5                	or	a1,a1,a3
20012048:	b761                	j	20011fd0 <memset+0x10>
2001204a:	00279693          	slli	a3,a5,0x2
2001204e:	00000297          	auipc	t0,0x0
20012052:	9696                	add	a3,a3,t0
20012054:	8286                	mv	t0,ra
20012056:	fa8680e7          	jalr	-88(a3)
2001205a:	8096                	mv	ra,t0
2001205c:	17c1                	addi	a5,a5,-16
2001205e:	8f1d                	sub	a4,a4,a5
20012060:	963e                	add	a2,a2,a5
20012062:	f8c374e3          	bgeu	t1,a2,20011fea <memset+0x2a>
20012066:	b7a5                	j	20011fce <memset+0xe>

20012068 <iprintf>:
printf():
20012068:	715d                	addi	sp,sp,-80
2001206a:	d422                	sw	s0,40(sp)
2001206c:	d606                	sw	ra,44(sp)
2001206e:	842a                	mv	s0,a0
20012070:	da2e                	sw	a1,52(sp)
20012072:	dc32                	sw	a2,56(sp)
20012074:	de36                	sw	a3,60(sp)
20012076:	c0ba                	sw	a4,64(sp)
20012078:	c2be                	sw	a5,68(sp)
2001207a:	c4c2                	sw	a6,72(sp)
2001207c:	c6c6                	sw	a7,76(sp)
2001207e:	5fff0517          	auipc	a0,0x5fff0
20012082:	a2252503          	lw	a0,-1502(a0) # 80001aa0 <_impure_ptr>
20012086:	c511                	beqz	a0,20012092 <iprintf+0x2a>
20012088:	4d1c                	lw	a5,24(a0)
2001208a:	e781                	bnez	a5,20012092 <iprintf+0x2a>
2001208c:	c62a                	sw	a0,12(sp)
2001208e:	20f1                	jal	2001215a <__sinit>
20012090:	4532                	lw	a0,12(sp)
20012092:	450c                	lw	a1,8(a0)
20012094:	1854                	addi	a3,sp,52
20012096:	8622                	mv	a2,s0
20012098:	ce36                	sw	a3,28(sp)
2001209a:	2ea5                	jal	20012412 <_vfiprintf_r>
2001209c:	50b2                	lw	ra,44(sp)
2001209e:	5422                	lw	s0,40(sp)
200120a0:	6161                	addi	sp,sp,80
200120a2:	8082                	ret

200120a4 <std>:
std():
200120a4:	1141                	addi	sp,sp,-16
200120a6:	c422                	sw	s0,8(sp)
200120a8:	c606                	sw	ra,12(sp)
200120aa:	842a                	mv	s0,a0
200120ac:	00b51623          	sh	a1,12(a0)
200120b0:	00c51723          	sh	a2,14(a0)
200120b4:	00052023          	sw	zero,0(a0)
200120b8:	00052223          	sw	zero,4(a0)
200120bc:	00052423          	sw	zero,8(a0)
200120c0:	06052223          	sw	zero,100(a0)
200120c4:	00052823          	sw	zero,16(a0)
200120c8:	00052a23          	sw	zero,20(a0)
200120cc:	00052c23          	sw	zero,24(a0)
200120d0:	4621                	li	a2,8
200120d2:	4581                	li	a1,0
200120d4:	05c50513          	addi	a0,a0,92
200120d8:	35e5                	jal	20011fc0 <memset>
200120da:	00000797          	auipc	a5,0x0
200120de:	5fe78793          	addi	a5,a5,1534 # 200126d8 <__sread>
200120e2:	d05c                	sw	a5,36(s0)
200120e4:	00000797          	auipc	a5,0x0
200120e8:	62678793          	addi	a5,a5,1574 # 2001270a <__swrite>
200120ec:	d41c                	sw	a5,40(s0)
200120ee:	00000797          	auipc	a5,0x0
200120f2:	66a78793          	addi	a5,a5,1642 # 20012758 <__sseek>
200120f6:	d45c                	sw	a5,44(s0)
200120f8:	00000797          	auipc	a5,0x0
200120fc:	69678793          	addi	a5,a5,1686 # 2001278e <__sclose>
20012100:	40b2                	lw	ra,12(sp)
20012102:	d000                	sw	s0,32(s0)
20012104:	d81c                	sw	a5,48(s0)
20012106:	4422                	lw	s0,8(sp)
20012108:	0141                	addi	sp,sp,16
2001210a:	8082                	ret

2001210c <_cleanup_r>:
_cleanup_r():
2001210c:	00001597          	auipc	a1,0x1
20012110:	9fe58593          	addi	a1,a1,-1538 # 20012b0a <_fflush_r>
20012114:	a2b1                	j	20012260 <_fwalk_reent>

20012116 <__sfmoreglue>:
__sfmoreglue():
20012116:	1141                	addi	sp,sp,-16
20012118:	c226                	sw	s1,4(sp)
2001211a:	06800613          	li	a2,104
2001211e:	fff58493          	addi	s1,a1,-1
20012122:	02c484b3          	mul	s1,s1,a2
20012126:	c04a                	sw	s2,0(sp)
20012128:	892e                	mv	s2,a1
2001212a:	c422                	sw	s0,8(sp)
2001212c:	c606                	sw	ra,12(sp)
2001212e:	07448593          	addi	a1,s1,116
20012132:	2a61                	jal	200122ca <_malloc_r>
20012134:	842a                	mv	s0,a0
20012136:	c919                	beqz	a0,2001214c <__sfmoreglue+0x36>
20012138:	00052023          	sw	zero,0(a0)
2001213c:	01252223          	sw	s2,4(a0)
20012140:	0531                	addi	a0,a0,12
20012142:	c408                	sw	a0,8(s0)
20012144:	06848613          	addi	a2,s1,104
20012148:	4581                	li	a1,0
2001214a:	3d9d                	jal	20011fc0 <memset>
2001214c:	40b2                	lw	ra,12(sp)
2001214e:	8522                	mv	a0,s0
20012150:	4422                	lw	s0,8(sp)
20012152:	4492                	lw	s1,4(sp)
20012154:	4902                	lw	s2,0(sp)
20012156:	0141                	addi	sp,sp,16
20012158:	8082                	ret

2001215a <__sinit>:
__sinit():
2001215a:	4d1c                	lw	a5,24(a0)
2001215c:	e3bd                	bnez	a5,200121c2 <__sinit+0x68>
2001215e:	1141                	addi	sp,sp,-16
20012160:	c422                	sw	s0,8(sp)
20012162:	c606                	sw	ra,12(sp)
20012164:	00000797          	auipc	a5,0x0
20012168:	fa878793          	addi	a5,a5,-88 # 2001210c <_cleanup_r>
2001216c:	d51c                	sw	a5,40(a0)
2001216e:	04052423          	sw	zero,72(a0)
20012172:	04052623          	sw	zero,76(a0)
20012176:	04052823          	sw	zero,80(a0)
2001217a:	fffff797          	auipc	a5,0xfffff
2001217e:	e9e7a783          	lw	a5,-354(a5) # 20011018 <_global_impure_ptr>
20012182:	842a                	mv	s0,a0
20012184:	00f51463          	bne	a0,a5,2001218c <__sinit+0x32>
20012188:	4785                	li	a5,1
2001218a:	cd1c                	sw	a5,24(a0)
2001218c:	8522                	mv	a0,s0
2001218e:	281d                	jal	200121c4 <__sfp>
20012190:	c048                	sw	a0,4(s0)
20012192:	8522                	mv	a0,s0
20012194:	2805                	jal	200121c4 <__sfp>
20012196:	c408                	sw	a0,8(s0)
20012198:	8522                	mv	a0,s0
2001219a:	202d                	jal	200121c4 <__sfp>
2001219c:	c448                	sw	a0,12(s0)
2001219e:	4048                	lw	a0,4(s0)
200121a0:	4601                	li	a2,0
200121a2:	4591                	li	a1,4
200121a4:	3701                	jal	200120a4 <std>
200121a6:	4408                	lw	a0,8(s0)
200121a8:	4605                	li	a2,1
200121aa:	45a5                	li	a1,9
200121ac:	3de5                	jal	200120a4 <std>
200121ae:	4448                	lw	a0,12(s0)
200121b0:	4609                	li	a2,2
200121b2:	45c9                	li	a1,18
200121b4:	3dc5                	jal	200120a4 <std>
200121b6:	4785                	li	a5,1
200121b8:	40b2                	lw	ra,12(sp)
200121ba:	cc1c                	sw	a5,24(s0)
200121bc:	4422                	lw	s0,8(sp)
200121be:	0141                	addi	sp,sp,16
200121c0:	8082                	ret
200121c2:	8082                	ret

200121c4 <__sfp>:
__sfp():
200121c4:	1141                	addi	sp,sp,-16
200121c6:	c226                	sw	s1,4(sp)
200121c8:	fffff497          	auipc	s1,0xfffff
200121cc:	e504a483          	lw	s1,-432(s1) # 20011018 <_global_impure_ptr>
200121d0:	4c9c                	lw	a5,24(s1)
200121d2:	c04a                	sw	s2,0(sp)
200121d4:	c606                	sw	ra,12(sp)
200121d6:	c422                	sw	s0,8(sp)
200121d8:	892a                	mv	s2,a0
200121da:	e399                	bnez	a5,200121e0 <__sfp+0x1c>
200121dc:	8526                	mv	a0,s1
200121de:	3fb5                	jal	2001215a <__sinit>
200121e0:	04848493          	addi	s1,s1,72
200121e4:	4480                	lw	s0,8(s1)
200121e6:	40dc                	lw	a5,4(s1)
200121e8:	17fd                	addi	a5,a5,-1
200121ea:	0007d663          	bgez	a5,200121f6 <__sfp+0x32>
200121ee:	409c                	lw	a5,0(s1)
200121f0:	cfb1                	beqz	a5,2001224c <__sfp+0x88>
200121f2:	4084                	lw	s1,0(s1)
200121f4:	bfc5                	j	200121e4 <__sfp+0x20>
200121f6:	00c41703          	lh	a4,12(s0)
200121fa:	e731                	bnez	a4,20012246 <__sfp+0x82>
200121fc:	77c1                	lui	a5,0xffff0
200121fe:	0785                	addi	a5,a5,1
20012200:	06042223          	sw	zero,100(s0)
20012204:	00042023          	sw	zero,0(s0)
20012208:	00042223          	sw	zero,4(s0)
2001220c:	00042423          	sw	zero,8(s0)
20012210:	c45c                	sw	a5,12(s0)
20012212:	00042823          	sw	zero,16(s0)
20012216:	00042a23          	sw	zero,20(s0)
2001221a:	00042c23          	sw	zero,24(s0)
2001221e:	4621                	li	a2,8
20012220:	4581                	li	a1,0
20012222:	05c40513          	addi	a0,s0,92
20012226:	3b69                	jal	20011fc0 <memset>
20012228:	02042a23          	sw	zero,52(s0)
2001222c:	02042c23          	sw	zero,56(s0)
20012230:	04042423          	sw	zero,72(s0)
20012234:	04042623          	sw	zero,76(s0)
20012238:	40b2                	lw	ra,12(sp)
2001223a:	8522                	mv	a0,s0
2001223c:	4422                	lw	s0,8(sp)
2001223e:	4492                	lw	s1,4(sp)
20012240:	4902                	lw	s2,0(sp)
20012242:	0141                	addi	sp,sp,16
20012244:	8082                	ret
20012246:	06840413          	addi	s0,s0,104
2001224a:	bf79                	j	200121e8 <__sfp+0x24>
2001224c:	4591                	li	a1,4
2001224e:	854a                	mv	a0,s2
20012250:	35d9                	jal	20012116 <__sfmoreglue>
20012252:	c088                	sw	a0,0(s1)
20012254:	842a                	mv	s0,a0
20012256:	fd51                	bnez	a0,200121f2 <__sfp+0x2e>
20012258:	47b1                	li	a5,12
2001225a:	00f92023          	sw	a5,0(s2)
2001225e:	bfe9                	j	20012238 <__sfp+0x74>

20012260 <_fwalk_reent>:
_fwalk_reent():
20012260:	7179                	addi	sp,sp,-48
20012262:	d422                	sw	s0,40(sp)
20012264:	d04a                	sw	s2,32(sp)
20012266:	ce4e                	sw	s3,28(sp)
20012268:	cc52                	sw	s4,24(sp)
2001226a:	c85a                	sw	s6,16(sp)
2001226c:	c65e                	sw	s7,12(sp)
2001226e:	d606                	sw	ra,44(sp)
20012270:	d226                	sw	s1,36(sp)
20012272:	ca56                	sw	s5,20(sp)
20012274:	892a                	mv	s2,a0
20012276:	8a2e                	mv	s4,a1
20012278:	04850413          	addi	s0,a0,72
2001227c:	4981                	li	s3,0
2001227e:	4b05                	li	s6,1
20012280:	5bfd                	li	s7,-1
20012282:	4404                	lw	s1,8(s0)
20012284:	00442a83          	lw	s5,4(s0)
20012288:	1afd                	addi	s5,s5,-1
2001228a:	020ad063          	bgez	s5,200122aa <_fwalk_reent+0x4a>
2001228e:	4000                	lw	s0,0(s0)
20012290:	f86d                	bnez	s0,20012282 <_fwalk_reent+0x22>
20012292:	50b2                	lw	ra,44(sp)
20012294:	5422                	lw	s0,40(sp)
20012296:	5492                	lw	s1,36(sp)
20012298:	5902                	lw	s2,32(sp)
2001229a:	4a62                	lw	s4,24(sp)
2001229c:	4ad2                	lw	s5,20(sp)
2001229e:	4b42                	lw	s6,16(sp)
200122a0:	4bb2                	lw	s7,12(sp)
200122a2:	854e                	mv	a0,s3
200122a4:	49f2                	lw	s3,28(sp)
200122a6:	6145                	addi	sp,sp,48
200122a8:	8082                	ret
200122aa:	00c4d783          	lhu	a5,12(s1)
200122ae:	00fb7b63          	bgeu	s6,a5,200122c4 <_fwalk_reent+0x64>
200122b2:	00e49783          	lh	a5,14(s1)
200122b6:	01778763          	beq	a5,s7,200122c4 <_fwalk_reent+0x64>
200122ba:	85a6                	mv	a1,s1
200122bc:	854a                	mv	a0,s2
200122be:	9a02                	jalr	s4
200122c0:	00a9e9b3          	or	s3,s3,a0
200122c4:	06848493          	addi	s1,s1,104
200122c8:	b7c1                	j	20012288 <_fwalk_reent+0x28>

200122ca <_malloc_r>:
_malloc_r():
200122ca:	1101                	addi	sp,sp,-32
200122cc:	ca26                	sw	s1,20(sp)
200122ce:	00358493          	addi	s1,a1,3
200122d2:	98f1                	andi	s1,s1,-4
200122d4:	c84a                	sw	s2,16(sp)
200122d6:	ce06                	sw	ra,28(sp)
200122d8:	cc22                	sw	s0,24(sp)
200122da:	c64e                	sw	s3,12(sp)
200122dc:	04a1                	addi	s1,s1,8
200122de:	47b1                	li	a5,12
200122e0:	892a                	mv	s2,a0
200122e2:	04f4f663          	bgeu	s1,a5,2001232e <_malloc_r+0x64>
200122e6:	44b1                	li	s1,12
200122e8:	04b4e563          	bltu	s1,a1,20012332 <_malloc_r+0x68>
200122ec:	854a                	mv	a0,s2
200122ee:	1c7000ef          	jal	ra,20012cb4 <__malloc_lock>
200122f2:	5ffef697          	auipc	a3,0x5ffef
200122f6:	7d668693          	addi	a3,a3,2006 # 80001ac8 <__malloc_free_list>
200122fa:	4298                	lw	a4,0(a3)
200122fc:	843a                	mv	s0,a4
200122fe:	e429                	bnez	s0,20012348 <_malloc_r+0x7e>
20012300:	5ffef417          	auipc	s0,0x5ffef
20012304:	7cc40413          	addi	s0,s0,1996 # 80001acc <__malloc_sbrk_start>
20012308:	401c                	lw	a5,0(s0)
2001230a:	e789                	bnez	a5,20012314 <_malloc_r+0x4a>
2001230c:	4581                	li	a1,0
2001230e:	854a                	mv	a0,s2
20012310:	2e61                	jal	200126a8 <_sbrk_r>
20012312:	c008                	sw	a0,0(s0)
20012314:	85a6                	mv	a1,s1
20012316:	854a                	mv	a0,s2
20012318:	2e41                	jal	200126a8 <_sbrk_r>
2001231a:	59fd                	li	s3,-1
2001231c:	07351a63          	bne	a0,s3,20012390 <_malloc_r+0xc6>
20012320:	47b1                	li	a5,12
20012322:	00f92023          	sw	a5,0(s2)
20012326:	854a                	mv	a0,s2
20012328:	18f000ef          	jal	ra,20012cb6 <__malloc_unlock>
2001232c:	a031                	j	20012338 <_malloc_r+0x6e>
2001232e:	fa04dde3          	bgez	s1,200122e8 <_malloc_r+0x1e>
20012332:	47b1                	li	a5,12
20012334:	00f92023          	sw	a5,0(s2)
20012338:	4501                	li	a0,0
2001233a:	40f2                	lw	ra,28(sp)
2001233c:	4462                	lw	s0,24(sp)
2001233e:	44d2                	lw	s1,20(sp)
20012340:	4942                	lw	s2,16(sp)
20012342:	49b2                	lw	s3,12(sp)
20012344:	6105                	addi	sp,sp,32
20012346:	8082                	ret
20012348:	401c                	lw	a5,0(s0)
2001234a:	8f85                	sub	a5,a5,s1
2001234c:	0207cf63          	bltz	a5,2001238a <_malloc_r+0xc0>
20012350:	462d                	li	a2,11
20012352:	00f67663          	bgeu	a2,a5,2001235e <_malloc_r+0x94>
20012356:	c01c                	sw	a5,0(s0)
20012358:	943e                	add	s0,s0,a5
2001235a:	c004                	sw	s1,0(s0)
2001235c:	a029                	j	20012366 <_malloc_r+0x9c>
2001235e:	405c                	lw	a5,4(s0)
20012360:	02871363          	bne	a4,s0,20012386 <_malloc_r+0xbc>
20012364:	c29c                	sw	a5,0(a3)
20012366:	854a                	mv	a0,s2
20012368:	14f000ef          	jal	ra,20012cb6 <__malloc_unlock>
2001236c:	00b40513          	addi	a0,s0,11
20012370:	00440793          	addi	a5,s0,4
20012374:	9961                	andi	a0,a0,-8
20012376:	40f50733          	sub	a4,a0,a5
2001237a:	fcf500e3          	beq	a0,a5,2001233a <_malloc_r+0x70>
2001237e:	943a                	add	s0,s0,a4
20012380:	8f89                	sub	a5,a5,a0
20012382:	c01c                	sw	a5,0(s0)
20012384:	bf5d                	j	2001233a <_malloc_r+0x70>
20012386:	c35c                	sw	a5,4(a4)
20012388:	bff9                	j	20012366 <_malloc_r+0x9c>
2001238a:	8722                	mv	a4,s0
2001238c:	4040                	lw	s0,4(s0)
2001238e:	bf85                	j	200122fe <_malloc_r+0x34>
20012390:	00350413          	addi	s0,a0,3
20012394:	9871                	andi	s0,s0,-4
20012396:	fc8502e3          	beq	a0,s0,2001235a <_malloc_r+0x90>
2001239a:	40a405b3          	sub	a1,s0,a0
2001239e:	854a                	mv	a0,s2
200123a0:	2621                	jal	200126a8 <_sbrk_r>
200123a2:	fb351ce3          	bne	a0,s3,2001235a <_malloc_r+0x90>
200123a6:	bfad                	j	20012320 <_malloc_r+0x56>

200123a8 <__sfputc_r>:
__sfputc_r():
200123a8:	461c                	lw	a5,8(a2)
200123aa:	17fd                	addi	a5,a5,-1
200123ac:	c61c                	sw	a5,8(a2)
200123ae:	0007d963          	bgez	a5,200123c0 <__sfputc_r+0x18>
200123b2:	4e18                	lw	a4,24(a2)
200123b4:	00e7c563          	blt	a5,a4,200123be <__sfputc_r+0x16>
200123b8:	47a9                	li	a5,10
200123ba:	00f59363          	bne	a1,a5,200123c0 <__sfputc_r+0x18>
200123be:	aed9                	j	20012794 <__swbuf_r>
200123c0:	421c                	lw	a5,0(a2)
200123c2:	852e                	mv	a0,a1
200123c4:	00178713          	addi	a4,a5,1 # ffff0001 <metal_segment_heap_target_end+0x7ffed891>
200123c8:	c218                	sw	a4,0(a2)
200123ca:	00b78023          	sb	a1,0(a5)
200123ce:	8082                	ret

200123d0 <__sfputs_r>:
__sfputs_r():
200123d0:	1101                	addi	sp,sp,-32
200123d2:	cc22                	sw	s0,24(sp)
200123d4:	ca26                	sw	s1,20(sp)
200123d6:	c84a                	sw	s2,16(sp)
200123d8:	c64e                	sw	s3,12(sp)
200123da:	c452                	sw	s4,8(sp)
200123dc:	ce06                	sw	ra,28(sp)
200123de:	892a                	mv	s2,a0
200123e0:	89ae                	mv	s3,a1
200123e2:	8432                	mv	s0,a2
200123e4:	00d604b3          	add	s1,a2,a3
200123e8:	5a7d                	li	s4,-1
200123ea:	00941463          	bne	s0,s1,200123f2 <__sfputs_r+0x22>
200123ee:	4501                	li	a0,0
200123f0:	a809                	j	20012402 <__sfputs_r+0x32>
200123f2:	00044583          	lbu	a1,0(s0)
200123f6:	864e                	mv	a2,s3
200123f8:	854a                	mv	a0,s2
200123fa:	377d                	jal	200123a8 <__sfputc_r>
200123fc:	0405                	addi	s0,s0,1
200123fe:	ff4516e3          	bne	a0,s4,200123ea <__sfputs_r+0x1a>
20012402:	40f2                	lw	ra,28(sp)
20012404:	4462                	lw	s0,24(sp)
20012406:	44d2                	lw	s1,20(sp)
20012408:	4942                	lw	s2,16(sp)
2001240a:	49b2                	lw	s3,12(sp)
2001240c:	4a22                	lw	s4,8(sp)
2001240e:	6105                	addi	sp,sp,32
20012410:	8082                	ret

20012412 <_vfiprintf_r>:
_vfiprintf_r():
20012412:	7135                	addi	sp,sp,-160
20012414:	cd22                	sw	s0,152(sp)
20012416:	cb26                	sw	s1,148(sp)
20012418:	c94a                	sw	s2,144(sp)
2001241a:	c74e                	sw	s3,140(sp)
2001241c:	cf06                	sw	ra,156(sp)
2001241e:	c552                	sw	s4,136(sp)
20012420:	c356                	sw	s5,132(sp)
20012422:	c15a                	sw	s6,128(sp)
20012424:	dede                	sw	s7,124(sp)
20012426:	dce2                	sw	s8,120(sp)
20012428:	dae6                	sw	s9,116(sp)
2001242a:	89aa                	mv	s3,a0
2001242c:	84ae                	mv	s1,a1
2001242e:	8932                	mv	s2,a2
20012430:	8436                	mv	s0,a3
20012432:	c501                	beqz	a0,2001243a <_vfiprintf_r+0x28>
20012434:	4d1c                	lw	a5,24(a0)
20012436:	e391                	bnez	a5,2001243a <_vfiprintf_r+0x28>
20012438:	330d                	jal	2001215a <__sinit>
2001243a:	ffffe797          	auipc	a5,0xffffe
2001243e:	fba78793          	addi	a5,a5,-70 # 200103f4 <__sf_fake_stdin>
20012442:	0cf49c63          	bne	s1,a5,2001251a <_vfiprintf_r+0x108>
20012446:	0049a483          	lw	s1,4(s3)
2001244a:	00c4d783          	lhu	a5,12(s1)
2001244e:	8ba1                	andi	a5,a5,8
20012450:	c7fd                	beqz	a5,2001253e <_vfiprintf_r+0x12c>
20012452:	489c                	lw	a5,16(s1)
20012454:	c7ed                	beqz	a5,2001253e <_vfiprintf_r+0x12c>
20012456:	02000793          	li	a5,32
2001245a:	02f104a3          	sb	a5,41(sp)
2001245e:	03000793          	li	a5,48
20012462:	d202                	sw	zero,36(sp)
20012464:	02f10523          	sb	a5,42(sp)
20012468:	c622                	sw	s0,12(sp)
2001246a:	02500b93          	li	s7,37
2001246e:	ffffea97          	auipc	s5,0xffffe
20012472:	fc6a8a93          	addi	s5,s5,-58 # 20010434 <__sf_fake_stdout+0x20>
20012476:	4c05                	li	s8,1
20012478:	4b29                	li	s6,10
2001247a:	844a                	mv	s0,s2
2001247c:	00044783          	lbu	a5,0(s0)
20012480:	c399                	beqz	a5,20012486 <_vfiprintf_r+0x74>
20012482:	0f779063          	bne	a5,s7,20012562 <_vfiprintf_r+0x150>
20012486:	41240cb3          	sub	s9,s0,s2
2001248a:	01240d63          	beq	s0,s2,200124a4 <_vfiprintf_r+0x92>
2001248e:	86e6                	mv	a3,s9
20012490:	864a                	mv	a2,s2
20012492:	85a6                	mv	a1,s1
20012494:	854e                	mv	a0,s3
20012496:	3f2d                	jal	200123d0 <__sfputs_r>
20012498:	57fd                	li	a5,-1
2001249a:	1ef50463          	beq	a0,a5,20012682 <_vfiprintf_r+0x270>
2001249e:	5792                	lw	a5,36(sp)
200124a0:	97e6                	add	a5,a5,s9
200124a2:	d23e                	sw	a5,36(sp)
200124a4:	00044783          	lbu	a5,0(s0)
200124a8:	1c078d63          	beqz	a5,20012682 <_vfiprintf_r+0x270>
200124ac:	57fd                	li	a5,-1
200124ae:	00140913          	addi	s2,s0,1
200124b2:	c802                	sw	zero,16(sp)
200124b4:	ce02                	sw	zero,28(sp)
200124b6:	ca3e                	sw	a5,20(sp)
200124b8:	cc02                	sw	zero,24(sp)
200124ba:	040109a3          	sb	zero,83(sp)
200124be:	d482                	sw	zero,104(sp)
200124c0:	00094583          	lbu	a1,0(s2)
200124c4:	4615                	li	a2,5
200124c6:	8556                	mv	a0,s5
200124c8:	7d2000ef          	jal	ra,20012c9a <memchr>
200124cc:	47c2                	lw	a5,16(sp)
200124ce:	00190413          	addi	s0,s2,1
200124d2:	e951                	bnez	a0,20012566 <_vfiprintf_r+0x154>
200124d4:	0107f713          	andi	a4,a5,16
200124d8:	c709                	beqz	a4,200124e2 <_vfiprintf_r+0xd0>
200124da:	02000713          	li	a4,32
200124de:	04e109a3          	sb	a4,83(sp)
200124e2:	0087f713          	andi	a4,a5,8
200124e6:	c709                	beqz	a4,200124f0 <_vfiprintf_r+0xde>
200124e8:	02b00713          	li	a4,43
200124ec:	04e109a3          	sb	a4,83(sp)
200124f0:	00094683          	lbu	a3,0(s2)
200124f4:	02a00713          	li	a4,42
200124f8:	06e68f63          	beq	a3,a4,20012576 <_vfiprintf_r+0x164>
200124fc:	47f2                	lw	a5,28(sp)
200124fe:	844a                	mv	s0,s2
20012500:	4681                	li	a3,0
20012502:	4625                	li	a2,9
20012504:	00044703          	lbu	a4,0(s0)
20012508:	00140593          	addi	a1,s0,1
2001250c:	fd070713          	addi	a4,a4,-48
20012510:	0ae67863          	bgeu	a2,a4,200125c0 <_vfiprintf_r+0x1ae>
20012514:	caad                	beqz	a3,20012586 <_vfiprintf_r+0x174>
20012516:	ce3e                	sw	a5,28(sp)
20012518:	a0bd                	j	20012586 <_vfiprintf_r+0x174>
2001251a:	ffffe797          	auipc	a5,0xffffe
2001251e:	efa78793          	addi	a5,a5,-262 # 20010414 <__sf_fake_stdout>
20012522:	00f49563          	bne	s1,a5,2001252c <_vfiprintf_r+0x11a>
20012526:	0089a483          	lw	s1,8(s3)
2001252a:	b705                	j	2001244a <_vfiprintf_r+0x38>
2001252c:	ffffe797          	auipc	a5,0xffffe
20012530:	ea878793          	addi	a5,a5,-344 # 200103d4 <__sf_fake_stderr>
20012534:	f0f49be3          	bne	s1,a5,2001244a <_vfiprintf_r+0x38>
20012538:	00c9a483          	lw	s1,12(s3)
2001253c:	b739                	j	2001244a <_vfiprintf_r+0x38>
2001253e:	85a6                	mv	a1,s1
20012540:	854e                	mv	a0,s3
20012542:	2699                	jal	20012888 <__swsetup_r>
20012544:	d909                	beqz	a0,20012456 <_vfiprintf_r+0x44>
20012546:	557d                	li	a0,-1
20012548:	40fa                	lw	ra,156(sp)
2001254a:	446a                	lw	s0,152(sp)
2001254c:	44da                	lw	s1,148(sp)
2001254e:	494a                	lw	s2,144(sp)
20012550:	49ba                	lw	s3,140(sp)
20012552:	4a2a                	lw	s4,136(sp)
20012554:	4a9a                	lw	s5,132(sp)
20012556:	4b0a                	lw	s6,128(sp)
20012558:	5bf6                	lw	s7,124(sp)
2001255a:	5c66                	lw	s8,120(sp)
2001255c:	5cd6                	lw	s9,116(sp)
2001255e:	610d                	addi	sp,sp,160
20012560:	8082                	ret
20012562:	0405                	addi	s0,s0,1
20012564:	bf21                	j	2001247c <_vfiprintf_r+0x6a>
20012566:	41550533          	sub	a0,a0,s5
2001256a:	00ac1533          	sll	a0,s8,a0
2001256e:	8fc9                	or	a5,a5,a0
20012570:	c83e                	sw	a5,16(sp)
20012572:	8922                	mv	s2,s0
20012574:	b7b1                	j	200124c0 <_vfiprintf_r+0xae>
20012576:	4732                	lw	a4,12(sp)
20012578:	00470693          	addi	a3,a4,4
2001257c:	4318                	lw	a4,0(a4)
2001257e:	c636                	sw	a3,12(sp)
20012580:	02074963          	bltz	a4,200125b2 <_vfiprintf_r+0x1a0>
20012584:	ce3a                	sw	a4,28(sp)
20012586:	00044703          	lbu	a4,0(s0)
2001258a:	02e00793          	li	a5,46
2001258e:	04f71f63          	bne	a4,a5,200125ec <_vfiprintf_r+0x1da>
20012592:	00144703          	lbu	a4,1(s0)
20012596:	02a00793          	li	a5,42
2001259a:	02f71b63          	bne	a4,a5,200125d0 <_vfiprintf_r+0x1be>
2001259e:	47b2                	lw	a5,12(sp)
200125a0:	0409                	addi	s0,s0,2
200125a2:	00478713          	addi	a4,a5,4
200125a6:	439c                	lw	a5,0(a5)
200125a8:	c63a                	sw	a4,12(sp)
200125aa:	0207c163          	bltz	a5,200125cc <_vfiprintf_r+0x1ba>
200125ae:	ca3e                	sw	a5,20(sp)
200125b0:	a835                	j	200125ec <_vfiprintf_r+0x1da>
200125b2:	40e00733          	neg	a4,a4
200125b6:	0027e793          	ori	a5,a5,2
200125ba:	ce3a                	sw	a4,28(sp)
200125bc:	c83e                	sw	a5,16(sp)
200125be:	b7e1                	j	20012586 <_vfiprintf_r+0x174>
200125c0:	036787b3          	mul	a5,a5,s6
200125c4:	842e                	mv	s0,a1
200125c6:	4685                	li	a3,1
200125c8:	97ba                	add	a5,a5,a4
200125ca:	bf2d                	j	20012504 <_vfiprintf_r+0xf2>
200125cc:	57fd                	li	a5,-1
200125ce:	b7c5                	j	200125ae <_vfiprintf_r+0x19c>
200125d0:	0405                	addi	s0,s0,1
200125d2:	ca02                	sw	zero,20(sp)
200125d4:	4681                	li	a3,0
200125d6:	4781                	li	a5,0
200125d8:	4625                	li	a2,9
200125da:	00044703          	lbu	a4,0(s0)
200125de:	00140593          	addi	a1,s0,1
200125e2:	fd070713          	addi	a4,a4,-48
200125e6:	06e67463          	bgeu	a2,a4,2001264e <_vfiprintf_r+0x23c>
200125ea:	f2f1                	bnez	a3,200125ae <_vfiprintf_r+0x19c>
200125ec:	00044583          	lbu	a1,0(s0)
200125f0:	460d                	li	a2,3
200125f2:	ffffe517          	auipc	a0,0xffffe
200125f6:	e4a50513          	addi	a0,a0,-438 # 2001043c <__sf_fake_stdout+0x28>
200125fa:	2545                	jal	20012c9a <memchr>
200125fc:	cd11                	beqz	a0,20012618 <_vfiprintf_r+0x206>
200125fe:	ffffe797          	auipc	a5,0xffffe
20012602:	e3e78793          	addi	a5,a5,-450 # 2001043c <__sf_fake_stdout+0x28>
20012606:	8d1d                	sub	a0,a0,a5
20012608:	04000793          	li	a5,64
2001260c:	00a797b3          	sll	a5,a5,a0
20012610:	4542                	lw	a0,16(sp)
20012612:	0405                	addi	s0,s0,1
20012614:	8d5d                	or	a0,a0,a5
20012616:	c82a                	sw	a0,16(sp)
20012618:	00044583          	lbu	a1,0(s0)
2001261c:	4619                	li	a2,6
2001261e:	ffffe517          	auipc	a0,0xffffe
20012622:	e2250513          	addi	a0,a0,-478 # 20010440 <__sf_fake_stdout+0x2c>
20012626:	00140913          	addi	s2,s0,1
2001262a:	02b10423          	sb	a1,40(sp)
2001262e:	25b5                	jal	20012c9a <memchr>
20012630:	c12d                	beqz	a0,20012692 <_vfiprintf_r+0x280>
20012632:	00000793          	li	a5,0
20012636:	e795                	bnez	a5,20012662 <_vfiprintf_r+0x250>
20012638:	4742                	lw	a4,16(sp)
2001263a:	47b2                	lw	a5,12(sp)
2001263c:	10077713          	andi	a4,a4,256
20012640:	cf09                	beqz	a4,2001265a <_vfiprintf_r+0x248>
20012642:	0791                	addi	a5,a5,4
20012644:	c63e                	sw	a5,12(sp)
20012646:	5792                	lw	a5,36(sp)
20012648:	97d2                	add	a5,a5,s4
2001264a:	d23e                	sw	a5,36(sp)
2001264c:	b53d                	j	2001247a <_vfiprintf_r+0x68>
2001264e:	036787b3          	mul	a5,a5,s6
20012652:	842e                	mv	s0,a1
20012654:	4685                	li	a3,1
20012656:	97ba                	add	a5,a5,a4
20012658:	b749                	j	200125da <_vfiprintf_r+0x1c8>
2001265a:	079d                	addi	a5,a5,7
2001265c:	9be1                	andi	a5,a5,-8
2001265e:	07a1                	addi	a5,a5,8
20012660:	b7d5                	j	20012644 <_vfiprintf_r+0x232>
20012662:	0078                	addi	a4,sp,12
20012664:	00000697          	auipc	a3,0x0
20012668:	d6c68693          	addi	a3,a3,-660 # 200123d0 <__sfputs_r>
2001266c:	8626                	mv	a2,s1
2001266e:	080c                	addi	a1,sp,16
20012670:	854e                	mv	a0,s3
20012672:	00000097          	auipc	ra,0x0
20012676:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
2001267a:	57fd                	li	a5,-1
2001267c:	8a2a                	mv	s4,a0
2001267e:	fcf514e3          	bne	a0,a5,20012646 <_vfiprintf_r+0x234>
20012682:	00c4d783          	lhu	a5,12(s1)
20012686:	0407f793          	andi	a5,a5,64
2001268a:	ea079ee3          	bnez	a5,20012546 <_vfiprintf_r+0x134>
2001268e:	5512                	lw	a0,36(sp)
20012690:	bd65                	j	20012548 <_vfiprintf_r+0x136>
20012692:	0078                	addi	a4,sp,12
20012694:	00000697          	auipc	a3,0x0
20012698:	d3c68693          	addi	a3,a3,-708 # 200123d0 <__sfputs_r>
2001269c:	8626                	mv	a2,s1
2001269e:	080c                	addi	a1,sp,16
200126a0:	854e                	mv	a0,s3
200126a2:	7c4000ef          	jal	ra,20012e66 <_printf_i>
200126a6:	bfd1                	j	2001267a <_vfiprintf_r+0x268>

200126a8 <_sbrk_r>:
_sbrk_r():
200126a8:	1141                	addi	sp,sp,-16
200126aa:	c422                	sw	s0,8(sp)
200126ac:	842a                	mv	s0,a0
200126ae:	852e                	mv	a0,a1
200126b0:	5ffef797          	auipc	a5,0x5ffef
200126b4:	4207a023          	sw	zero,1056(a5) # 80001ad0 <errno>
200126b8:	c606                	sw	ra,12(sp)
200126ba:	369000ef          	jal	ra,20013222 <_sbrk>
200126be:	57fd                	li	a5,-1
200126c0:	00f51863          	bne	a0,a5,200126d0 <_sbrk_r+0x28>
200126c4:	5ffef797          	auipc	a5,0x5ffef
200126c8:	40c7a783          	lw	a5,1036(a5) # 80001ad0 <errno>
200126cc:	c391                	beqz	a5,200126d0 <_sbrk_r+0x28>
200126ce:	c01c                	sw	a5,0(s0)
200126d0:	40b2                	lw	ra,12(sp)
200126d2:	4422                	lw	s0,8(sp)
200126d4:	0141                	addi	sp,sp,16
200126d6:	8082                	ret

200126d8 <__sread>:
__sread():
200126d8:	1141                	addi	sp,sp,-16
200126da:	c422                	sw	s0,8(sp)
200126dc:	842e                	mv	s0,a1
200126de:	00e59583          	lh	a1,14(a1)
200126e2:	c606                	sw	ra,12(sp)
200126e4:	1f3000ef          	jal	ra,200130d6 <_read_r>
200126e8:	00054963          	bltz	a0,200126fa <__sread+0x22>
200126ec:	487c                	lw	a5,84(s0)
200126ee:	97aa                	add	a5,a5,a0
200126f0:	c87c                	sw	a5,84(s0)
200126f2:	40b2                	lw	ra,12(sp)
200126f4:	4422                	lw	s0,8(sp)
200126f6:	0141                	addi	sp,sp,16
200126f8:	8082                	ret
200126fa:	00c45783          	lhu	a5,12(s0)
200126fe:	777d                	lui	a4,0xfffff
20012700:	177d                	addi	a4,a4,-1
20012702:	8ff9                	and	a5,a5,a4
20012704:	00f41623          	sh	a5,12(s0)
20012708:	b7ed                	j	200126f2 <__sread+0x1a>

2001270a <__swrite>:
__swrite():
2001270a:	00c5d783          	lhu	a5,12(a1)
2001270e:	1101                	addi	sp,sp,-32
20012710:	cc22                	sw	s0,24(sp)
20012712:	ca26                	sw	s1,20(sp)
20012714:	c84a                	sw	s2,16(sp)
20012716:	c64e                	sw	s3,12(sp)
20012718:	ce06                	sw	ra,28(sp)
2001271a:	1007f793          	andi	a5,a5,256
2001271e:	84aa                	mv	s1,a0
20012720:	842e                	mv	s0,a1
20012722:	8932                	mv	s2,a2
20012724:	89b6                	mv	s3,a3
20012726:	c791                	beqz	a5,20012732 <__swrite+0x28>
20012728:	00e59583          	lh	a1,14(a1)
2001272c:	4689                	li	a3,2
2001272e:	4601                	li	a2,0
20012730:	2181                	jal	20012b70 <_lseek_r>
20012732:	00c45783          	lhu	a5,12(s0)
20012736:	777d                	lui	a4,0xfffff
20012738:	177d                	addi	a4,a4,-1
2001273a:	8ff9                	and	a5,a5,a4
2001273c:	00e41583          	lh	a1,14(s0)
20012740:	00f41623          	sh	a5,12(s0)
20012744:	4462                	lw	s0,24(sp)
20012746:	40f2                	lw	ra,28(sp)
20012748:	86ce                	mv	a3,s3
2001274a:	864a                	mv	a2,s2
2001274c:	49b2                	lw	s3,12(sp)
2001274e:	4942                	lw	s2,16(sp)
20012750:	8526                	mv	a0,s1
20012752:	44d2                	lw	s1,20(sp)
20012754:	6105                	addi	sp,sp,32
20012756:	a8fd                	j	20012854 <_write_r>

20012758 <__sseek>:
__sseek():
20012758:	1141                	addi	sp,sp,-16
2001275a:	c422                	sw	s0,8(sp)
2001275c:	842e                	mv	s0,a1
2001275e:	00e59583          	lh	a1,14(a1)
20012762:	c606                	sw	ra,12(sp)
20012764:	2131                	jal	20012b70 <_lseek_r>
20012766:	57fd                	li	a5,-1
20012768:	00c45703          	lhu	a4,12(s0)
2001276c:	00f51b63          	bne	a0,a5,20012782 <__sseek+0x2a>
20012770:	77fd                	lui	a5,0xfffff
20012772:	17fd                	addi	a5,a5,-1
20012774:	8ff9                	and	a5,a5,a4
20012776:	00f41623          	sh	a5,12(s0)
2001277a:	40b2                	lw	ra,12(sp)
2001277c:	4422                	lw	s0,8(sp)
2001277e:	0141                	addi	sp,sp,16
20012780:	8082                	ret
20012782:	6785                	lui	a5,0x1
20012784:	8fd9                	or	a5,a5,a4
20012786:	00f41623          	sh	a5,12(s0)
2001278a:	c868                	sw	a0,84(s0)
2001278c:	b7fd                	j	2001277a <__sseek+0x22>

2001278e <__sclose>:
__sclose():
2001278e:	00e59583          	lh	a1,14(a1)
20012792:	a409                	j	20012994 <_close_r>

20012794 <__swbuf_r>:
__swbuf_r():
20012794:	1101                	addi	sp,sp,-32
20012796:	cc22                	sw	s0,24(sp)
20012798:	ca26                	sw	s1,20(sp)
2001279a:	c84a                	sw	s2,16(sp)
2001279c:	ce06                	sw	ra,28(sp)
2001279e:	c64e                	sw	s3,12(sp)
200127a0:	84aa                	mv	s1,a0
200127a2:	892e                	mv	s2,a1
200127a4:	8432                	mv	s0,a2
200127a6:	c501                	beqz	a0,200127ae <__swbuf_r+0x1a>
200127a8:	4d1c                	lw	a5,24(a0)
200127aa:	e391                	bnez	a5,200127ae <__swbuf_r+0x1a>
200127ac:	327d                	jal	2001215a <__sinit>
200127ae:	ffffe797          	auipc	a5,0xffffe
200127b2:	c4678793          	addi	a5,a5,-954 # 200103f4 <__sf_fake_stdin>
200127b6:	06f41963          	bne	s0,a5,20012828 <__swbuf_r+0x94>
200127ba:	40c0                	lw	s0,4(s1)
200127bc:	4c1c                	lw	a5,24(s0)
200127be:	c41c                	sw	a5,8(s0)
200127c0:	00c45783          	lhu	a5,12(s0)
200127c4:	8ba1                	andi	a5,a5,8
200127c6:	c3c9                	beqz	a5,20012848 <__swbuf_r+0xb4>
200127c8:	481c                	lw	a5,16(s0)
200127ca:	cfbd                	beqz	a5,20012848 <__swbuf_r+0xb4>
200127cc:	481c                	lw	a5,16(s0)
200127ce:	4008                	lw	a0,0(s0)
200127d0:	0ff97993          	zext.b	s3,s2
200127d4:	0ff97913          	zext.b	s2,s2
200127d8:	8d1d                	sub	a0,a0,a5
200127da:	485c                	lw	a5,20(s0)
200127dc:	00f54663          	blt	a0,a5,200127e8 <__swbuf_r+0x54>
200127e0:	85a2                	mv	a1,s0
200127e2:	8526                	mv	a0,s1
200127e4:	261d                	jal	20012b0a <_fflush_r>
200127e6:	e52d                	bnez	a0,20012850 <__swbuf_r+0xbc>
200127e8:	441c                	lw	a5,8(s0)
200127ea:	0505                	addi	a0,a0,1
200127ec:	17fd                	addi	a5,a5,-1
200127ee:	c41c                	sw	a5,8(s0)
200127f0:	401c                	lw	a5,0(s0)
200127f2:	00178713          	addi	a4,a5,1
200127f6:	c018                	sw	a4,0(s0)
200127f8:	01378023          	sb	s3,0(a5)
200127fc:	485c                	lw	a5,20(s0)
200127fe:	00a78963          	beq	a5,a0,20012810 <__swbuf_r+0x7c>
20012802:	00c45783          	lhu	a5,12(s0)
20012806:	8b85                	andi	a5,a5,1
20012808:	cb81                	beqz	a5,20012818 <__swbuf_r+0x84>
2001280a:	47a9                	li	a5,10
2001280c:	00f91663          	bne	s2,a5,20012818 <__swbuf_r+0x84>
20012810:	85a2                	mv	a1,s0
20012812:	8526                	mv	a0,s1
20012814:	2cdd                	jal	20012b0a <_fflush_r>
20012816:	ed0d                	bnez	a0,20012850 <__swbuf_r+0xbc>
20012818:	40f2                	lw	ra,28(sp)
2001281a:	4462                	lw	s0,24(sp)
2001281c:	44d2                	lw	s1,20(sp)
2001281e:	49b2                	lw	s3,12(sp)
20012820:	854a                	mv	a0,s2
20012822:	4942                	lw	s2,16(sp)
20012824:	6105                	addi	sp,sp,32
20012826:	8082                	ret
20012828:	ffffe797          	auipc	a5,0xffffe
2001282c:	bec78793          	addi	a5,a5,-1044 # 20010414 <__sf_fake_stdout>
20012830:	00f41463          	bne	s0,a5,20012838 <__swbuf_r+0xa4>
20012834:	4480                	lw	s0,8(s1)
20012836:	b759                	j	200127bc <__swbuf_r+0x28>
20012838:	ffffe797          	auipc	a5,0xffffe
2001283c:	b9c78793          	addi	a5,a5,-1124 # 200103d4 <__sf_fake_stderr>
20012840:	f6f41ee3          	bne	s0,a5,200127bc <__swbuf_r+0x28>
20012844:	44c0                	lw	s0,12(s1)
20012846:	bf9d                	j	200127bc <__swbuf_r+0x28>
20012848:	85a2                	mv	a1,s0
2001284a:	8526                	mv	a0,s1
2001284c:	2835                	jal	20012888 <__swsetup_r>
2001284e:	dd3d                	beqz	a0,200127cc <__swbuf_r+0x38>
20012850:	597d                	li	s2,-1
20012852:	b7d9                	j	20012818 <__swbuf_r+0x84>

20012854 <_write_r>:
_write_r():
20012854:	1141                	addi	sp,sp,-16
20012856:	c422                	sw	s0,8(sp)
20012858:	842a                	mv	s0,a0
2001285a:	852e                	mv	a0,a1
2001285c:	85b2                	mv	a1,a2
2001285e:	8636                	mv	a2,a3
20012860:	5ffef797          	auipc	a5,0x5ffef
20012864:	2607a823          	sw	zero,624(a5) # 80001ad0 <errno>
20012868:	c606                	sw	ra,12(sp)
2001286a:	237000ef          	jal	ra,200132a0 <_write>
2001286e:	57fd                	li	a5,-1
20012870:	00f51863          	bne	a0,a5,20012880 <_write_r+0x2c>
20012874:	5ffef797          	auipc	a5,0x5ffef
20012878:	25c7a783          	lw	a5,604(a5) # 80001ad0 <errno>
2001287c:	c391                	beqz	a5,20012880 <_write_r+0x2c>
2001287e:	c01c                	sw	a5,0(s0)
20012880:	40b2                	lw	ra,12(sp)
20012882:	4422                	lw	s0,8(sp)
20012884:	0141                	addi	sp,sp,16
20012886:	8082                	ret

20012888 <__swsetup_r>:
__swsetup_r():
20012888:	1141                	addi	sp,sp,-16
2001288a:	c422                	sw	s0,8(sp)
2001288c:	c226                	sw	s1,4(sp)
2001288e:	c04a                	sw	s2,0(sp)
20012890:	c606                	sw	ra,12(sp)
20012892:	5ffef497          	auipc	s1,0x5ffef
20012896:	20e4a483          	lw	s1,526(s1) # 80001aa0 <_impure_ptr>
2001289a:	892a                	mv	s2,a0
2001289c:	842e                	mv	s0,a1
2001289e:	c491                	beqz	s1,200128aa <__swsetup_r+0x22>
200128a0:	4c9c                	lw	a5,24(s1)
200128a2:	e781                	bnez	a5,200128aa <__swsetup_r+0x22>
200128a4:	8526                	mv	a0,s1
200128a6:	8b5ff0ef          	jal	ra,2001215a <__sinit>
200128aa:	ffffe797          	auipc	a5,0xffffe
200128ae:	b4a78793          	addi	a5,a5,-1206 # 200103f4 <__sf_fake_stdin>
200128b2:	02f41763          	bne	s0,a5,200128e0 <__swsetup_r+0x58>
200128b6:	40c0                	lw	s0,4(s1)
200128b8:	00c41783          	lh	a5,12(s0)
200128bc:	01079713          	slli	a4,a5,0x10
200128c0:	0087f693          	andi	a3,a5,8
200128c4:	8341                	srli	a4,a4,0x10
200128c6:	eaad                	bnez	a3,20012938 <__swsetup_r+0xb0>
200128c8:	01077693          	andi	a3,a4,16
200128cc:	ea95                	bnez	a3,20012900 <__swsetup_r+0x78>
200128ce:	4725                	li	a4,9
200128d0:	00e92023          	sw	a4,0(s2)
200128d4:	0407e793          	ori	a5,a5,64
200128d8:	00f41623          	sh	a5,12(s0)
200128dc:	557d                	li	a0,-1
200128de:	a871                	j	2001297a <__swsetup_r+0xf2>
200128e0:	ffffe797          	auipc	a5,0xffffe
200128e4:	b3478793          	addi	a5,a5,-1228 # 20010414 <__sf_fake_stdout>
200128e8:	00f41463          	bne	s0,a5,200128f0 <__swsetup_r+0x68>
200128ec:	4480                	lw	s0,8(s1)
200128ee:	b7e9                	j	200128b8 <__swsetup_r+0x30>
200128f0:	ffffe797          	auipc	a5,0xffffe
200128f4:	ae478793          	addi	a5,a5,-1308 # 200103d4 <__sf_fake_stderr>
200128f8:	fcf410e3          	bne	s0,a5,200128b8 <__swsetup_r+0x30>
200128fc:	44c0                	lw	s0,12(s1)
200128fe:	bf6d                	j	200128b8 <__swsetup_r+0x30>
20012900:	8b11                	andi	a4,a4,4
20012902:	c70d                	beqz	a4,2001292c <__swsetup_r+0xa4>
20012904:	584c                	lw	a1,52(s0)
20012906:	c989                	beqz	a1,20012918 <__swsetup_r+0x90>
20012908:	04440793          	addi	a5,s0,68
2001290c:	00f58463          	beq	a1,a5,20012914 <__swsetup_r+0x8c>
20012910:	854a                	mv	a0,s2
20012912:	265d                	jal	20012cb8 <_free_r>
20012914:	02042a23          	sw	zero,52(s0)
20012918:	00c45783          	lhu	a5,12(s0)
2001291c:	00042223          	sw	zero,4(s0)
20012920:	fdb7f793          	andi	a5,a5,-37
20012924:	00f41623          	sh	a5,12(s0)
20012928:	481c                	lw	a5,16(s0)
2001292a:	c01c                	sw	a5,0(s0)
2001292c:	00c45783          	lhu	a5,12(s0)
20012930:	0087e793          	ori	a5,a5,8
20012934:	00f41623          	sh	a5,12(s0)
20012938:	481c                	lw	a5,16(s0)
2001293a:	ef81                	bnez	a5,20012952 <__swsetup_r+0xca>
2001293c:	00c45783          	lhu	a5,12(s0)
20012940:	20000713          	li	a4,512
20012944:	2807f793          	andi	a5,a5,640
20012948:	00e78563          	beq	a5,a4,20012952 <__swsetup_r+0xca>
2001294c:	85a2                	mv	a1,s0
2001294e:	854a                	mv	a0,s2
20012950:	2475                	jal	20012bfc <__smakebuf_r>
20012952:	00c41783          	lh	a5,12(s0)
20012956:	01079713          	slli	a4,a5,0x10
2001295a:	0017f693          	andi	a3,a5,1
2001295e:	8341                	srli	a4,a4,0x10
20012960:	c29d                	beqz	a3,20012986 <__swsetup_r+0xfe>
20012962:	4854                	lw	a3,20(s0)
20012964:	00042423          	sw	zero,8(s0)
20012968:	40d006b3          	neg	a3,a3
2001296c:	cc14                	sw	a3,24(s0)
2001296e:	4814                	lw	a3,16(s0)
20012970:	4501                	li	a0,0
20012972:	e681                	bnez	a3,2001297a <__swsetup_r+0xf2>
20012974:	08077713          	andi	a4,a4,128
20012978:	ff31                	bnez	a4,200128d4 <__swsetup_r+0x4c>
2001297a:	40b2                	lw	ra,12(sp)
2001297c:	4422                	lw	s0,8(sp)
2001297e:	4492                	lw	s1,4(sp)
20012980:	4902                	lw	s2,0(sp)
20012982:	0141                	addi	sp,sp,16
20012984:	8082                	ret
20012986:	00277693          	andi	a3,a4,2
2001298a:	4601                	li	a2,0
2001298c:	e291                	bnez	a3,20012990 <__swsetup_r+0x108>
2001298e:	4850                	lw	a2,20(s0)
20012990:	c410                	sw	a2,8(s0)
20012992:	bff1                	j	2001296e <__swsetup_r+0xe6>

20012994 <_close_r>:
_close_r():
20012994:	1141                	addi	sp,sp,-16
20012996:	c422                	sw	s0,8(sp)
20012998:	842a                	mv	s0,a0
2001299a:	852e                	mv	a0,a1
2001299c:	5ffef797          	auipc	a5,0x5ffef
200129a0:	1207aa23          	sw	zero,308(a5) # 80001ad0 <errno>
200129a4:	c606                	sw	ra,12(sp)
200129a6:	7c0000ef          	jal	ra,20013166 <_close>
200129aa:	57fd                	li	a5,-1
200129ac:	00f51863          	bne	a0,a5,200129bc <_close_r+0x28>
200129b0:	5ffef797          	auipc	a5,0x5ffef
200129b4:	1207a783          	lw	a5,288(a5) # 80001ad0 <errno>
200129b8:	c391                	beqz	a5,200129bc <_close_r+0x28>
200129ba:	c01c                	sw	a5,0(s0)
200129bc:	40b2                	lw	ra,12(sp)
200129be:	4422                	lw	s0,8(sp)
200129c0:	0141                	addi	sp,sp,16
200129c2:	8082                	ret

200129c4 <__sflush_r>:
__sflush_r():
200129c4:	00c5d783          	lhu	a5,12(a1)
200129c8:	1101                	addi	sp,sp,-32
200129ca:	cc22                	sw	s0,24(sp)
200129cc:	ca26                	sw	s1,20(sp)
200129ce:	ce06                	sw	ra,28(sp)
200129d0:	c84a                	sw	s2,16(sp)
200129d2:	c64e                	sw	s3,12(sp)
200129d4:	0087f713          	andi	a4,a5,8
200129d8:	84aa                	mv	s1,a0
200129da:	842e                	mv	s0,a1
200129dc:	e375                	bnez	a4,20012ac0 <__sflush_r+0xfc>
200129de:	41d8                	lw	a4,4(a1)
200129e0:	00e04763          	bgtz	a4,200129ee <__sflush_r+0x2a>
200129e4:	41b8                	lw	a4,64(a1)
200129e6:	00e04463          	bgtz	a4,200129ee <__sflush_r+0x2a>
200129ea:	4501                	li	a0,0
200129ec:	a875                	j	20012aa8 <__sflush_r+0xe4>
200129ee:	5458                	lw	a4,44(s0)
200129f0:	df6d                	beqz	a4,200129ea <__sflush_r+0x26>
200129f2:	6685                	lui	a3,0x1
200129f4:	0004a903          	lw	s2,0(s1)
200129f8:	8ff5                	and	a5,a5,a3
200129fa:	0004a023          	sw	zero,0(s1)
200129fe:	cfa5                	beqz	a5,20012a76 <__sflush_r+0xb2>
20012a00:	4868                	lw	a0,84(s0)
20012a02:	00c45783          	lhu	a5,12(s0)
20012a06:	8b91                	andi	a5,a5,4
20012a08:	c799                	beqz	a5,20012a16 <__sflush_r+0x52>
20012a0a:	405c                	lw	a5,4(s0)
20012a0c:	8d1d                	sub	a0,a0,a5
20012a0e:	585c                	lw	a5,52(s0)
20012a10:	c399                	beqz	a5,20012a16 <__sflush_r+0x52>
20012a12:	403c                	lw	a5,64(s0)
20012a14:	8d1d                	sub	a0,a0,a5
20012a16:	545c                	lw	a5,44(s0)
20012a18:	500c                	lw	a1,32(s0)
20012a1a:	862a                	mv	a2,a0
20012a1c:	4681                	li	a3,0
20012a1e:	8526                	mv	a0,s1
20012a20:	9782                	jalr	a5
20012a22:	57fd                	li	a5,-1
20012a24:	00c45703          	lhu	a4,12(s0)
20012a28:	00f51d63          	bne	a0,a5,20012a42 <__sflush_r+0x7e>
20012a2c:	4094                	lw	a3,0(s1)
20012a2e:	47f5                	li	a5,29
20012a30:	08d7e363          	bltu	a5,a3,20012ab6 <__sflush_r+0xf2>
20012a34:	204007b7          	lui	a5,0x20400
20012a38:	0785                	addi	a5,a5,1
20012a3a:	00d7d7b3          	srl	a5,a5,a3
20012a3e:	8b85                	andi	a5,a5,1
20012a40:	cbbd                	beqz	a5,20012ab6 <__sflush_r+0xf2>
20012a42:	481c                	lw	a5,16(s0)
20012a44:	00042223          	sw	zero,4(s0)
20012a48:	c01c                	sw	a5,0(s0)
20012a4a:	6785                	lui	a5,0x1
20012a4c:	8f7d                	and	a4,a4,a5
20012a4e:	c719                	beqz	a4,20012a5c <__sflush_r+0x98>
20012a50:	57fd                	li	a5,-1
20012a52:	00f51463          	bne	a0,a5,20012a5a <__sflush_r+0x96>
20012a56:	409c                	lw	a5,0(s1)
20012a58:	e391                	bnez	a5,20012a5c <__sflush_r+0x98>
20012a5a:	c868                	sw	a0,84(s0)
20012a5c:	584c                	lw	a1,52(s0)
20012a5e:	0124a023          	sw	s2,0(s1)
20012a62:	d5c1                	beqz	a1,200129ea <__sflush_r+0x26>
20012a64:	04440793          	addi	a5,s0,68
20012a68:	00f58463          	beq	a1,a5,20012a70 <__sflush_r+0xac>
20012a6c:	8526                	mv	a0,s1
20012a6e:	24a9                	jal	20012cb8 <_free_r>
20012a70:	02042a23          	sw	zero,52(s0)
20012a74:	bf9d                	j	200129ea <__sflush_r+0x26>
20012a76:	500c                	lw	a1,32(s0)
20012a78:	4685                	li	a3,1
20012a7a:	4601                	li	a2,0
20012a7c:	8526                	mv	a0,s1
20012a7e:	9702                	jalr	a4
20012a80:	57fd                	li	a5,-1
20012a82:	f8f510e3          	bne	a0,a5,20012a02 <__sflush_r+0x3e>
20012a86:	409c                	lw	a5,0(s1)
20012a88:	dfad                	beqz	a5,20012a02 <__sflush_r+0x3e>
20012a8a:	4775                	li	a4,29
20012a8c:	00e78563          	beq	a5,a4,20012a96 <__sflush_r+0xd2>
20012a90:	4759                	li	a4,22
20012a92:	00e79563          	bne	a5,a4,20012a9c <__sflush_r+0xd8>
20012a96:	0124a023          	sw	s2,0(s1)
20012a9a:	bf81                	j	200129ea <__sflush_r+0x26>
20012a9c:	00c45783          	lhu	a5,12(s0)
20012aa0:	0407e793          	ori	a5,a5,64
20012aa4:	00f41623          	sh	a5,12(s0)
20012aa8:	40f2                	lw	ra,28(sp)
20012aaa:	4462                	lw	s0,24(sp)
20012aac:	44d2                	lw	s1,20(sp)
20012aae:	4942                	lw	s2,16(sp)
20012ab0:	49b2                	lw	s3,12(sp)
20012ab2:	6105                	addi	sp,sp,32
20012ab4:	8082                	ret
20012ab6:	04076713          	ori	a4,a4,64
20012aba:	00e41623          	sh	a4,12(s0)
20012abe:	b7ed                	j	20012aa8 <__sflush_r+0xe4>
20012ac0:	0105a983          	lw	s3,16(a1)
20012ac4:	f20983e3          	beqz	s3,200129ea <__sflush_r+0x26>
20012ac8:	0005a903          	lw	s2,0(a1)
20012acc:	8b8d                	andi	a5,a5,3
20012ace:	0135a023          	sw	s3,0(a1)
20012ad2:	41390933          	sub	s2,s2,s3
20012ad6:	4701                	li	a4,0
20012ad8:	e391                	bnez	a5,20012adc <__sflush_r+0x118>
20012ada:	49d8                	lw	a4,20(a1)
20012adc:	c418                	sw	a4,8(s0)
20012ade:	f12056e3          	blez	s2,200129ea <__sflush_r+0x26>
20012ae2:	541c                	lw	a5,40(s0)
20012ae4:	500c                	lw	a1,32(s0)
20012ae6:	86ca                	mv	a3,s2
20012ae8:	864e                	mv	a2,s3
20012aea:	8526                	mv	a0,s1
20012aec:	9782                	jalr	a5
20012aee:	00a04a63          	bgtz	a0,20012b02 <__sflush_r+0x13e>
20012af2:	00c45783          	lhu	a5,12(s0)
20012af6:	557d                	li	a0,-1
20012af8:	0407e793          	ori	a5,a5,64
20012afc:	00f41623          	sh	a5,12(s0)
20012b00:	b765                	j	20012aa8 <__sflush_r+0xe4>
20012b02:	99aa                	add	s3,s3,a0
20012b04:	40a90933          	sub	s2,s2,a0
20012b08:	bfd9                	j	20012ade <__sflush_r+0x11a>

20012b0a <_fflush_r>:
_fflush_r():
20012b0a:	499c                	lw	a5,16(a1)
20012b0c:	c3a5                	beqz	a5,20012b6c <_fflush_r+0x62>
20012b0e:	1101                	addi	sp,sp,-32
20012b10:	cc22                	sw	s0,24(sp)
20012b12:	ce06                	sw	ra,28(sp)
20012b14:	842a                	mv	s0,a0
20012b16:	c519                	beqz	a0,20012b24 <_fflush_r+0x1a>
20012b18:	4d1c                	lw	a5,24(a0)
20012b1a:	e789                	bnez	a5,20012b24 <_fflush_r+0x1a>
20012b1c:	c62e                	sw	a1,12(sp)
20012b1e:	e3cff0ef          	jal	ra,2001215a <__sinit>
20012b22:	45b2                	lw	a1,12(sp)
20012b24:	ffffe797          	auipc	a5,0xffffe
20012b28:	8d078793          	addi	a5,a5,-1840 # 200103f4 <__sf_fake_stdin>
20012b2c:	00f59b63          	bne	a1,a5,20012b42 <_fflush_r+0x38>
20012b30:	404c                	lw	a1,4(s0)
20012b32:	00c59783          	lh	a5,12(a1)
20012b36:	c795                	beqz	a5,20012b62 <_fflush_r+0x58>
20012b38:	8522                	mv	a0,s0
20012b3a:	4462                	lw	s0,24(sp)
20012b3c:	40f2                	lw	ra,28(sp)
20012b3e:	6105                	addi	sp,sp,32
20012b40:	b551                	j	200129c4 <__sflush_r>
20012b42:	ffffe797          	auipc	a5,0xffffe
20012b46:	8d278793          	addi	a5,a5,-1838 # 20010414 <__sf_fake_stdout>
20012b4a:	00f59463          	bne	a1,a5,20012b52 <_fflush_r+0x48>
20012b4e:	440c                	lw	a1,8(s0)
20012b50:	b7cd                	j	20012b32 <_fflush_r+0x28>
20012b52:	ffffe797          	auipc	a5,0xffffe
20012b56:	88278793          	addi	a5,a5,-1918 # 200103d4 <__sf_fake_stderr>
20012b5a:	fcf59ce3          	bne	a1,a5,20012b32 <_fflush_r+0x28>
20012b5e:	444c                	lw	a1,12(s0)
20012b60:	bfc9                	j	20012b32 <_fflush_r+0x28>
20012b62:	40f2                	lw	ra,28(sp)
20012b64:	4462                	lw	s0,24(sp)
20012b66:	4501                	li	a0,0
20012b68:	6105                	addi	sp,sp,32
20012b6a:	8082                	ret
20012b6c:	4501                	li	a0,0
20012b6e:	8082                	ret

20012b70 <_lseek_r>:
_lseek_r():
20012b70:	1141                	addi	sp,sp,-16
20012b72:	c422                	sw	s0,8(sp)
20012b74:	842a                	mv	s0,a0
20012b76:	852e                	mv	a0,a1
20012b78:	85b2                	mv	a1,a2
20012b7a:	8636                	mv	a2,a3
20012b7c:	5ffef797          	auipc	a5,0x5ffef
20012b80:	f407aa23          	sw	zero,-172(a5) # 80001ad0 <errno>
20012b84:	c606                	sw	ra,12(sp)
20012b86:	25a1                	jal	200131ce <_lseek>
20012b88:	57fd                	li	a5,-1
20012b8a:	00f51863          	bne	a0,a5,20012b9a <_lseek_r+0x2a>
20012b8e:	5ffef797          	auipc	a5,0x5ffef
20012b92:	f427a783          	lw	a5,-190(a5) # 80001ad0 <errno>
20012b96:	c391                	beqz	a5,20012b9a <_lseek_r+0x2a>
20012b98:	c01c                	sw	a5,0(s0)
20012b9a:	40b2                	lw	ra,12(sp)
20012b9c:	4422                	lw	s0,8(sp)
20012b9e:	0141                	addi	sp,sp,16
20012ba0:	8082                	ret

20012ba2 <__swhatbuf_r>:
__swhatbuf_r():
20012ba2:	7159                	addi	sp,sp,-112
20012ba4:	d0ca                	sw	s2,96(sp)
20012ba6:	892e                	mv	s2,a1
20012ba8:	00e59583          	lh	a1,14(a1)
20012bac:	d4a2                	sw	s0,104(sp)
20012bae:	d2a6                	sw	s1,100(sp)
20012bb0:	d686                	sw	ra,108(sp)
20012bb2:	8432                	mv	s0,a2
20012bb4:	84b6                	mv	s1,a3
20012bb6:	0005dc63          	bgez	a1,20012bce <__swhatbuf_r+0x2c>
20012bba:	00c91783          	lh	a5,12(s2)
20012bbe:	0004a023          	sw	zero,0(s1)
20012bc2:	0807f793          	andi	a5,a5,128
20012bc6:	e38d                	bnez	a5,20012be8 <__swhatbuf_r+0x46>
20012bc8:	40000793          	li	a5,1024
20012bcc:	a005                	j	20012bec <__swhatbuf_r+0x4a>
20012bce:	0030                	addi	a2,sp,8
20012bd0:	2b25                	jal	20013108 <_fstat_r>
20012bd2:	fe0544e3          	bltz	a0,20012bba <__swhatbuf_r+0x18>
20012bd6:	4732                	lw	a4,12(sp)
20012bd8:	67bd                	lui	a5,0xf
20012bda:	8ff9                	and	a5,a5,a4
20012bdc:	7779                	lui	a4,0xffffe
20012bde:	97ba                	add	a5,a5,a4
20012be0:	0017b793          	seqz	a5,a5
20012be4:	c09c                	sw	a5,0(s1)
20012be6:	b7cd                	j	20012bc8 <__swhatbuf_r+0x26>
20012be8:	04000793          	li	a5,64
20012bec:	50b6                	lw	ra,108(sp)
20012bee:	c01c                	sw	a5,0(s0)
20012bf0:	5426                	lw	s0,104(sp)
20012bf2:	5496                	lw	s1,100(sp)
20012bf4:	5906                	lw	s2,96(sp)
20012bf6:	4501                	li	a0,0
20012bf8:	6165                	addi	sp,sp,112
20012bfa:	8082                	ret

20012bfc <__smakebuf_r>:
__smakebuf_r():
20012bfc:	00c5d783          	lhu	a5,12(a1)
20012c00:	1101                	addi	sp,sp,-32
20012c02:	cc22                	sw	s0,24(sp)
20012c04:	ce06                	sw	ra,28(sp)
20012c06:	ca26                	sw	s1,20(sp)
20012c08:	c84a                	sw	s2,16(sp)
20012c0a:	8b89                	andi	a5,a5,2
20012c0c:	842e                	mv	s0,a1
20012c0e:	cf89                	beqz	a5,20012c28 <__smakebuf_r+0x2c>
20012c10:	04740793          	addi	a5,s0,71
20012c14:	c01c                	sw	a5,0(s0)
20012c16:	c81c                	sw	a5,16(s0)
20012c18:	4785                	li	a5,1
20012c1a:	c85c                	sw	a5,20(s0)
20012c1c:	40f2                	lw	ra,28(sp)
20012c1e:	4462                	lw	s0,24(sp)
20012c20:	44d2                	lw	s1,20(sp)
20012c22:	4942                	lw	s2,16(sp)
20012c24:	6105                	addi	sp,sp,32
20012c26:	8082                	ret
20012c28:	0074                	addi	a3,sp,12
20012c2a:	0030                	addi	a2,sp,8
20012c2c:	892a                	mv	s2,a0
20012c2e:	3f95                	jal	20012ba2 <__swhatbuf_r>
20012c30:	45a2                	lw	a1,8(sp)
20012c32:	84aa                	mv	s1,a0
20012c34:	854a                	mv	a0,s2
20012c36:	e94ff0ef          	jal	ra,200122ca <_malloc_r>
20012c3a:	ed01                	bnez	a0,20012c52 <__smakebuf_r+0x56>
20012c3c:	00c41783          	lh	a5,12(s0)
20012c40:	2007f713          	andi	a4,a5,512
20012c44:	ff61                	bnez	a4,20012c1c <__smakebuf_r+0x20>
20012c46:	9bf1                	andi	a5,a5,-4
20012c48:	0027e793          	ori	a5,a5,2
20012c4c:	00f41623          	sh	a5,12(s0)
20012c50:	b7c1                	j	20012c10 <__smakebuf_r+0x14>
20012c52:	fffff797          	auipc	a5,0xfffff
20012c56:	4ba78793          	addi	a5,a5,1210 # 2001210c <_cleanup_r>
20012c5a:	02f92423          	sw	a5,40(s2)
20012c5e:	00c45783          	lhu	a5,12(s0)
20012c62:	c008                	sw	a0,0(s0)
20012c64:	c808                	sw	a0,16(s0)
20012c66:	0807e793          	ori	a5,a5,128
20012c6a:	00f41623          	sh	a5,12(s0)
20012c6e:	47a2                	lw	a5,8(sp)
20012c70:	c85c                	sw	a5,20(s0)
20012c72:	47b2                	lw	a5,12(sp)
20012c74:	cf89                	beqz	a5,20012c8e <__smakebuf_r+0x92>
20012c76:	00e41583          	lh	a1,14(s0)
20012c7a:	854a                	mv	a0,s2
20012c7c:	2975                	jal	20013138 <_isatty_r>
20012c7e:	c901                	beqz	a0,20012c8e <__smakebuf_r+0x92>
20012c80:	00c45783          	lhu	a5,12(s0)
20012c84:	9bf1                	andi	a5,a5,-4
20012c86:	0017e793          	ori	a5,a5,1
20012c8a:	00f41623          	sh	a5,12(s0)
20012c8e:	00c45503          	lhu	a0,12(s0)
20012c92:	8cc9                	or	s1,s1,a0
20012c94:	00941623          	sh	s1,12(s0)
20012c98:	b751                	j	20012c1c <__smakebuf_r+0x20>

20012c9a <memchr>:
memchr():
20012c9a:	0ff5f593          	zext.b	a1,a1
20012c9e:	962a                	add	a2,a2,a0
20012ca0:	00c51463          	bne	a0,a2,20012ca8 <memchr+0xe>
20012ca4:	4501                	li	a0,0
20012ca6:	8082                	ret
20012ca8:	00054783          	lbu	a5,0(a0)
20012cac:	feb78de3          	beq	a5,a1,20012ca6 <memchr+0xc>
20012cb0:	0505                	addi	a0,a0,1
20012cb2:	b7fd                	j	20012ca0 <memchr+0x6>

20012cb4 <__malloc_lock>:
__malloc_lock():
20012cb4:	8082                	ret

20012cb6 <__malloc_unlock>:
__malloc_unlock():
20012cb6:	8082                	ret

20012cb8 <_free_r>:
_free_r():
20012cb8:	c1c5                	beqz	a1,20012d58 <_free_r+0xa0>
20012cba:	ffc5a783          	lw	a5,-4(a1)
20012cbe:	1101                	addi	sp,sp,-32
20012cc0:	cc22                	sw	s0,24(sp)
20012cc2:	ce06                	sw	ra,28(sp)
20012cc4:	ffc58413          	addi	s0,a1,-4
20012cc8:	0007d363          	bgez	a5,20012cce <_free_r+0x16>
20012ccc:	943e                	add	s0,s0,a5
20012cce:	c62a                	sw	a0,12(sp)
20012cd0:	37d5                	jal	20012cb4 <__malloc_lock>
20012cd2:	5ffef717          	auipc	a4,0x5ffef
20012cd6:	df670713          	addi	a4,a4,-522 # 80001ac8 <__malloc_free_list>
20012cda:	431c                	lw	a5,0(a4)
20012cdc:	4532                	lw	a0,12(sp)
20012cde:	eb81                	bnez	a5,20012cee <_free_r+0x36>
20012ce0:	00042223          	sw	zero,4(s0)
20012ce4:	c300                	sw	s0,0(a4)
20012ce6:	4462                	lw	s0,24(sp)
20012ce8:	40f2                	lw	ra,28(sp)
20012cea:	6105                	addi	sp,sp,32
20012cec:	b7e9                	j	20012cb6 <__malloc_unlock>
20012cee:	00f47d63          	bgeu	s0,a5,20012d08 <_free_r+0x50>
20012cf2:	4010                	lw	a2,0(s0)
20012cf4:	00c406b3          	add	a3,s0,a2
20012cf8:	00d79663          	bne	a5,a3,20012d04 <_free_r+0x4c>
20012cfc:	4394                	lw	a3,0(a5)
20012cfe:	43dc                	lw	a5,4(a5)
20012d00:	96b2                	add	a3,a3,a2
20012d02:	c014                	sw	a3,0(s0)
20012d04:	c05c                	sw	a5,4(s0)
20012d06:	bff9                	j	20012ce4 <_free_r+0x2c>
20012d08:	873e                	mv	a4,a5
20012d0a:	43dc                	lw	a5,4(a5)
20012d0c:	c399                	beqz	a5,20012d12 <_free_r+0x5a>
20012d0e:	fef47de3          	bgeu	s0,a5,20012d08 <_free_r+0x50>
20012d12:	4314                	lw	a3,0(a4)
20012d14:	00d70633          	add	a2,a4,a3
20012d18:	00861f63          	bne	a2,s0,20012d36 <_free_r+0x7e>
20012d1c:	4010                	lw	a2,0(s0)
20012d1e:	96b2                	add	a3,a3,a2
20012d20:	c314                	sw	a3,0(a4)
20012d22:	00d70633          	add	a2,a4,a3
20012d26:	fcc790e3          	bne	a5,a2,20012ce6 <_free_r+0x2e>
20012d2a:	4390                	lw	a2,0(a5)
20012d2c:	43dc                	lw	a5,4(a5)
20012d2e:	96b2                	add	a3,a3,a2
20012d30:	c314                	sw	a3,0(a4)
20012d32:	c35c                	sw	a5,4(a4)
20012d34:	bf4d                	j	20012ce6 <_free_r+0x2e>
20012d36:	00c47563          	bgeu	s0,a2,20012d40 <_free_r+0x88>
20012d3a:	47b1                	li	a5,12
20012d3c:	c11c                	sw	a5,0(a0)
20012d3e:	b765                	j	20012ce6 <_free_r+0x2e>
20012d40:	4010                	lw	a2,0(s0)
20012d42:	00c406b3          	add	a3,s0,a2
20012d46:	00d79663          	bne	a5,a3,20012d52 <_free_r+0x9a>
20012d4a:	4394                	lw	a3,0(a5)
20012d4c:	43dc                	lw	a5,4(a5)
20012d4e:	96b2                	add	a3,a3,a2
20012d50:	c014                	sw	a3,0(s0)
20012d52:	c05c                	sw	a5,4(s0)
20012d54:	c340                	sw	s0,4(a4)
20012d56:	bf41                	j	20012ce6 <_free_r+0x2e>
20012d58:	8082                	ret

20012d5a <_printf_common>:
_printf_common():
20012d5a:	7179                	addi	sp,sp,-48
20012d5c:	cc52                	sw	s4,24(sp)
20012d5e:	499c                	lw	a5,16(a1)
20012d60:	8a3a                	mv	s4,a4
20012d62:	4598                	lw	a4,8(a1)
20012d64:	d422                	sw	s0,40(sp)
20012d66:	d226                	sw	s1,36(sp)
20012d68:	ce4e                	sw	s3,28(sp)
20012d6a:	ca56                	sw	s5,20(sp)
20012d6c:	d606                	sw	ra,44(sp)
20012d6e:	d04a                	sw	s2,32(sp)
20012d70:	c85a                	sw	s6,16(sp)
20012d72:	c65e                	sw	s7,12(sp)
20012d74:	89aa                	mv	s3,a0
20012d76:	842e                	mv	s0,a1
20012d78:	84b2                	mv	s1,a2
20012d7a:	8ab6                	mv	s5,a3
20012d7c:	00e7d363          	bge	a5,a4,20012d82 <_printf_common+0x28>
20012d80:	87ba                	mv	a5,a4
20012d82:	c09c                	sw	a5,0(s1)
20012d84:	04344703          	lbu	a4,67(s0)
20012d88:	c319                	beqz	a4,20012d8e <_printf_common+0x34>
20012d8a:	0785                	addi	a5,a5,1
20012d8c:	c09c                	sw	a5,0(s1)
20012d8e:	401c                	lw	a5,0(s0)
20012d90:	0207f793          	andi	a5,a5,32
20012d94:	c781                	beqz	a5,20012d9c <_printf_common+0x42>
20012d96:	409c                	lw	a5,0(s1)
20012d98:	0789                	addi	a5,a5,2
20012d9a:	c09c                	sw	a5,0(s1)
20012d9c:	00042903          	lw	s2,0(s0)
20012da0:	00697913          	andi	s2,s2,6
20012da4:	00091a63          	bnez	s2,20012db8 <_printf_common+0x5e>
20012da8:	01940b13          	addi	s6,s0,25
20012dac:	5bfd                	li	s7,-1
20012dae:	445c                	lw	a5,12(s0)
20012db0:	4098                	lw	a4,0(s1)
20012db2:	8f99                	sub	a5,a5,a4
20012db4:	04f94c63          	blt	s2,a5,20012e0c <_printf_common+0xb2>
20012db8:	04344783          	lbu	a5,67(s0)
20012dbc:	00f036b3          	snez	a3,a5
20012dc0:	401c                	lw	a5,0(s0)
20012dc2:	0207f793          	andi	a5,a5,32
20012dc6:	eba5                	bnez	a5,20012e36 <_printf_common+0xdc>
20012dc8:	04340613          	addi	a2,s0,67
20012dcc:	85d6                	mv	a1,s5
20012dce:	854e                	mv	a0,s3
20012dd0:	9a02                	jalr	s4
20012dd2:	57fd                	li	a5,-1
20012dd4:	04f50363          	beq	a0,a5,20012e1a <_printf_common+0xc0>
20012dd8:	401c                	lw	a5,0(s0)
20012dda:	4611                	li	a2,4
20012ddc:	4098                	lw	a4,0(s1)
20012dde:	8b99                	andi	a5,a5,6
20012de0:	4454                	lw	a3,12(s0)
20012de2:	4481                	li	s1,0
20012de4:	00c79763          	bne	a5,a2,20012df2 <_printf_common+0x98>
20012de8:	40e684b3          	sub	s1,a3,a4
20012dec:	0004d363          	bgez	s1,20012df2 <_printf_common+0x98>
20012df0:	4481                	li	s1,0
20012df2:	441c                	lw	a5,8(s0)
20012df4:	4818                	lw	a4,16(s0)
20012df6:	00f75463          	bge	a4,a5,20012dfe <_printf_common+0xa4>
20012dfa:	8f99                	sub	a5,a5,a4
20012dfc:	94be                	add	s1,s1,a5
20012dfe:	4901                	li	s2,0
20012e00:	0469                	addi	s0,s0,26
20012e02:	5b7d                	li	s6,-1
20012e04:	05249863          	bne	s1,s2,20012e54 <_printf_common+0xfa>
20012e08:	4501                	li	a0,0
20012e0a:	a809                	j	20012e1c <_printf_common+0xc2>
20012e0c:	4685                	li	a3,1
20012e0e:	865a                	mv	a2,s6
20012e10:	85d6                	mv	a1,s5
20012e12:	854e                	mv	a0,s3
20012e14:	9a02                	jalr	s4
20012e16:	01751e63          	bne	a0,s7,20012e32 <_printf_common+0xd8>
20012e1a:	557d                	li	a0,-1
20012e1c:	50b2                	lw	ra,44(sp)
20012e1e:	5422                	lw	s0,40(sp)
20012e20:	5492                	lw	s1,36(sp)
20012e22:	5902                	lw	s2,32(sp)
20012e24:	49f2                	lw	s3,28(sp)
20012e26:	4a62                	lw	s4,24(sp)
20012e28:	4ad2                	lw	s5,20(sp)
20012e2a:	4b42                	lw	s6,16(sp)
20012e2c:	4bb2                	lw	s7,12(sp)
20012e2e:	6145                	addi	sp,sp,48
20012e30:	8082                	ret
20012e32:	0905                	addi	s2,s2,1
20012e34:	bfad                	j	20012dae <_printf_common+0x54>
20012e36:	00d40733          	add	a4,s0,a3
20012e3a:	03000613          	li	a2,48
20012e3e:	04c701a3          	sb	a2,67(a4)
20012e42:	04544703          	lbu	a4,69(s0)
20012e46:	00168793          	addi	a5,a3,1 # 1001 <__heap_size+0x801>
20012e4a:	97a2                	add	a5,a5,s0
20012e4c:	0689                	addi	a3,a3,2
20012e4e:	04e781a3          	sb	a4,67(a5)
20012e52:	bf9d                	j	20012dc8 <_printf_common+0x6e>
20012e54:	4685                	li	a3,1
20012e56:	8622                	mv	a2,s0
20012e58:	85d6                	mv	a1,s5
20012e5a:	854e                	mv	a0,s3
20012e5c:	9a02                	jalr	s4
20012e5e:	fb650ee3          	beq	a0,s6,20012e1a <_printf_common+0xc0>
20012e62:	0905                	addi	s2,s2,1
20012e64:	b745                	j	20012e04 <_printf_common+0xaa>

20012e66 <_printf_i>:
_printf_i():
20012e66:	7179                	addi	sp,sp,-48
20012e68:	d422                	sw	s0,40(sp)
20012e6a:	d226                	sw	s1,36(sp)
20012e6c:	d04a                	sw	s2,32(sp)
20012e6e:	ce4e                	sw	s3,28(sp)
20012e70:	d606                	sw	ra,44(sp)
20012e72:	cc52                	sw	s4,24(sp)
20012e74:	ca56                	sw	s5,20(sp)
20012e76:	c85a                	sw	s6,16(sp)
20012e78:	0185c803          	lbu	a6,24(a1)
20012e7c:	07800793          	li	a5,120
20012e80:	84aa                	mv	s1,a0
20012e82:	842e                	mv	s0,a1
20012e84:	8932                	mv	s2,a2
20012e86:	89b6                	mv	s3,a3
20012e88:	0107ee63          	bltu	a5,a6,20012ea4 <_printf_i+0x3e>
20012e8c:	06200793          	li	a5,98
20012e90:	04358693          	addi	a3,a1,67
20012e94:	0107ed63          	bltu	a5,a6,20012eae <_printf_i+0x48>
20012e98:	1c080563          	beqz	a6,20013062 <_printf_i+0x1fc>
20012e9c:	05800793          	li	a5,88
20012ea0:	12f80a63          	beq	a6,a5,20012fd4 <_printf_i+0x16e>
20012ea4:	04240a93          	addi	s5,s0,66
20012ea8:	05040123          	sb	a6,66(s0)
20012eac:	a815                	j	20012ee0 <_printf_i+0x7a>
20012eae:	f9d80793          	addi	a5,a6,-99
20012eb2:	0ff7f793          	zext.b	a5,a5
20012eb6:	4655                	li	a2,21
20012eb8:	fef666e3          	bltu	a2,a5,20012ea4 <_printf_i+0x3e>
20012ebc:	ffffd617          	auipc	a2,0xffffd
20012ec0:	5b460613          	addi	a2,a2,1460 # 20010470 <__sf_fake_stdout+0x5c>
20012ec4:	078a                	slli	a5,a5,0x2
20012ec6:	97b2                	add	a5,a5,a2
20012ec8:	439c                	lw	a5,0(a5)
20012eca:	97b2                	add	a5,a5,a2
20012ecc:	8782                	jr	a5
20012ece:	431c                	lw	a5,0(a4)
20012ed0:	04258a93          	addi	s5,a1,66
20012ed4:	00478693          	addi	a3,a5,4
20012ed8:	439c                	lw	a5,0(a5)
20012eda:	c314                	sw	a3,0(a4)
20012edc:	04f58123          	sb	a5,66(a1)
20012ee0:	4785                	li	a5,1
20012ee2:	a25d                	j	20013088 <_printf_i+0x222>
20012ee4:	419c                	lw	a5,0(a1)
20012ee6:	4308                	lw	a0,0(a4)
20012ee8:	0807f613          	andi	a2,a5,128
20012eec:	00450593          	addi	a1,a0,4
20012ef0:	c20d                	beqz	a2,20012f12 <_printf_i+0xac>
20012ef2:	411c                	lw	a5,0(a0)
20012ef4:	c30c                	sw	a1,0(a4)
20012ef6:	0007d863          	bgez	a5,20012f06 <_printf_i+0xa0>
20012efa:	02d00713          	li	a4,45
20012efe:	40f007b3          	neg	a5,a5
20012f02:	04e401a3          	sb	a4,67(s0)
20012f06:	ffffd617          	auipc	a2,0xffffd
20012f0a:	54260613          	addi	a2,a2,1346 # 20010448 <__sf_fake_stdout+0x34>
20012f0e:	4829                	li	a6,10
20012f10:	a0a1                	j	20012f58 <_printf_i+0xf2>
20012f12:	0407f613          	andi	a2,a5,64
20012f16:	411c                	lw	a5,0(a0)
20012f18:	c30c                	sw	a1,0(a4)
20012f1a:	de71                	beqz	a2,20012ef6 <_printf_i+0x90>
20012f1c:	07c2                	slli	a5,a5,0x10
20012f1e:	87c1                	srai	a5,a5,0x10
20012f20:	bfd9                	j	20012ef6 <_printf_i+0x90>
20012f22:	4190                	lw	a2,0(a1)
20012f24:	431c                	lw	a5,0(a4)
20012f26:	08067513          	andi	a0,a2,128
20012f2a:	00478593          	addi	a1,a5,4
20012f2e:	c501                	beqz	a0,20012f36 <_printf_i+0xd0>
20012f30:	c30c                	sw	a1,0(a4)
20012f32:	439c                	lw	a5,0(a5)
20012f34:	a039                	j	20012f42 <_printf_i+0xdc>
20012f36:	04067613          	andi	a2,a2,64
20012f3a:	c30c                	sw	a1,0(a4)
20012f3c:	da7d                	beqz	a2,20012f32 <_printf_i+0xcc>
20012f3e:	0007d783          	lhu	a5,0(a5)
20012f42:	06f00713          	li	a4,111
20012f46:	ffffd617          	auipc	a2,0xffffd
20012f4a:	50260613          	addi	a2,a2,1282 # 20010448 <__sf_fake_stdout+0x34>
20012f4e:	0ee80463          	beq	a6,a4,20013036 <_printf_i+0x1d0>
20012f52:	4829                	li	a6,10
20012f54:	040401a3          	sb	zero,67(s0)
20012f58:	4058                	lw	a4,4(s0)
20012f5a:	c418                	sw	a4,8(s0)
20012f5c:	00074563          	bltz	a4,20012f66 <_printf_i+0x100>
20012f60:	400c                	lw	a1,0(s0)
20012f62:	99ed                	andi	a1,a1,-5
20012f64:	c00c                	sw	a1,0(s0)
20012f66:	e399                	bnez	a5,20012f6c <_printf_i+0x106>
20012f68:	8ab6                	mv	s5,a3
20012f6a:	cf19                	beqz	a4,20012f88 <_printf_i+0x122>
20012f6c:	8ab6                	mv	s5,a3
20012f6e:	0307f733          	remu	a4,a5,a6
20012f72:	1afd                	addi	s5,s5,-1
20012f74:	9732                	add	a4,a4,a2
20012f76:	00074703          	lbu	a4,0(a4)
20012f7a:	00ea8023          	sb	a4,0(s5)
20012f7e:	873e                	mv	a4,a5
20012f80:	0307d7b3          	divu	a5,a5,a6
20012f84:	ff0775e3          	bgeu	a4,a6,20012f6e <_printf_i+0x108>
20012f88:	47a1                	li	a5,8
20012f8a:	00f81e63          	bne	a6,a5,20012fa6 <_printf_i+0x140>
20012f8e:	401c                	lw	a5,0(s0)
20012f90:	8b85                	andi	a5,a5,1
20012f92:	cb91                	beqz	a5,20012fa6 <_printf_i+0x140>
20012f94:	4058                	lw	a4,4(s0)
20012f96:	481c                	lw	a5,16(s0)
20012f98:	00e7c763          	blt	a5,a4,20012fa6 <_printf_i+0x140>
20012f9c:	03000793          	li	a5,48
20012fa0:	fefa8fa3          	sb	a5,-1(s5)
20012fa4:	1afd                	addi	s5,s5,-1
20012fa6:	415686b3          	sub	a3,a3,s5
20012faa:	c814                	sw	a3,16(s0)
20012fac:	874e                	mv	a4,s3
20012fae:	86ca                	mv	a3,s2
20012fb0:	0070                	addi	a2,sp,12
20012fb2:	85a2                	mv	a1,s0
20012fb4:	8526                	mv	a0,s1
20012fb6:	3355                	jal	20012d5a <_printf_common>
20012fb8:	5a7d                	li	s4,-1
20012fba:	0d451b63          	bne	a0,s4,20013090 <_printf_i+0x22a>
20012fbe:	557d                	li	a0,-1
20012fc0:	50b2                	lw	ra,44(sp)
20012fc2:	5422                	lw	s0,40(sp)
20012fc4:	5492                	lw	s1,36(sp)
20012fc6:	5902                	lw	s2,32(sp)
20012fc8:	49f2                	lw	s3,28(sp)
20012fca:	4a62                	lw	s4,24(sp)
20012fcc:	4ad2                	lw	s5,20(sp)
20012fce:	4b42                	lw	s6,16(sp)
20012fd0:	6145                	addi	sp,sp,48
20012fd2:	8082                	ret
20012fd4:	050582a3          	sb	a6,69(a1)
20012fd8:	ffffd617          	auipc	a2,0xffffd
20012fdc:	47060613          	addi	a2,a2,1136 # 20010448 <__sf_fake_stdout+0x34>
20012fe0:	400c                	lw	a1,0(s0)
20012fe2:	4308                	lw	a0,0(a4)
20012fe4:	0805f813          	andi	a6,a1,128
20012fe8:	411c                	lw	a5,0(a0)
20012fea:	0511                	addi	a0,a0,4
20012fec:	02080d63          	beqz	a6,20013026 <_printf_i+0x1c0>
20012ff0:	c308                	sw	a0,0(a4)
20012ff2:	0015f713          	andi	a4,a1,1
20012ff6:	c701                	beqz	a4,20012ffe <_printf_i+0x198>
20012ff8:	0205e593          	ori	a1,a1,32
20012ffc:	c00c                	sw	a1,0(s0)
20012ffe:	4841                	li	a6,16
20013000:	fbb1                	bnez	a5,20012f54 <_printf_i+0xee>
20013002:	4018                	lw	a4,0(s0)
20013004:	fdf77713          	andi	a4,a4,-33
20013008:	c018                	sw	a4,0(s0)
2001300a:	b7a9                	j	20012f54 <_printf_i+0xee>
2001300c:	419c                	lw	a5,0(a1)
2001300e:	0207e793          	ori	a5,a5,32
20013012:	c19c                	sw	a5,0(a1)
20013014:	07800793          	li	a5,120
20013018:	04f402a3          	sb	a5,69(s0)
2001301c:	ffffd617          	auipc	a2,0xffffd
20013020:	44060613          	addi	a2,a2,1088 # 2001045c <__sf_fake_stdout+0x48>
20013024:	bf75                	j	20012fe0 <_printf_i+0x17a>
20013026:	0405f813          	andi	a6,a1,64
2001302a:	c308                	sw	a0,0(a4)
2001302c:	fc0803e3          	beqz	a6,20012ff2 <_printf_i+0x18c>
20013030:	07c2                	slli	a5,a5,0x10
20013032:	83c1                	srli	a5,a5,0x10
20013034:	bf7d                	j	20012ff2 <_printf_i+0x18c>
20013036:	4821                	li	a6,8
20013038:	bf31                	j	20012f54 <_printf_i+0xee>
2001303a:	4190                	lw	a2,0(a1)
2001303c:	431c                	lw	a5,0(a4)
2001303e:	49cc                	lw	a1,20(a1)
20013040:	08067813          	andi	a6,a2,128
20013044:	00478513          	addi	a0,a5,4
20013048:	00080663          	beqz	a6,20013054 <_printf_i+0x1ee>
2001304c:	c308                	sw	a0,0(a4)
2001304e:	439c                	lw	a5,0(a5)
20013050:	c38c                	sw	a1,0(a5)
20013052:	a801                	j	20013062 <_printf_i+0x1fc>
20013054:	c308                	sw	a0,0(a4)
20013056:	04067613          	andi	a2,a2,64
2001305a:	439c                	lw	a5,0(a5)
2001305c:	da75                	beqz	a2,20013050 <_printf_i+0x1ea>
2001305e:	00b79023          	sh	a1,0(a5)
20013062:	00042823          	sw	zero,16(s0)
20013066:	8ab6                	mv	s5,a3
20013068:	b791                	j	20012fac <_printf_i+0x146>
2001306a:	431c                	lw	a5,0(a4)
2001306c:	41d0                	lw	a2,4(a1)
2001306e:	4581                	li	a1,0
20013070:	00478693          	addi	a3,a5,4
20013074:	c314                	sw	a3,0(a4)
20013076:	0007aa83          	lw	s5,0(a5)
2001307a:	8556                	mv	a0,s5
2001307c:	3939                	jal	20012c9a <memchr>
2001307e:	c501                	beqz	a0,20013086 <_printf_i+0x220>
20013080:	41550533          	sub	a0,a0,s5
20013084:	c048                	sw	a0,4(s0)
20013086:	405c                	lw	a5,4(s0)
20013088:	c81c                	sw	a5,16(s0)
2001308a:	040401a3          	sb	zero,67(s0)
2001308e:	bf39                	j	20012fac <_printf_i+0x146>
20013090:	4814                	lw	a3,16(s0)
20013092:	8656                	mv	a2,s5
20013094:	85ca                	mv	a1,s2
20013096:	8526                	mv	a0,s1
20013098:	9982                	jalr	s3
2001309a:	f34502e3          	beq	a0,s4,20012fbe <_printf_i+0x158>
2001309e:	401c                	lw	a5,0(s0)
200130a0:	8b89                	andi	a5,a5,2
200130a2:	e78d                	bnez	a5,200130cc <_printf_i+0x266>
200130a4:	47b2                	lw	a5,12(sp)
200130a6:	4448                	lw	a0,12(s0)
200130a8:	f0f55ce3          	bge	a0,a5,20012fc0 <_printf_i+0x15a>
200130ac:	853e                	mv	a0,a5
200130ae:	bf09                	j	20012fc0 <_printf_i+0x15a>
200130b0:	4685                	li	a3,1
200130b2:	8656                	mv	a2,s5
200130b4:	85ca                	mv	a1,s2
200130b6:	8526                	mv	a0,s1
200130b8:	9982                	jalr	s3
200130ba:	f16502e3          	beq	a0,s6,20012fbe <_printf_i+0x158>
200130be:	0a05                	addi	s4,s4,1
200130c0:	445c                	lw	a5,12(s0)
200130c2:	4732                	lw	a4,12(sp)
200130c4:	8f99                	sub	a5,a5,a4
200130c6:	fefa45e3          	blt	s4,a5,200130b0 <_printf_i+0x24a>
200130ca:	bfe9                	j	200130a4 <_printf_i+0x23e>
200130cc:	4a01                	li	s4,0
200130ce:	01940a93          	addi	s5,s0,25
200130d2:	5b7d                	li	s6,-1
200130d4:	b7f5                	j	200130c0 <_printf_i+0x25a>

200130d6 <_read_r>:
_read_r():
200130d6:	1141                	addi	sp,sp,-16
200130d8:	c422                	sw	s0,8(sp)
200130da:	842a                	mv	s0,a0
200130dc:	852e                	mv	a0,a1
200130de:	85b2                	mv	a1,a2
200130e0:	8636                	mv	a2,a3
200130e2:	5ffef797          	auipc	a5,0x5ffef
200130e6:	9e07a723          	sw	zero,-1554(a5) # 80001ad0 <errno>
200130ea:	c606                	sw	ra,12(sp)
200130ec:	2231                	jal	200131f8 <_read>
200130ee:	57fd                	li	a5,-1
200130f0:	00f51863          	bne	a0,a5,20013100 <_read_r+0x2a>
200130f4:	5ffef797          	auipc	a5,0x5ffef
200130f8:	9dc7a783          	lw	a5,-1572(a5) # 80001ad0 <errno>
200130fc:	c391                	beqz	a5,20013100 <_read_r+0x2a>
200130fe:	c01c                	sw	a5,0(s0)
20013100:	40b2                	lw	ra,12(sp)
20013102:	4422                	lw	s0,8(sp)
20013104:	0141                	addi	sp,sp,16
20013106:	8082                	ret

20013108 <_fstat_r>:
_fstat_r():
20013108:	1141                	addi	sp,sp,-16
2001310a:	c422                	sw	s0,8(sp)
2001310c:	842a                	mv	s0,a0
2001310e:	852e                	mv	a0,a1
20013110:	85b2                	mv	a1,a2
20013112:	5ffef797          	auipc	a5,0x5ffef
20013116:	9a07af23          	sw	zero,-1602(a5) # 80001ad0 <errno>
2001311a:	c606                	sw	ra,12(sp)
2001311c:	20b5                	jal	20013188 <_fstat>
2001311e:	57fd                	li	a5,-1
20013120:	00f51863          	bne	a0,a5,20013130 <_fstat_r+0x28>
20013124:	5ffef797          	auipc	a5,0x5ffef
20013128:	9ac7a783          	lw	a5,-1620(a5) # 80001ad0 <errno>
2001312c:	c391                	beqz	a5,20013130 <_fstat_r+0x28>
2001312e:	c01c                	sw	a5,0(s0)
20013130:	40b2                	lw	ra,12(sp)
20013132:	4422                	lw	s0,8(sp)
20013134:	0141                	addi	sp,sp,16
20013136:	8082                	ret

20013138 <_isatty_r>:
_isatty_r():
20013138:	1141                	addi	sp,sp,-16
2001313a:	c422                	sw	s0,8(sp)
2001313c:	842a                	mv	s0,a0
2001313e:	852e                	mv	a0,a1
20013140:	5ffef797          	auipc	a5,0x5ffef
20013144:	9807a823          	sw	zero,-1648(a5) # 80001ad0 <errno>
20013148:	c606                	sw	ra,12(sp)
2001314a:	2095                	jal	200131ae <_isatty>
2001314c:	57fd                	li	a5,-1
2001314e:	00f51863          	bne	a0,a5,2001315e <_isatty_r+0x26>
20013152:	5ffef797          	auipc	a5,0x5ffef
20013156:	97e7a783          	lw	a5,-1666(a5) # 80001ad0 <errno>
2001315a:	c391                	beqz	a5,2001315e <_isatty_r+0x26>
2001315c:	c01c                	sw	a5,0(s0)
2001315e:	40b2                	lw	ra,12(sp)
20013160:	4422                	lw	s0,8(sp)
20013162:	0141                	addi	sp,sp,16
20013164:	8082                	ret

20013166 <_close>:
_close():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20013166:	1101                	addi	sp,sp,-32
20013168:	ce06                	sw	ra,28(sp)
2001316a:	cc22                	sw	s0,24(sp)
2001316c:	1000                	addi	s0,sp,32
2001316e:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20013172:	225d                	jal	20013318 <__errno>
20013174:	872a                	mv	a4,a0
20013176:	05800793          	li	a5,88
2001317a:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_close.c:5
    return -1;
2001317c:	57fd                	li	a5,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_close.c:6
}
2001317e:	853e                	mv	a0,a5
20013180:	40f2                	lw	ra,28(sp)
20013182:	4462                	lw	s0,24(sp)
20013184:	6105                	addi	sp,sp,32
20013186:	8082                	ret

20013188 <_fstat>:
_fstat():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20013188:	1101                	addi	sp,sp,-32
2001318a:	ce06                	sw	ra,28(sp)
2001318c:	cc22                	sw	s0,24(sp)
2001318e:	1000                	addi	s0,sp,32
20013190:	fea42623          	sw	a0,-20(s0)
20013194:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20013198:	2241                	jal	20013318 <__errno>
2001319a:	872a                	mv	a4,a0
2001319c:	fa800793          	li	a5,-88
200131a0:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_fstat.c:6
    return -1;
200131a2:	57fd                	li	a5,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_fstat.c:7
}
200131a4:	853e                	mv	a0,a5
200131a6:	40f2                	lw	ra,28(sp)
200131a8:	4462                	lw	s0,24(sp)
200131aa:	6105                	addi	sp,sp,32
200131ac:	8082                	ret

200131ae <_isatty>:
_isatty():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
200131ae:	1101                	addi	sp,sp,-32
200131b0:	ce22                	sw	s0,28(sp)
200131b2:	1000                	addi	s0,sp,32
200131b4:	fea42623          	sw	a0,-20(s0)
200131b8:	fec42783          	lw	a5,-20(s0)
200131bc:	17fd                	addi	a5,a5,-1
200131be:	0017b793          	seqz	a5,a5
200131c2:	0ff7f793          	zext.b	a5,a5
200131c6:	853e                	mv	a0,a5
200131c8:	4472                	lw	s0,28(sp)
200131ca:	6105                	addi	sp,sp,32
200131cc:	8082                	ret

200131ce <_lseek>:
_lseek():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
200131ce:	1101                	addi	sp,sp,-32
200131d0:	ce06                	sw	ra,28(sp)
200131d2:	cc22                	sw	s0,24(sp)
200131d4:	1000                	addi	s0,sp,32
200131d6:	fea42623          	sw	a0,-20(s0)
200131da:	feb42423          	sw	a1,-24(s0)
200131de:	fec42223          	sw	a2,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
200131e2:	2a1d                	jal	20013318 <__errno>
200131e4:	872a                	mv	a4,a0
200131e6:	05800793          	li	a5,88
200131ea:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_lseek.c:6
    return -1;
200131ec:	57fd                	li	a5,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_lseek.c:7
}
200131ee:	853e                	mv	a0,a5
200131f0:	40f2                	lw	ra,28(sp)
200131f2:	4462                	lw	s0,24(sp)
200131f4:	6105                	addi	sp,sp,32
200131f6:	8082                	ret

200131f8 <_read>:
_read():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
200131f8:	1101                	addi	sp,sp,-32
200131fa:	ce06                	sw	ra,28(sp)
200131fc:	cc22                	sw	s0,24(sp)
200131fe:	1000                	addi	s0,sp,32
20013200:	fea42623          	sw	a0,-20(s0)
20013204:	feb42423          	sw	a1,-24(s0)
20013208:	fec42223          	sw	a2,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
2001320c:	2231                	jal	20013318 <__errno>
2001320e:	872a                	mv	a4,a0
20013210:	05800793          	li	a5,88
20013214:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_read.c:6
    return -1;
20013216:	57fd                	li	a5,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_read.c:7
}
20013218:	853e                	mv	a0,a5
2001321a:	40f2                	lw	ra,28(sp)
2001321c:	4462                	lw	s0,24(sp)
2001321e:	6105                	addi	sp,sp,32
20013220:	8082                	ret

20013222 <_sbrk>:
_sbrk():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20013222:	7179                	addi	sp,sp,-48
20013224:	d606                	sw	ra,44(sp)
20013226:	d422                	sw	s0,40(sp)
20013228:	1800                	addi	s0,sp,48
2001322a:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
2001322e:	800027b7          	lui	a5,0x80002
20013232:	aa47a783          	lw	a5,-1372(a5) # 80001aa4 <metal_segment_heap_target_end+0xfffff334>
20013236:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
2001323a:	cd018713          	addi	a4,gp,-816 # 80001f70 <_sp>
2001323e:	4d018793          	addi	a5,gp,1232 # 80002770 <metal_segment_heap_target_end>
20013242:	00f71463          	bne	a4,a5,2001324a <_sbrk+0x28>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20013246:	57fd                	li	a5,-1
20013248:	a0b9                	j	20013296 <_sbrk+0x74>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
2001324a:	800027b7          	lui	a5,0x80002
2001324e:	aa47a703          	lw	a4,-1372(a5) # 80001aa4 <metal_segment_heap_target_end+0xfffff334>
20013252:	fdc42783          	lw	a5,-36(s0)
20013256:	973e                	add	a4,a4,a5
20013258:	4d018793          	addi	a5,gp,1232 # 80002770 <metal_segment_heap_target_end>
2001325c:	02f77663          	bgeu	a4,a5,20013288 <_sbrk+0x66>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20013260:	800027b7          	lui	a5,0x80002
20013264:	aa47a703          	lw	a4,-1372(a5) # 80001aa4 <metal_segment_heap_target_end+0xfffff334>
20013268:	fdc42783          	lw	a5,-36(s0)
2001326c:	973e                	add	a4,a4,a5
2001326e:	800027b7          	lui	a5,0x80002
20013272:	aae7a223          	sw	a4,-1372(a5) # 80001aa4 <metal_segment_heap_target_end+0xfffff334>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20013276:	fdc42583          	lw	a1,-36(s0)
2001327a:	fec42503          	lw	a0,-20(s0)
2001327e:	e0dfc0ef          	jal	ra,2001008a <metal_mem_scrub>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20013282:	fec42783          	lw	a5,-20(s0)
20013286:	a801                	j	20013296 <_sbrk+0x74>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20013288:	800027b7          	lui	a5,0x80002
2001328c:	4d018713          	addi	a4,gp,1232 # 80002770 <metal_segment_heap_target_end>
20013290:	aae7a223          	sw	a4,-1372(a5) # 80001aa4 <metal_segment_heap_target_end+0xfffff334>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20013294:	57fd                	li	a5,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_sbrk.c:43
}
20013296:	853e                	mv	a0,a5
20013298:	50b2                	lw	ra,44(sp)
2001329a:	5422                	lw	s0,40(sp)
2001329c:	6145                	addi	sp,sp,48
2001329e:	8082                	ret

200132a0 <_write>:
_write():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
200132a0:	7179                	addi	sp,sp,-48
200132a2:	d606                	sw	ra,44(sp)
200132a4:	d422                	sw	s0,40(sp)
200132a6:	1800                	addi	s0,sp,48
200132a8:	fca42e23          	sw	a0,-36(s0)
200132ac:	fcb42c23          	sw	a1,-40(s0)
200132b0:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
200132b4:	fdc42703          	lw	a4,-36(s0)
200132b8:	4785                	li	a5,1
200132ba:	00f70963          	beq	a4,a5,200132cc <_write+0x2c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
200132be:	28a9                	jal	20013318 <__errno>
200132c0:	872a                	mv	a4,a0
200132c2:	05800793          	li	a5,88
200132c6:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:10
        return -1;
200132c8:	57fd                	li	a5,-1
200132ca:	a82d                	j	20013304 <_write+0x64>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
200132cc:	fd842783          	lw	a5,-40(s0)
200132d0:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
200132d4:	fe042623          	sw	zero,-20(s0)
200132d8:	a839                	j	200132f6 <_write+0x56>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
200132da:	fe842703          	lw	a4,-24(s0)
200132de:	fec42783          	lw	a5,-20(s0)
200132e2:	97ba                	add	a5,a5,a4
200132e4:	0007c783          	lbu	a5,0(a5)
200132e8:	853e                	mv	a0,a5
200132ea:	2e89                	jal	2001363c <metal_tty_putc>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
200132ec:	fec42783          	lw	a5,-20(s0)
200132f0:	0785                	addi	a5,a5,1
200132f2:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
200132f6:	fec42703          	lw	a4,-20(s0)
200132fa:	fd442783          	lw	a5,-44(s0)
200132fe:	fcf76ee3          	bltu	a4,a5,200132da <_write+0x3a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:16
    return 0;
20013302:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_write.c:17
}
20013304:	853e                	mv	a0,a5
20013306:	50b2                	lw	ra,44(sp)
20013308:	5422                	lw	s0,40(sp)
2001330a:	6145                	addi	sp,sp,48
2001330c:	8082                	ret

2001330e <atexit>:
atexit():
2001330e:	85aa                	mv	a1,a0
20013310:	4681                	li	a3,0
20013312:	4601                	li	a2,0
20013314:	4501                	li	a0,0
20013316:	a0e9                	j	200133e0 <__register_exitproc>

20013318 <__errno>:
__errno():
20013318:	5ffee517          	auipc	a0,0x5ffee
2001331c:	78852503          	lw	a0,1928(a0) # 80001aa0 <_impure_ptr>
20013320:	8082                	ret

20013322 <exit>:
exit():
20013322:	1141                	addi	sp,sp,-16
20013324:	c422                	sw	s0,8(sp)
20013326:	c606                	sw	ra,12(sp)
20013328:	00000797          	auipc	a5,0x0
2001332c:	13478793          	addi	a5,a5,308 # 2001345c <__call_exitprocs>
20013330:	842a                	mv	s0,a0
20013332:	c399                	beqz	a5,20013338 <exit+0x16>
20013334:	4581                	li	a1,0
20013336:	221d                	jal	2001345c <__call_exitprocs>
20013338:	ffffe517          	auipc	a0,0xffffe
2001333c:	ce052503          	lw	a0,-800(a0) # 20011018 <_global_impure_ptr>
20013340:	551c                	lw	a5,40(a0)
20013342:	c391                	beqz	a5,20013346 <exit+0x24>
20013344:	9782                	jalr	a5
20013346:	8522                	mv	a0,s0
20013348:	3e9040ef          	jal	ra,20017f30 <_exit>

2001334c <__libc_fini_array>:
__libc_fini_array():
2001334c:	1141                	addi	sp,sp,-16
2001334e:	c422                	sw	s0,8(sp)
20013350:	c226                	sw	s1,4(sp)
20013352:	ffffd417          	auipc	s0,0xffffd
20013356:	f9e40413          	addi	s0,s0,-98 # 200102f0 <__fini_array_end>
2001335a:	ffffd497          	auipc	s1,0xffffd
2001335e:	f9648493          	addi	s1,s1,-106 # 200102f0 <__fini_array_end>
20013362:	8c05                	sub	s0,s0,s1
20013364:	c606                	sw	ra,12(sp)
20013366:	8409                	srai	s0,s0,0x2
20013368:	e411                	bnez	s0,20013374 <__libc_fini_array+0x28>
2001336a:	40b2                	lw	ra,12(sp)
2001336c:	4422                	lw	s0,8(sp)
2001336e:	4492                	lw	s1,4(sp)
20013370:	0141                	addi	sp,sp,16
20013372:	8082                	ret
20013374:	147d                	addi	s0,s0,-1
20013376:	00241793          	slli	a5,s0,0x2
2001337a:	97a6                	add	a5,a5,s1
2001337c:	439c                	lw	a5,0(a5)
2001337e:	9782                	jalr	a5
20013380:	b7e5                	j	20013368 <__libc_fini_array+0x1c>

20013382 <__libc_init_array>:
__libc_init_array():
20013382:	1141                	addi	sp,sp,-16
20013384:	c422                	sw	s0,8(sp)
20013386:	c226                	sw	s1,4(sp)
20013388:	ffffd417          	auipc	s0,0xffffd
2001338c:	f5840413          	addi	s0,s0,-168 # 200102e0 <_metal_tty_init_ptr>
20013390:	ffffd497          	auipc	s1,0xffffd
20013394:	f5048493          	addi	s1,s1,-176 # 200102e0 <_metal_tty_init_ptr>
20013398:	8c81                	sub	s1,s1,s0
2001339a:	c04a                	sw	s2,0(sp)
2001339c:	c606                	sw	ra,12(sp)
2001339e:	8489                	srai	s1,s1,0x2
200133a0:	4901                	li	s2,0
200133a2:	02991563          	bne	s2,s1,200133cc <__libc_init_array+0x4a>
200133a6:	ffffd417          	auipc	s0,0xffffd
200133aa:	f3a40413          	addi	s0,s0,-198 # 200102e0 <_metal_tty_init_ptr>
200133ae:	ffffd497          	auipc	s1,0xffffd
200133b2:	f3248493          	addi	s1,s1,-206 # 200102e0 <_metal_tty_init_ptr>
200133b6:	8c81                	sub	s1,s1,s0
200133b8:	8489                	srai	s1,s1,0x2
200133ba:	4901                	li	s2,0
200133bc:	00991d63          	bne	s2,s1,200133d6 <__libc_init_array+0x54>
200133c0:	40b2                	lw	ra,12(sp)
200133c2:	4422                	lw	s0,8(sp)
200133c4:	4492                	lw	s1,4(sp)
200133c6:	4902                	lw	s2,0(sp)
200133c8:	0141                	addi	sp,sp,16
200133ca:	8082                	ret
200133cc:	401c                	lw	a5,0(s0)
200133ce:	0905                	addi	s2,s2,1
200133d0:	0411                	addi	s0,s0,4
200133d2:	9782                	jalr	a5
200133d4:	b7f9                	j	200133a2 <__libc_init_array+0x20>
200133d6:	401c                	lw	a5,0(s0)
200133d8:	0905                	addi	s2,s2,1
200133da:	0411                	addi	s0,s0,4
200133dc:	9782                	jalr	a5
200133de:	bff9                	j	200133bc <__libc_init_array+0x3a>

200133e0 <__register_exitproc>:
__register_exitproc():
200133e0:	88aa                	mv	a7,a0
200133e2:	5ffee517          	auipc	a0,0x5ffee
200133e6:	6f250513          	addi	a0,a0,1778 # 80001ad4 <_global_atexit>
200133ea:	411c                	lw	a5,0(a0)
200133ec:	ef91                	bnez	a5,20013408 <__register_exitproc+0x28>
200133ee:	5ffee717          	auipc	a4,0x5ffee
200133f2:	6f270713          	addi	a4,a4,1778 # 80001ae0 <_global_atexit0>
200133f6:	c118                	sw	a4,0(a0)
200133f8:	00000513          	li	a0,0
200133fc:	87ba                	mv	a5,a4
200133fe:	c509                	beqz	a0,20013408 <__register_exitproc+0x28>
20013400:	411c                	lw	a5,0(a0)
20013402:	08f72423          	sw	a5,136(a4)
20013406:	87ba                	mv	a5,a4
20013408:	43d8                	lw	a4,4(a5)
2001340a:	487d                	li	a6,31
2001340c:	557d                	li	a0,-1
2001340e:	04e84663          	blt	a6,a4,2001345a <__register_exitproc+0x7a>
20013412:	02088d63          	beqz	a7,2001344c <__register_exitproc+0x6c>
20013416:	0887a803          	lw	a6,136(a5)
2001341a:	04080063          	beqz	a6,2001345a <__register_exitproc+0x7a>
2001341e:	00271513          	slli	a0,a4,0x2
20013422:	9542                	add	a0,a0,a6
20013424:	c110                	sw	a2,0(a0)
20013426:	10082303          	lw	t1,256(a6)
2001342a:	4605                	li	a2,1
2001342c:	00e61633          	sll	a2,a2,a4
20013430:	00c36333          	or	t1,t1,a2
20013434:	10682023          	sw	t1,256(a6)
20013438:	08d52023          	sw	a3,128(a0)
2001343c:	4689                	li	a3,2
2001343e:	00d89763          	bne	a7,a3,2001344c <__register_exitproc+0x6c>
20013442:	10482683          	lw	a3,260(a6)
20013446:	8e55                	or	a2,a2,a3
20013448:	10c82223          	sw	a2,260(a6)
2001344c:	00170693          	addi	a3,a4,1
20013450:	070a                	slli	a4,a4,0x2
20013452:	c3d4                	sw	a3,4(a5)
20013454:	97ba                	add	a5,a5,a4
20013456:	c78c                	sw	a1,8(a5)
20013458:	4501                	li	a0,0
2001345a:	8082                	ret

2001345c <__call_exitprocs>:
__call_exitprocs():
2001345c:	7179                	addi	sp,sp,-48
2001345e:	ca56                	sw	s5,20(sp)
20013460:	c85a                	sw	s6,16(sp)
20013462:	c65e                	sw	s7,12(sp)
20013464:	c462                	sw	s8,8(sp)
20013466:	d606                	sw	ra,44(sp)
20013468:	d422                	sw	s0,40(sp)
2001346a:	d226                	sw	s1,36(sp)
2001346c:	d04a                	sw	s2,32(sp)
2001346e:	ce4e                	sw	s3,28(sp)
20013470:	cc52                	sw	s4,24(sp)
20013472:	c266                	sw	s9,4(sp)
20013474:	8b2a                	mv	s6,a0
20013476:	8aae                	mv	s5,a1
20013478:	5ffeeb97          	auipc	s7,0x5ffee
2001347c:	65cb8b93          	addi	s7,s7,1628 # 80001ad4 <_global_atexit>
20013480:	4c05                	li	s8,1
20013482:	000ba483          	lw	s1,0(s7)
20013486:	cc81                	beqz	s1,2001349e <__call_exitprocs+0x42>
20013488:	40c0                	lw	s0,4(s1)
2001348a:	0884a983          	lw	s3,136(s1)
2001348e:	fff40913          	addi	s2,s0,-1
20013492:	040a                	slli	s0,s0,0x2
20013494:	00898a33          	add	s4,s3,s0
20013498:	9426                	add	s0,s0,s1
2001349a:	00095f63          	bgez	s2,200134b8 <__call_exitprocs+0x5c>
2001349e:	50b2                	lw	ra,44(sp)
200134a0:	5422                	lw	s0,40(sp)
200134a2:	5492                	lw	s1,36(sp)
200134a4:	5902                	lw	s2,32(sp)
200134a6:	49f2                	lw	s3,28(sp)
200134a8:	4a62                	lw	s4,24(sp)
200134aa:	4ad2                	lw	s5,20(sp)
200134ac:	4b42                	lw	s6,16(sp)
200134ae:	4bb2                	lw	s7,12(sp)
200134b0:	4c22                	lw	s8,8(sp)
200134b2:	4c92                	lw	s9,4(sp)
200134b4:	6145                	addi	sp,sp,48
200134b6:	8082                	ret
200134b8:	000a8c63          	beqz	s5,200134d0 <__call_exitprocs+0x74>
200134bc:	00099663          	bnez	s3,200134c8 <__call_exitprocs+0x6c>
200134c0:	197d                	addi	s2,s2,-1
200134c2:	1a71                	addi	s4,s4,-4
200134c4:	1471                	addi	s0,s0,-4
200134c6:	bfd1                	j	2001349a <__call_exitprocs+0x3e>
200134c8:	07ca2783          	lw	a5,124(s4)
200134cc:	ff579ae3          	bne	a5,s5,200134c0 <__call_exitprocs+0x64>
200134d0:	40d8                	lw	a4,4(s1)
200134d2:	405c                	lw	a5,4(s0)
200134d4:	177d                	addi	a4,a4,-1
200134d6:	03271863          	bne	a4,s2,20013506 <__call_exitprocs+0xaa>
200134da:	0124a223          	sw	s2,4(s1)
200134de:	d3ed                	beqz	a5,200134c0 <__call_exitprocs+0x64>
200134e0:	0044ac83          	lw	s9,4(s1)
200134e4:	00098863          	beqz	s3,200134f4 <__call_exitprocs+0x98>
200134e8:	1009a683          	lw	a3,256(s3)
200134ec:	012c1733          	sll	a4,s8,s2
200134f0:	8ef9                	and	a3,a3,a4
200134f2:	ee89                	bnez	a3,2001350c <__call_exitprocs+0xb0>
200134f4:	9782                	jalr	a5
200134f6:	40d8                	lw	a4,4(s1)
200134f8:	000ba783          	lw	a5,0(s7)
200134fc:	f99713e3          	bne	a4,s9,20013482 <__call_exitprocs+0x26>
20013500:	fcf480e3          	beq	s1,a5,200134c0 <__call_exitprocs+0x64>
20013504:	bfbd                	j	20013482 <__call_exitprocs+0x26>
20013506:	00042223          	sw	zero,4(s0)
2001350a:	bfd1                	j	200134de <__call_exitprocs+0x82>
2001350c:	1049a683          	lw	a3,260(s3)
20013510:	ffca2583          	lw	a1,-4(s4)
20013514:	8f75                	and	a4,a4,a3
20013516:	e701                	bnez	a4,2001351e <__call_exitprocs+0xc2>
20013518:	855a                	mv	a0,s6
2001351a:	9782                	jalr	a5
2001351c:	bfe9                	j	200134f6 <__call_exitprocs+0x9a>
2001351e:	852e                	mv	a0,a1
20013520:	9782                	jalr	a5
20013522:	bfd1                	j	200134f6 <__call_exitprocs+0x9a>

20013524 <metal_init>:
metal_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20013524:	1101                	addi	sp,sp,-32
20013526:	ce06                	sw	ra,28(sp)
20013528:	cc22                	sw	s0,24(sp)
2001352a:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
2001352c:	800027b7          	lui	a5,0x80002
20013530:	ad87a783          	lw	a5,-1320(a5) # 80001ad8 <metal_segment_heap_target_end+0xfffff368>
20013534:	efa9                	bnez	a5,2001358e <metal_init+0x6a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20013536:	800027b7          	lui	a5,0x80002
2001353a:	4705                	li	a4,1
2001353c:	ace7ac23          	sw	a4,-1320(a5) # 80001ad8 <metal_segment_heap_target_end+0xfffff368>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20013540:	200107b7          	lui	a5,0x20010
20013544:	2ec78713          	addi	a4,a5,748 # 200102ec <metal_tty_init>
20013548:	200107b7          	lui	a5,0x20010
2001354c:	2e078793          	addi	a5,a5,736 # 200102e0 <_metal_tty_init_ptr>
20013550:	04e7f163          	bgeu	a5,a4,20013592 <metal_init+0x6e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20013554:	200107b7          	lui	a5,0x20010
20013558:	2e078793          	addi	a5,a5,736 # 200102e0 <_metal_tty_init_ptr>
2001355c:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20013560:	a831                	j	2001357c <metal_init+0x58>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20013562:	fec42783          	lw	a5,-20(s0)
20013566:	439c                	lw	a5,0(a5)
20013568:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:33

        func();
2001356c:	fe842783          	lw	a5,-24(s0)
20013570:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:35

        funcptr += 1;
20013572:	fec42783          	lw	a5,-20(s0)
20013576:	0791                	addi	a5,a5,4
20013578:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
2001357c:	fec42703          	lw	a4,-20(s0)
20013580:	200107b7          	lui	a5,0x20010
20013584:	2ec78793          	addi	a5,a5,748 # 200102ec <metal_tty_init>
20013588:	fcf71de3          	bne	a4,a5,20013562 <metal_init+0x3e>
2001358c:	a021                	j	20013594 <metal_init+0x70>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:21
        return;
2001358e:	0001                	nop
20013590:	a011                	j	20013594 <metal_init+0x70>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:26
        return;
20013592:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:37
    }
}
20013594:	40f2                	lw	ra,28(sp)
20013596:	4462                	lw	s0,24(sp)
20013598:	6105                	addi	sp,sp,32
2001359a:	8082                	ret

2001359c <metal_fini>:
metal_fini():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:39

void metal_fini(void) {
2001359c:	1101                	addi	sp,sp,-32
2001359e:	ce06                	sw	ra,28(sp)
200135a0:	cc22                	sw	s0,24(sp)
200135a2:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
200135a4:	800027b7          	lui	a5,0x80002
200135a8:	adc7a783          	lw	a5,-1316(a5) # 80001adc <metal_segment_heap_target_end+0xfffff36c>
200135ac:	efa9                	bnez	a5,20013606 <metal_fini+0x6a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
200135ae:	800027b7          	lui	a5,0x80002
200135b2:	4705                	li	a4,1
200135b4:	ace7ae23          	sw	a4,-1316(a5) # 80001adc <metal_segment_heap_target_end+0xfffff36c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
200135b8:	200107b7          	lui	a5,0x20010
200135bc:	2f078713          	addi	a4,a5,752 # 200102f0 <__fini_array_end>
200135c0:	200107b7          	lui	a5,0x20010
200135c4:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
200135c8:	04e7f163          	bgeu	a5,a4,2001360a <metal_fini+0x6e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
200135cc:	200107b7          	lui	a5,0x20010
200135d0:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
200135d4:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
200135d8:	a831                	j	200135f4 <metal_fini+0x58>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
200135da:	fec42783          	lw	a5,-20(s0)
200135de:	439c                	lw	a5,0(a5)
200135e0:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:55

        func();
200135e4:	fe842783          	lw	a5,-24(s0)
200135e8:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:57

        funcptr += 1;
200135ea:	fec42783          	lw	a5,-20(s0)
200135ee:	0791                	addi	a5,a5,4
200135f0:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
200135f4:	fec42703          	lw	a4,-20(s0)
200135f8:	200107b7          	lui	a5,0x20010
200135fc:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
20013600:	fcf71de3          	bne	a4,a5,200135da <metal_fini+0x3e>
20013604:	a021                	j	2001360c <metal_fini+0x70>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:43
        return;
20013606:	0001                	nop
20013608:	a011                	j	2001360c <metal_fini+0x70>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:48
        return;
2001360a:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:59
    }
}
2001360c:	40f2                	lw	ra,28(sp)
2001360e:	4462                	lw	s0,24(sp)
20013610:	6105                	addi	sp,sp,32
20013612:	8082                	ret

20013614 <metal_init_run>:
metal_init_run():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20013614:	1141                	addi	sp,sp,-16
20013616:	c606                	sw	ra,12(sp)
20013618:	c422                	sw	s0,8(sp)
2001361a:	0800                	addi	s0,sp,16
2001361c:	3721                	jal	20013524 <metal_init>
2001361e:	0001                	nop
20013620:	40b2                	lw	ra,12(sp)
20013622:	4422                	lw	s0,8(sp)
20013624:	0141                	addi	sp,sp,16
20013626:	8082                	ret

20013628 <metal_fini_run>:
metal_fini_run():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20013628:	1141                	addi	sp,sp,-16
2001362a:	c606                	sw	ra,12(sp)
2001362c:	c422                	sw	s0,8(sp)
2001362e:	0800                	addi	s0,sp,16
20013630:	37b5                	jal	2001359c <metal_fini>
20013632:	0001                	nop
20013634:	40b2                	lw	ra,12(sp)
20013636:	4422                	lw	s0,8(sp)
20013638:	0141                	addi	sp,sp,16
2001363a:	8082                	ret

2001363c <metal_tty_putc>:
metal_tty_putc():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
2001363c:	1101                	addi	sp,sp,-32
2001363e:	ce06                	sw	ra,28(sp)
20013640:	cc22                	sw	s0,24(sp)
20013642:	1000                	addi	s0,sp,32
20013644:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20013648:	fec42583          	lw	a1,-20(s0)
2001364c:	800027b7          	lui	a5,0x80002
20013650:	a3878513          	addi	a0,a5,-1480 # 80001a38 <metal_segment_heap_target_end+0xfffff2c8>
20013654:	282d                	jal	2001368e <metal_uart_putc>
20013656:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/tty.c:14
}
20013658:	853e                	mv	a0,a5
2001365a:	40f2                	lw	ra,28(sp)
2001365c:	4462                	lw	s0,24(sp)
2001365e:	6105                	addi	sp,sp,32
20013660:	8082                	ret

20013662 <metal_uart_init>:
metal_uart_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20013662:	1101                	addi	sp,sp,-32
20013664:	ce06                	sw	ra,28(sp)
20013666:	cc22                	sw	s0,24(sp)
20013668:	1000                	addi	s0,sp,32
2001366a:	fea42623          	sw	a0,-20(s0)
2001366e:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20013672:	fec42783          	lw	a5,-20(s0)
20013676:	439c                	lw	a5,0(a5)
20013678:	439c                	lw	a5,0(a5)
2001367a:	fe842583          	lw	a1,-24(s0)
2001367e:	fec42503          	lw	a0,-20(s0)
20013682:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/uart.h:61
}
20013684:	0001                	nop
20013686:	40f2                	lw	ra,28(sp)
20013688:	4462                	lw	s0,24(sp)
2001368a:	6105                	addi	sp,sp,32
2001368c:	8082                	ret

2001368e <metal_uart_putc>:
metal_uart_putc():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
2001368e:	1101                	addi	sp,sp,-32
20013690:	ce06                	sw	ra,28(sp)
20013692:	cc22                	sw	s0,24(sp)
20013694:	1000                	addi	s0,sp,32
20013696:	fea42623          	sw	a0,-20(s0)
2001369a:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
2001369e:	fec42783          	lw	a5,-20(s0)
200136a2:	439c                	lw	a5,0(a5)
200136a4:	43dc                	lw	a5,4(a5)
200136a6:	fe842583          	lw	a1,-24(s0)
200136aa:	fec42503          	lw	a0,-20(s0)
200136ae:	9782                	jalr	a5
200136b0:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/uart.h:71
}
200136b2:	853e                	mv	a0,a5
200136b4:	40f2                	lw	ra,28(sp)
200136b6:	4462                	lw	s0,24(sp)
200136b8:	6105                	addi	sp,sp,32
200136ba:	8082                	ret

200136bc <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
200136bc:	1101                	addi	sp,sp,-32
200136be:	ce06                	sw	ra,28(sp)
200136c0:	cc22                	sw	s0,24(sp)
200136c2:	1000                	addi	s0,sp,32
200136c4:	fea42623          	sw	a0,-20(s0)
200136c8:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
200136cc:	fec42783          	lw	a5,-20(s0)
200136d0:	439c                	lw	a5,0(a5)
200136d2:	4bdc                	lw	a5,20(a5)
200136d4:	fe842583          	lw	a1,-24(s0)
200136d8:	fec42503          	lw	a0,-20(s0)
200136dc:	9782                	jalr	a5
200136de:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/uart.h:113
}
200136e0:	853e                	mv	a0,a5
200136e2:	40f2                	lw	ra,28(sp)
200136e4:	4462                	lw	s0,24(sp)
200136e6:	6105                	addi	sp,sp,32
200136e8:	8082                	ret

200136ea <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
200136ea:	1101                	addi	sp,sp,-32
200136ec:	ce22                	sw	s0,28(sp)
200136ee:	1000                	addi	s0,sp,32
200136f0:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200136f4:	fec42703          	lw	a4,-20(s0)
200136f8:	800027b7          	lui	a5,0x80002
200136fc:	aac78793          	addi	a5,a5,-1364 # 80001aac <metal_segment_heap_target_end+0xfffff33c>
20013700:	00f71563          	bne	a4,a5,2001370a <__metal_driver_sifive_clint0_control_base+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20013704:	020007b7          	lui	a5,0x2000
20013708:	a011                	j	2001370c <__metal_driver_sifive_clint0_control_base+0x22>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:238
	}
	else {
		return 0;
2001370a:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:240
	}
}
2001370c:	853e                	mv	a0,a5
2001370e:	4472                	lw	s0,28(sp)
20013710:	6105                	addi	sp,sp,32
20013712:	8082                	ret

20013714 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20013714:	1101                	addi	sp,sp,-32
20013716:	ce22                	sw	s0,28(sp)
20013718:	1000                	addi	s0,sp,32
2001371a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2001371e:	fec42703          	lw	a4,-20(s0)
20013722:	800027b7          	lui	a5,0x80002
20013726:	aac78793          	addi	a5,a5,-1364 # 80001aac <metal_segment_heap_target_end+0xfffff33c>
2001372a:	00f71463          	bne	a4,a5,20013732 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
2001372e:	4789                	li	a5,2
20013730:	a011                	j	20013734 <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:258
	}
	else {
		return 0;
20013732:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:260
	}
}
20013734:	853e                	mv	a0,a5
20013736:	4472                	lw	s0,28(sp)
20013738:	6105                	addi	sp,sp,32
2001373a:	8082                	ret

2001373c <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2001373c:	1101                	addi	sp,sp,-32
2001373e:	ce22                	sw	s0,28(sp)
20013740:	1000                	addi	s0,sp,32
20013742:	fea42623          	sw	a0,-20(s0)
20013746:	feb42423          	sw	a1,-24(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:264
	if (idx == 0) {
2001374a:	fe842783          	lw	a5,-24(s0)
2001374e:	e791                	bnez	a5,2001375a <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20013750:	800017b7          	lui	a5,0x80001
20013754:	09078793          	addi	a5,a5,144 # 80001090 <metal_segment_heap_target_end+0xffffe920>
20013758:	a821                	j	20013770 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:267
	}
	else if (idx == 1) {
2001375a:	fe842703          	lw	a4,-24(s0)
2001375e:	4785                	li	a5,1
20013760:	00f71763          	bne	a4,a5,2001376e <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20013764:	800017b7          	lui	a5,0x80001
20013768:	09078793          	addi	a5,a5,144 # 80001090 <metal_segment_heap_target_end+0xffffe920>
2001376c:	a011                	j	20013770 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:271
	}
	else {
		return NULL;
2001376e:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:273
	}
}
20013770:	853e                	mv	a0,a5
20013772:	4472                	lw	s0,28(sp)
20013774:	6105                	addi	sp,sp,32
20013776:	8082                	ret

20013778 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20013778:	1101                	addi	sp,sp,-32
2001377a:	ce22                	sw	s0,28(sp)
2001377c:	1000                	addi	s0,sp,32
2001377e:	fea42623          	sw	a0,-20(s0)
20013782:	feb42423          	sw	a1,-24(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:277
	if (idx == 0) {
20013786:	fe842783          	lw	a5,-24(s0)
2001378a:	e399                	bnez	a5,20013790 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:278
		return 3;
2001378c:	478d                	li	a5,3
2001378e:	a809                	j	200137a0 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:280
	}
	else if (idx == 1) {
20013790:	fe842703          	lw	a4,-24(s0)
20013794:	4785                	li	a5,1
20013796:	00f71463          	bne	a4,a5,2001379e <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:281
		return 7;
2001379a:	479d                	li	a5,7
2001379c:	a011                	j	200137a0 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:284
	}
	else {
		return 0;
2001379e:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:286
	}
}
200137a0:	853e                	mv	a0,a5
200137a2:	4472                	lw	s0,28(sp)
200137a4:	6105                	addi	sp,sp,32
200137a6:	8082                	ret

200137a8 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
200137a8:	715d                	addi	sp,sp,-80
200137aa:	c686                	sw	ra,76(sp)
200137ac:	c4a2                	sw	s0,72(sp)
200137ae:	c2ca                	sw	s2,68(sp)
200137b0:	c0ce                	sw	s3,64(sp)
200137b2:	de52                	sw	s4,60(sp)
200137b4:	dc56                	sw	s5,56(sp)
200137b6:	da5a                	sw	s6,52(sp)
200137b8:	d85e                	sw	s7,48(sp)
200137ba:	d662                	sw	s8,44(sp)
200137bc:	d466                	sw	s9,40(sp)
200137be:	0880                	addi	s0,sp,80
200137c0:	faa42e23          	sw	a0,-68(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
200137c4:	fbc42783          	lw	a5,-68(s0)
200137c8:	853e                	mv	a0,a5
200137ca:	3705                	jal	200136ea <__metal_driver_sifive_clint0_control_base>
200137cc:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
200137d0:	fcc42703          	lw	a4,-52(s0)
200137d4:	67b1                	lui	a5,0xc
200137d6:	17f1                	addi	a5,a5,-4
200137d8:	97ba                	add	a5,a5,a4
200137da:	439c                	lw	a5,0(a5)
200137dc:	fcf42423          	sw	a5,-56(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
200137e0:	fcc42703          	lw	a4,-52(s0)
200137e4:	67b1                	lui	a5,0xc
200137e6:	17e1                	addi	a5,a5,-8
200137e8:	97ba                	add	a5,a5,a4
200137ea:	439c                	lw	a5,0(a5)
200137ec:	fcf42223          	sw	a5,-60(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200137f0:	fcc42703          	lw	a4,-52(s0)
200137f4:	67b1                	lui	a5,0xc
200137f6:	17f1                	addi	a5,a5,-4
200137f8:	97ba                	add	a5,a5,a4
200137fa:	439c                	lw	a5,0(a5)
200137fc:	fc842703          	lw	a4,-56(s0)
20013800:	fcf718e3          	bne	a4,a5,200137d0 <__metal_clint0_mtime_get+0x28>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
20013804:	fc842783          	lw	a5,-56(s0)
20013808:	8c3e                	mv	s8,a5
2001380a:	4c81                	li	s9,0
2001380c:	000c1993          	slli	s3,s8,0x0
20013810:	4901                	li	s2,0
20013812:	fc442783          	lw	a5,-60(s0)
20013816:	8a3e                	mv	s4,a5
20013818:	4a81                	li	s5,0
2001381a:	01496b33          	or	s6,s2,s4
2001381e:	0159ebb3          	or	s7,s3,s5
20013822:	875a                	mv	a4,s6
20013824:	87de                	mv	a5,s7
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:30
}
20013826:	853a                	mv	a0,a4
20013828:	85be                	mv	a1,a5
2001382a:	40b6                	lw	ra,76(sp)
2001382c:	4426                	lw	s0,72(sp)
2001382e:	4916                	lw	s2,68(sp)
20013830:	4986                	lw	s3,64(sp)
20013832:	5a72                	lw	s4,60(sp)
20013834:	5ae2                	lw	s5,56(sp)
20013836:	5b52                	lw	s6,52(sp)
20013838:	5bc2                	lw	s7,48(sp)
2001383a:	5c32                	lw	s8,44(sp)
2001383c:	5ca2                	lw	s9,40(sp)
2001383e:	6161                	addi	sp,sp,80
20013840:	8082                	ret

20013842 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20013842:	7179                	addi	sp,sp,-48
20013844:	d606                	sw	ra,44(sp)
20013846:	d422                	sw	s0,40(sp)
20013848:	d24a                	sw	s2,36(sp)
2001384a:	d04e                	sw	s3,32(sp)
2001384c:	1800                	addi	s0,sp,48
2001384e:	fca42e23          	sw	a0,-36(s0)
20013852:	fcb42c23          	sw	a1,-40(s0)
20013856:	fcc42823          	sw	a2,-48(s0)
2001385a:	fcd42a23          	sw	a3,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
2001385e:	fdc42783          	lw	a5,-36(s0)
20013862:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20013866:	fec42783          	lw	a5,-20(s0)
2001386a:	853e                	mv	a0,a5
2001386c:	3dbd                	jal	200136ea <__metal_driver_sifive_clint0_control_base>
2001386e:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20013872:	fd842783          	lw	a5,-40(s0)
20013876:	078e                	slli	a5,a5,0x3
20013878:	873e                	mv	a4,a5
2001387a:	fe842783          	lw	a5,-24(s0)
2001387e:	973e                	add	a4,a4,a5
20013880:	6791                	lui	a5,0x4
20013882:	0791                	addi	a5,a5,4
20013884:	97ba                	add	a5,a5,a4
20013886:	873e                	mv	a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20013888:	57fd                	li	a5,-1
2001388a:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2001388c:	fd842783          	lw	a5,-40(s0)
20013890:	078e                	slli	a5,a5,0x3
20013892:	873e                	mv	a4,a5
20013894:	fe842783          	lw	a5,-24(s0)
20013898:	973e                	add	a4,a4,a5
2001389a:	6791                	lui	a5,0x4
2001389c:	97ba                	add	a5,a5,a4
2001389e:	873e                	mv	a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
200138a0:	fd042783          	lw	a5,-48(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
200138a4:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
200138a6:	fd442783          	lw	a5,-44(s0)
200138aa:	0007d913          	srli	s2,a5,0x0
200138ae:	4981                	li	s3,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200138b0:	fd842783          	lw	a5,-40(s0)
200138b4:	078e                	slli	a5,a5,0x3
200138b6:	873e                	mv	a4,a5
200138b8:	fe842783          	lw	a5,-24(s0)
200138bc:	973e                	add	a4,a4,a5
200138be:	6791                	lui	a5,0x4
200138c0:	0791                	addi	a5,a5,4
200138c2:	97ba                	add	a5,a5,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
200138c4:	874a                	mv	a4,s2
200138c6:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
200138c8:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:55
}
200138ca:	853e                	mv	a0,a5
200138cc:	50b2                	lw	ra,44(sp)
200138ce:	5422                	lw	s0,40(sp)
200138d0:	5912                	lw	s2,36(sp)
200138d2:	5982                	lw	s3,32(sp)
200138d4:	6145                	addi	sp,sp,48
200138d6:	8082                	ret

200138d8 <_get_cpu_intc>:
_get_cpu_intc():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
200138d8:	1101                	addi	sp,sp,-32
200138da:	ce06                	sw	ra,28(sp)
200138dc:	cc22                	sw	s0,24(sp)
200138de:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
200138e0:	fe042623          	sw	zero,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
200138e4:	f14027f3          	csrr	a5,mhartid
200138e8:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
200138ec:	fec42783          	lw	a5,-20(s0)
200138f0:	853e                	mv	a0,a5
200138f2:	4a6040ef          	jal	ra,20017d98 <metal_cpu_get>
200138f6:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
200138fa:	fe842503          	lw	a0,-24(s0)
200138fe:	474040ef          	jal	ra,20017d72 <metal_cpu_interrupt_controller>
20013902:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:65
}
20013904:	853e                	mv	a0,a5
20013906:	40f2                	lw	ra,28(sp)
20013908:	4462                	lw	s0,24(sp)
2001390a:	6105                	addi	sp,sp,32
2001390c:	8082                	ret

2001390e <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
2001390e:	7139                	addi	sp,sp,-64
20013910:	de06                	sw	ra,60(sp)
20013912:	dc22                	sw	s0,56(sp)
20013914:	0080                	addi	s0,sp,64
20013916:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2001391a:	fcc42503          	lw	a0,-52(s0)
2001391e:	3bdd                	jal	20013714 <__metal_driver_sifive_clint0_num_interrupts>
20013920:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20013924:	fcc42783          	lw	a5,-52(s0)
20013928:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
2001392c:	fe442783          	lw	a5,-28(s0)
20013930:	43dc                	lw	a5,4(a5)
20013932:	efa9                	bnez	a5,2001398c <__metal_driver_riscv_clint0_init+0x7e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20013934:	fe042623          	sw	zero,-20(s0)
20013938:	a081                	j	20013978 <__metal_driver_riscv_clint0_init+0x6a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001393a:	fec42583          	lw	a1,-20(s0)
2001393e:	fcc42503          	lw	a0,-52(s0)
20013942:	3bed                	jal	2001373c <__metal_driver_sifive_clint0_interrupt_parents>
20013944:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20013948:	fec42583          	lw	a1,-20(s0)
2001394c:	fcc42503          	lw	a0,-52(s0)
20013950:	3525                	jal	20013778 <__metal_driver_sifive_clint0_interrupt_lines>
20013952:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20013956:	fe042783          	lw	a5,-32(s0)
2001395a:	439c                	lw	a5,0(a5)
2001395c:	4fdc                	lw	a5,28(a5)
2001395e:	fcc42683          	lw	a3,-52(s0)
20013962:	4601                	li	a2,0
20013964:	fdc42583          	lw	a1,-36(s0)
20013968:	fe042503          	lw	a0,-32(s0)
2001396c:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
2001396e:	fec42783          	lw	a5,-20(s0)
20013972:	0785                	addi	a5,a5,1
20013974:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20013978:	fec42703          	lw	a4,-20(s0)
2001397c:	fe842783          	lw	a5,-24(s0)
20013980:	faf74de3          	blt	a4,a5,2001393a <__metal_driver_riscv_clint0_init+0x2c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20013984:	fe442783          	lw	a5,-28(s0)
20013988:	4705                	li	a4,1
2001398a:	c3d8                	sw	a4,4(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
2001398c:	0001                	nop
2001398e:	50f2                	lw	ra,60(sp)
20013990:	5462                	lw	s0,56(sp)
20013992:	6121                	addi	sp,sp,64
20013994:	8082                	ret

20013996 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20013996:	7139                	addi	sp,sp,-64
20013998:	de06                	sw	ra,60(sp)
2001399a:	dc22                	sw	s0,56(sp)
2001399c:	0080                	addi	s0,sp,64
2001399e:	fca42623          	sw	a0,-52(s0)
200139a2:	fcb42423          	sw	a1,-56(s0)
200139a6:	fcc42223          	sw	a2,-60(s0)
200139aa:	fcd42023          	sw	a3,-64(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
200139ae:	57fd                	li	a5,-1
200139b0:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
200139b4:	4a4010ef          	jal	ra,20014e58 <__metal_controller_interrupt_vector_mode>
200139b8:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
200139bc:	fe042423          	sw	zero,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
200139c0:	3f21                	jal	200138d8 <_get_cpu_intc>
200139c2:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200139c6:	fcc42503          	lw	a0,-52(s0)
200139ca:	33a9                	jal	20013714 <__metal_driver_sifive_clint0_num_interrupts>
200139cc:	fca42c23          	sw	a0,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
200139d0:	fe042703          	lw	a4,-32(s0)
200139d4:	4785                	li	a5,1
200139d6:	00f70863          	beq	a4,a5,200139e6 <__metal_driver_riscv_clint0_register+0x50>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
200139da:	fe042783          	lw	a5,-32(s0)
200139de:	c781                	beqz	a5,200139e6 <__metal_driver_riscv_clint0_register+0x50>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
200139e0:	fec42783          	lw	a5,-20(s0)
200139e4:	a049                	j	20013a66 <__metal_driver_riscv_clint0_register+0xd0>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
200139e6:	fe042223          	sw	zero,-28(s0)
200139ea:	a091                	j	20013a2e <__metal_driver_riscv_clint0_register+0x98>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200139ec:	fe442583          	lw	a1,-28(s0)
200139f0:	fcc42503          	lw	a0,-52(s0)
200139f4:	3351                	jal	20013778 <__metal_driver_sifive_clint0_interrupt_lines>
200139f6:	fca42a23          	sw	a0,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200139fa:	fe442583          	lw	a1,-28(s0)
200139fe:	fcc42503          	lw	a0,-52(s0)
20013a02:	3b2d                	jal	2001373c <__metal_driver_sifive_clint0_interrupt_parents>
20013a04:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20013a08:	fdc42703          	lw	a4,-36(s0)
20013a0c:	fe842783          	lw	a5,-24(s0)
20013a10:	00f71863          	bne	a4,a5,20013a20 <__metal_driver_riscv_clint0_register+0x8a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20013a14:	fc842703          	lw	a4,-56(s0)
20013a18:	fd442783          	lw	a5,-44(s0)
20013a1c:	02f70063          	beq	a4,a5,20013a3c <__metal_driver_riscv_clint0_register+0xa6>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20013a20:	fe042423          	sw	zero,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20013a24:	fe442783          	lw	a5,-28(s0)
20013a28:	0785                	addi	a5,a5,1
20013a2a:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20013a2e:	fe442703          	lw	a4,-28(s0)
20013a32:	fd842783          	lw	a5,-40(s0)
20013a36:	faf74be3          	blt	a4,a5,200139ec <__metal_driver_riscv_clint0_register+0x56>
20013a3a:	a011                	j	20013a3e <__metal_driver_riscv_clint0_register+0xa8>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20013a3c:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20013a3e:	fe842783          	lw	a5,-24(s0)
20013a42:	c385                	beqz	a5,20013a62 <__metal_driver_riscv_clint0_register+0xcc>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20013a44:	fe842783          	lw	a5,-24(s0)
20013a48:	439c                	lw	a5,0(a5)
20013a4a:	4fdc                	lw	a5,28(a5)
20013a4c:	fc042683          	lw	a3,-64(s0)
20013a50:	fc442603          	lw	a2,-60(s0)
20013a54:	fc842583          	lw	a1,-56(s0)
20013a58:	fe842503          	lw	a0,-24(s0)
20013a5c:	9782                	jalr	a5
20013a5e:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20013a62:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:115
}
20013a66:	853e                	mv	a0,a5
20013a68:	50f2                	lw	ra,60(sp)
20013a6a:	5462                	lw	s0,56(sp)
20013a6c:	6121                	addi	sp,sp,64
20013a6e:	8082                	ret

20013a70 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20013a70:	7179                	addi	sp,sp,-48
20013a72:	d622                	sw	s0,44(sp)
20013a74:	1800                	addi	s0,sp,48
20013a76:	fca42e23          	sw	a0,-36(s0)
20013a7a:	fcb42c23          	sw	a1,-40(s0)
20013a7e:	fcc42a23          	sw	a2,-44(s0)
20013a82:	fcd42823          	sw	a3,-48(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20013a86:	57fd                	li	a5,-1
20013a88:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20013a8c:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:123
}
20013a90:	853e                	mv	a0,a5
20013a92:	5432                	lw	s0,44(sp)
20013a94:	6145                	addi	sp,sp,48
20013a96:	8082                	ret

20013a98 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20013a98:	1101                	addi	sp,sp,-32
20013a9a:	ce06                	sw	ra,28(sp)
20013a9c:	cc22                	sw	s0,24(sp)
20013a9e:	1000                	addi	s0,sp,32
20013aa0:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20013aa4:	3b4010ef          	jal	ra,20014e58 <__metal_controller_interrupt_vector_mode>
20013aa8:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:128
}
20013aaa:	853e                	mv	a0,a5
20013aac:	40f2                	lw	ra,28(sp)
20013aae:	4462                	lw	s0,24(sp)
20013ab0:	6105                	addi	sp,sp,32
20013ab2:	8082                	ret

20013ab4 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20013ab4:	7179                	addi	sp,sp,-48
20013ab6:	d606                	sw	ra,44(sp)
20013ab8:	d422                	sw	s0,40(sp)
20013aba:	1800                	addi	s0,sp,48
20013abc:	fca42e23          	sw	a0,-36(s0)
20013ac0:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20013ac4:	57fd                	li	a5,-1
20013ac6:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20013aca:	3539                	jal	200138d8 <_get_cpu_intc>
20013acc:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20013ad0:	fe842783          	lw	a5,-24(s0)
20013ad4:	c395                	beqz	a5,20013af8 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20013ad6:	fd842703          	lw	a4,-40(s0)
20013ada:	4785                	li	a5,1
20013adc:	02e7e063          	bltu	a5,a4,20013afc <__metal_driver_riscv_clint0_set_vector_mode+0x48>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20013ae0:	fe842783          	lw	a5,-24(s0)
20013ae4:	439c                	lw	a5,0(a5)
20013ae6:	43dc                	lw	a5,4(a5)
20013ae8:	fd842583          	lw	a1,-40(s0)
20013aec:	fe842503          	lw	a0,-24(s0)
20013af0:	9782                	jalr	a5
20013af2:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20013af6:	a021                	j	20013afe <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20013af8:	0001                	nop
20013afa:	a011                	j	20013afe <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20013afc:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20013afe:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:148
}
20013b02:	853e                	mv	a0,a5
20013b04:	50b2                	lw	ra,44(sp)
20013b06:	5422                	lw	s0,40(sp)
20013b08:	6145                	addi	sp,sp,48
20013b0a:	8082                	ret

20013b0c <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20013b0c:	7139                	addi	sp,sp,-64
20013b0e:	de06                	sw	ra,60(sp)
20013b10:	dc22                	sw	s0,56(sp)
20013b12:	0080                	addi	s0,sp,64
20013b14:	fca42623          	sw	a0,-52(s0)
20013b18:	fcb42423          	sw	a1,-56(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20013b1c:	57fd                	li	a5,-1
20013b1e:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20013b22:	fc842783          	lw	a5,-56(s0)
20013b26:	c7c9                	beqz	a5,20013bb0 <__metal_driver_riscv_clint0_enable+0xa4>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20013b28:	fe042423          	sw	zero,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20013b2c:	3375                	jal	200138d8 <_get_cpu_intc>
20013b2e:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20013b32:	fcc42503          	lw	a0,-52(s0)
20013b36:	3ef9                	jal	20013714 <__metal_driver_sifive_clint0_num_interrupts>
20013b38:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20013b3c:	fe042223          	sw	zero,-28(s0)
20013b40:	a091                	j	20013b84 <__metal_driver_riscv_clint0_enable+0x78>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20013b42:	fe442583          	lw	a1,-28(s0)
20013b46:	fcc42503          	lw	a0,-52(s0)
20013b4a:	313d                	jal	20013778 <__metal_driver_sifive_clint0_interrupt_lines>
20013b4c:	fca42c23          	sw	a0,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20013b50:	fe442583          	lw	a1,-28(s0)
20013b54:	fcc42503          	lw	a0,-52(s0)
20013b58:	36d5                	jal	2001373c <__metal_driver_sifive_clint0_interrupt_parents>
20013b5a:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20013b5e:	fe042703          	lw	a4,-32(s0)
20013b62:	fe842783          	lw	a5,-24(s0)
20013b66:	00f71863          	bne	a4,a5,20013b76 <__metal_driver_riscv_clint0_enable+0x6a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20013b6a:	fc842703          	lw	a4,-56(s0)
20013b6e:	fd842783          	lw	a5,-40(s0)
20013b72:	02f70063          	beq	a4,a5,20013b92 <__metal_driver_riscv_clint0_enable+0x86>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20013b76:	fe042423          	sw	zero,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20013b7a:	fe442783          	lw	a5,-28(s0)
20013b7e:	0785                	addi	a5,a5,1
20013b80:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20013b84:	fe442703          	lw	a4,-28(s0)
20013b88:	fdc42783          	lw	a5,-36(s0)
20013b8c:	faf74be3          	blt	a4,a5,20013b42 <__metal_driver_riscv_clint0_enable+0x36>
20013b90:	a011                	j	20013b94 <__metal_driver_riscv_clint0_enable+0x88>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20013b92:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20013b94:	fe842783          	lw	a5,-24(s0)
20013b98:	cf81                	beqz	a5,20013bb0 <__metal_driver_riscv_clint0_enable+0xa4>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20013b9a:	fe842783          	lw	a5,-24(s0)
20013b9e:	439c                	lw	a5,0(a5)
20013ba0:	53dc                	lw	a5,36(a5)
20013ba2:	fc842583          	lw	a1,-56(s0)
20013ba6:	fe842503          	lw	a0,-24(s0)
20013baa:	9782                	jalr	a5
20013bac:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20013bb0:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:178
}
20013bb4:	853e                	mv	a0,a5
20013bb6:	50f2                	lw	ra,60(sp)
20013bb8:	5462                	lw	s0,56(sp)
20013bba:	6121                	addi	sp,sp,64
20013bbc:	8082                	ret

20013bbe <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20013bbe:	7139                	addi	sp,sp,-64
20013bc0:	de06                	sw	ra,60(sp)
20013bc2:	dc22                	sw	s0,56(sp)
20013bc4:	0080                	addi	s0,sp,64
20013bc6:	fca42623          	sw	a0,-52(s0)
20013bca:	fcb42423          	sw	a1,-56(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20013bce:	57fd                	li	a5,-1
20013bd0:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20013bd4:	fc842783          	lw	a5,-56(s0)
20013bd8:	c7c9                	beqz	a5,20013c62 <__metal_driver_riscv_clint0_disable+0xa4>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20013bda:	fe042423          	sw	zero,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20013bde:	39ed                	jal	200138d8 <_get_cpu_intc>
20013be0:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20013be4:	fcc42503          	lw	a0,-52(s0)
20013be8:	3635                	jal	20013714 <__metal_driver_sifive_clint0_num_interrupts>
20013bea:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20013bee:	fe042223          	sw	zero,-28(s0)
20013bf2:	a091                	j	20013c36 <__metal_driver_riscv_clint0_disable+0x78>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20013bf4:	fe442583          	lw	a1,-28(s0)
20013bf8:	fcc42503          	lw	a0,-52(s0)
20013bfc:	3eb5                	jal	20013778 <__metal_driver_sifive_clint0_interrupt_lines>
20013bfe:	fca42c23          	sw	a0,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20013c02:	fe442583          	lw	a1,-28(s0)
20013c06:	fcc42503          	lw	a0,-52(s0)
20013c0a:	3e0d                	jal	2001373c <__metal_driver_sifive_clint0_interrupt_parents>
20013c0c:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20013c10:	fe042703          	lw	a4,-32(s0)
20013c14:	fe842783          	lw	a5,-24(s0)
20013c18:	00f71863          	bne	a4,a5,20013c28 <__metal_driver_riscv_clint0_disable+0x6a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20013c1c:	fc842703          	lw	a4,-56(s0)
20013c20:	fd842783          	lw	a5,-40(s0)
20013c24:	02f70063          	beq	a4,a5,20013c44 <__metal_driver_riscv_clint0_disable+0x86>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20013c28:	fe042423          	sw	zero,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20013c2c:	fe442783          	lw	a5,-28(s0)
20013c30:	0785                	addi	a5,a5,1
20013c32:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20013c36:	fe442703          	lw	a4,-28(s0)
20013c3a:	fdc42783          	lw	a5,-36(s0)
20013c3e:	faf74be3          	blt	a4,a5,20013bf4 <__metal_driver_riscv_clint0_disable+0x36>
20013c42:	a011                	j	20013c46 <__metal_driver_riscv_clint0_disable+0x88>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20013c44:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20013c46:	fe842783          	lw	a5,-24(s0)
20013c4a:	cf81                	beqz	a5,20013c62 <__metal_driver_riscv_clint0_disable+0xa4>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20013c4c:	fe842783          	lw	a5,-24(s0)
20013c50:	439c                	lw	a5,0(a5)
20013c52:	579c                	lw	a5,40(a5)
20013c54:	fc842583          	lw	a1,-56(s0)
20013c58:	fe842503          	lw	a0,-24(s0)
20013c5c:	9782                	jalr	a5
20013c5e:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20013c62:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:208
}
20013c66:	853e                	mv	a0,a5
20013c68:	50f2                	lw	ra,60(sp)
20013c6a:	5462                	lw	s0,56(sp)
20013c6c:	6121                	addi	sp,sp,64
20013c6e:	8082                	ret

20013c70 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20013c70:	7179                	addi	sp,sp,-48
20013c72:	d606                	sw	ra,44(sp)
20013c74:	d422                	sw	s0,40(sp)
20013c76:	1800                	addi	s0,sp,48
20013c78:	fca42e23          	sw	a0,-36(s0)
20013c7c:	fcb42c23          	sw	a1,-40(s0)
20013c80:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20013c84:	57fd                	li	a5,-1
20013c86:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20013c8a:	fdc42783          	lw	a5,-36(s0)
20013c8e:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20013c92:	fdc42503          	lw	a0,-36(s0)
20013c96:	a55ff0ef          	jal	ra,200136ea <__metal_driver_sifive_clint0_control_base>
20013c9a:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20013c9e:	fd842703          	lw	a4,-40(s0)
20013ca2:	4791                	li	a5,4
20013ca4:	0cf70163          	beq	a4,a5,20013d66 <__metal_driver_riscv_clint0_command_request+0xf6>
20013ca8:	fd842703          	lw	a4,-40(s0)
20013cac:	4791                	li	a5,4
20013cae:	0ee7c163          	blt	a5,a4,20013d90 <__metal_driver_riscv_clint0_command_request+0x120>
20013cb2:	fd842703          	lw	a4,-40(s0)
20013cb6:	478d                	li	a5,3
20013cb8:	06f70663          	beq	a4,a5,20013d24 <__metal_driver_riscv_clint0_command_request+0xb4>
20013cbc:	fd842703          	lw	a4,-40(s0)
20013cc0:	478d                	li	a5,3
20013cc2:	0ce7c763          	blt	a5,a4,20013d90 <__metal_driver_riscv_clint0_command_request+0x120>
20013cc6:	fd842703          	lw	a4,-40(s0)
20013cca:	4785                	li	a5,1
20013ccc:	00f70863          	beq	a4,a5,20013cdc <__metal_driver_riscv_clint0_command_request+0x6c>
20013cd0:	fd842703          	lw	a4,-40(s0)
20013cd4:	4789                	li	a5,2
20013cd6:	02f70363          	beq	a4,a5,20013cfc <__metal_driver_riscv_clint0_command_request+0x8c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20013cda:	a85d                	j	20013d90 <__metal_driver_riscv_clint0_command_request+0x120>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20013cdc:	fd442783          	lw	a5,-44(s0)
20013ce0:	cbd5                	beqz	a5,20013d94 <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20013ce2:	fe842503          	lw	a0,-24(s0)
20013ce6:	ac3ff0ef          	jal	ra,200137a8 <__metal_clint0_mtime_get>
20013cea:	872a                	mv	a4,a0
20013cec:	87ae                	mv	a5,a1
20013cee:	fd442683          	lw	a3,-44(s0)
20013cf2:	c298                	sw	a4,0(a3)
20013cf4:	c2dc                	sw	a5,4(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20013cf6:	fe042623          	sw	zero,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20013cfa:	a869                	j	20013d94 <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20013cfc:	fd442783          	lw	a5,-44(s0)
20013d00:	cfc1                	beqz	a5,20013d98 <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20013d02:	fd442783          	lw	a5,-44(s0)
20013d06:	439c                	lw	a5,0(a5)
20013d08:	fef42023          	sw	a5,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20013d0c:	fe042783          	lw	a5,-32(s0)
20013d10:	078a                	slli	a5,a5,0x2
20013d12:	873e                	mv	a4,a5
20013d14:	fe442783          	lw	a5,-28(s0)
20013d18:	97ba                	add	a5,a5,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20013d1a:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20013d1e:	fe042623          	sw	zero,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20013d22:	a89d                	j	20013d98 <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20013d24:	fd442783          	lw	a5,-44(s0)
20013d28:	cbb5                	beqz	a5,20013d9c <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20013d2a:	fd442783          	lw	a5,-44(s0)
20013d2e:	439c                	lw	a5,0(a5)
20013d30:	fef42023          	sw	a5,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20013d34:	fe042783          	lw	a5,-32(s0)
20013d38:	078a                	slli	a5,a5,0x2
20013d3a:	873e                	mv	a4,a5
20013d3c:	fe442783          	lw	a5,-28(s0)
20013d40:	97ba                	add	a5,a5,a4
20013d42:	873e                	mv	a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20013d44:	4785                	li	a5,1
20013d46:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20013d48:	0480000f          	fence	o,i
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20013d4c:	fe042783          	lw	a5,-32(s0)
20013d50:	078a                	slli	a5,a5,0x2
20013d52:	873e                	mv	a4,a5
20013d54:	fe442783          	lw	a5,-28(s0)
20013d58:	97ba                	add	a5,a5,a4
20013d5a:	439c                	lw	a5,0(a5)
20013d5c:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20013d60:	fe042623          	sw	zero,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20013d64:	a825                	j	20013d9c <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20013d66:	fe042623          	sw	zero,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20013d6a:	fd442783          	lw	a5,-44(s0)
20013d6e:	cb8d                	beqz	a5,20013da0 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20013d70:	fd442783          	lw	a5,-44(s0)
20013d74:	439c                	lw	a5,0(a5)
20013d76:	fef42023          	sw	a5,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20013d7a:	fe042783          	lw	a5,-32(s0)
20013d7e:	078a                	slli	a5,a5,0x2
20013d80:	873e                	mv	a4,a5
20013d82:	fe442783          	lw	a5,-28(s0)
20013d86:	97ba                	add	a5,a5,a4
20013d88:	439c                	lw	a5,0(a5)
20013d8a:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20013d8e:	a809                	j	20013da0 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20013d90:	0001                	nop
20013d92:	a801                	j	20013da2 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20013d94:	0001                	nop
20013d96:	a031                	j	20013da2 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20013d98:	0001                	nop
20013d9a:	a021                	j	20013da2 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20013d9c:	0001                	nop
20013d9e:	a011                	j	20013da2 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20013da0:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20013da2:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:267
}
20013da6:	853e                	mv	a0,a5
20013da8:	50b2                	lw	ra,44(sp)
20013daa:	5422                	lw	s0,40(sp)
20013dac:	6145                	addi	sp,sp,48
20013dae:	8082                	ret

20013db0 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20013db0:	7179                	addi	sp,sp,-48
20013db2:	d606                	sw	ra,44(sp)
20013db4:	d422                	sw	s0,40(sp)
20013db6:	1800                	addi	s0,sp,48
20013db8:	fca42e23          	sw	a0,-36(s0)
20013dbc:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20013dc0:	006040ef          	jal	ra,20017dc6 <metal_cpu_get_current_hartid>
20013dc4:	87aa                	mv	a5,a0
20013dc6:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20013dca:	fec40793          	addi	a5,s0,-20
20013dce:	863e                	mv	a2,a5
20013dd0:	4589                	li	a1,2
20013dd2:	fdc42503          	lw	a0,-36(s0)
20013dd6:	3d69                	jal	20013c70 <__metal_driver_riscv_clint0_command_request>
20013dd8:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20013dda:	853e                	mv	a0,a5
20013ddc:	50b2                	lw	ra,44(sp)
20013dde:	5422                	lw	s0,40(sp)
20013de0:	6145                	addi	sp,sp,48
20013de2:	8082                	ret

20013de4 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20013de4:	7179                	addi	sp,sp,-48
20013de6:	d606                	sw	ra,44(sp)
20013de8:	d422                	sw	s0,40(sp)
20013dea:	1800                	addi	s0,sp,48
20013dec:	fca42e23          	sw	a0,-36(s0)
20013df0:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20013df4:	7d3030ef          	jal	ra,20017dc6 <metal_cpu_get_current_hartid>
20013df8:	87aa                	mv	a5,a0
20013dfa:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20013dfe:	fec40793          	addi	a5,s0,-20
20013e02:	863e                	mv	a2,a5
20013e04:	458d                	li	a1,3
20013e06:	fdc42503          	lw	a0,-36(s0)
20013e0a:	359d                	jal	20013c70 <__metal_driver_riscv_clint0_command_request>
20013e0c:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20013e0e:	853e                	mv	a0,a5
20013e10:	50b2                	lw	ra,44(sp)
20013e12:	5422                	lw	s0,40(sp)
20013e14:	6145                	addi	sp,sp,48
20013e16:	8082                	ret

20013e18 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20013e18:	1101                	addi	sp,sp,-32
20013e1a:	ce22                	sw	s0,28(sp)
20013e1c:	1000                	addi	s0,sp,32
20013e1e:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20013e22:	fec42703          	lw	a4,-20(s0)
20013e26:	81418793          	addi	a5,gp,-2028 # 80001ab4 <__metal_dt_cpu_0>
20013e2a:	00f71463          	bne	a4,a5,20013e32 <__metal_driver_cpu_hartid+0x1a>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:294
		return 0;
20013e2e:	4781                	li	a5,0
20013e30:	a011                	j	20013e34 <__metal_driver_cpu_hartid+0x1c>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:297
	}
	else {
		return -1;
20013e32:	57fd                	li	a5,-1
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:299
	}
}
20013e34:	853e                	mv	a0,a5
20013e36:	4472                	lw	s0,28(sp)
20013e38:	6105                	addi	sp,sp,32
20013e3a:	8082                	ret

20013e3c <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20013e3c:	1101                	addi	sp,sp,-32
20013e3e:	ce22                	sw	s0,28(sp)
20013e40:	1000                	addi	s0,sp,32
20013e42:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20013e46:	fec42703          	lw	a4,-20(s0)
20013e4a:	81418793          	addi	a5,gp,-2028 # 80001ab4 <__metal_dt_cpu_0>
20013e4e:	00f71763          	bne	a4,a5,20013e5c <__metal_driver_cpu_timebase+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:304
		return 16000000;
20013e52:	00f427b7          	lui	a5,0xf42
20013e56:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20013e5a:	a011                	j	20013e5e <__metal_driver_cpu_timebase+0x22>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:307
	}
	else {
		return 0;
20013e5c:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:309
	}
}
20013e5e:	853e                	mv	a0,a5
20013e60:	4472                	lw	s0,28(sp)
20013e62:	6105                	addi	sp,sp,32
20013e64:	8082                	ret

20013e66 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20013e66:	1101                	addi	sp,sp,-32
20013e68:	ce22                	sw	s0,28(sp)
20013e6a:	1000                	addi	s0,sp,32
20013e6c:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20013e70:	fec42703          	lw	a4,-20(s0)
20013e74:	81418793          	addi	a5,gp,-2028 # 80001ab4 <__metal_dt_cpu_0>
20013e78:	00f71763          	bne	a4,a5,20013e86 <__metal_driver_cpu_interrupt_controller+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20013e7c:	800017b7          	lui	a5,0x80001
20013e80:	09078793          	addi	a5,a5,144 # 80001090 <metal_segment_heap_target_end+0xffffe920>
20013e84:	a011                	j	20013e88 <__metal_driver_cpu_interrupt_controller+0x22>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:317
	}
	else {
		return NULL;
20013e86:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:319
	}
}
20013e88:	853e                	mv	a0,a5
20013e8a:	4472                	lw	s0,28(sp)
20013e8c:	6105                	addi	sp,sp,32
20013e8e:	8082                	ret

20013e90 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20013e90:	1101                	addi	sp,sp,-32
20013e92:	ce22                	sw	s0,28(sp)
20013e94:	1000                	addi	s0,sp,32
20013e96:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20013e9a:	fec42703          	lw	a4,-20(s0)
20013e9e:	81418793          	addi	a5,gp,-2028 # 80001ab4 <__metal_dt_cpu_0>
20013ea2:	00f71463          	bne	a4,a5,20013eaa <__metal_driver_cpu_buserror+0x1a>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:334
		return NULL;
20013ea6:	4781                	li	a5,0
20013ea8:	a011                	j	20013eac <__metal_driver_cpu_buserror+0x1c>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:337
	}
	else {
		return NULL;
20013eaa:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:339
	}
}
20013eac:	853e                	mv	a0,a5
20013eae:	4472                	lw	s0,28(sp)
20013eb0:	6105                	addi	sp,sp,32
20013eb2:	8082                	ret

20013eb4 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20013eb4:	1101                	addi	sp,sp,-32
20013eb6:	ce22                	sw	s0,28(sp)
20013eb8:	1000                	addi	s0,sp,32
20013eba:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20013ebe:	fec42783          	lw	a5,-20(s0)
20013ec2:	00f04c63          	bgtz	a5,20013eda <__metal_driver_cpu_get+0x26>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20013ec6:	800027b7          	lui	a5,0x80002
20013eca:	fec42703          	lw	a4,-20(s0)
20013ece:	070a                	slli	a4,a4,0x2
20013ed0:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20013ed4:	97ba                	add	a5,a5,a4
20013ed6:	439c                	lw	a5,0(a5)
20013ed8:	a011                	j	20013edc <__metal_driver_cpu_get+0x28>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20013eda:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:30
}
20013edc:	853e                	mv	a0,a5
20013ede:	4472                	lw	s0,28(sp)
20013ee0:	6105                	addi	sp,sp,32
20013ee2:	8082                	ret

20013ee4 <__metal_myhart_id>:
__metal_myhart_id():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20013ee4:	1101                	addi	sp,sp,-32
20013ee6:	ce22                	sw	s0,28(sp)
20013ee8:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20013eea:	f14027f3          	csrr	a5,mhartid
20013eee:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20013ef2:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:36
}
20013ef6:	853e                	mv	a0,a5
20013ef8:	4472                	lw	s0,28(sp)
20013efa:	6105                	addi	sp,sp,32
20013efc:	8082                	ret

20013efe <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20013efe:	1101                	addi	sp,sp,-32
20013f00:	ce22                	sw	s0,28(sp)
20013f02:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20013f04:	47a1                	li	a5,8
20013f06:	3007a7f3          	csrrs	a5,mstatus,a5
20013f0a:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20013f0e:	0001                	nop
20013f10:	4472                	lw	s0,28(sp)
20013f12:	6105                	addi	sp,sp,32
20013f14:	8082                	ret

20013f16 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20013f16:	1101                	addi	sp,sp,-32
20013f18:	ce22                	sw	s0,28(sp)
20013f1a:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20013f1c:	47a1                	li	a5,8
20013f1e:	3007b7f3          	csrrc	a5,mstatus,a5
20013f22:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20013f26:	0001                	nop
20013f28:	4472                	lw	s0,28(sp)
20013f2a:	6105                	addi	sp,sp,32
20013f2c:	8082                	ret

20013f2e <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20013f2e:	1101                	addi	sp,sp,-32
20013f30:	ce22                	sw	s0,28(sp)
20013f32:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20013f34:	47a1                	li	a5,8
20013f36:	3047a7f3          	csrrs	a5,mie,a5
20013f3a:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20013f3e:	0001                	nop
20013f40:	4472                	lw	s0,28(sp)
20013f42:	6105                	addi	sp,sp,32
20013f44:	8082                	ret

20013f46 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20013f46:	1101                	addi	sp,sp,-32
20013f48:	ce22                	sw	s0,28(sp)
20013f4a:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20013f4c:	47a1                	li	a5,8
20013f4e:	3047b7f3          	csrrc	a5,mie,a5
20013f52:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20013f56:	0001                	nop
20013f58:	4472                	lw	s0,28(sp)
20013f5a:	6105                	addi	sp,sp,32
20013f5c:	8082                	ret

20013f5e <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20013f5e:	1101                	addi	sp,sp,-32
20013f60:	ce22                	sw	s0,28(sp)
20013f62:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20013f64:	08000793          	li	a5,128
20013f68:	3047a7f3          	csrrs	a5,mie,a5
20013f6c:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20013f70:	0001                	nop
20013f72:	4472                	lw	s0,28(sp)
20013f74:	6105                	addi	sp,sp,32
20013f76:	8082                	ret

20013f78 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20013f78:	1101                	addi	sp,sp,-32
20013f7a:	ce22                	sw	s0,28(sp)
20013f7c:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20013f7e:	08000793          	li	a5,128
20013f82:	3047b7f3          	csrrc	a5,mie,a5
20013f86:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20013f8a:	0001                	nop
20013f8c:	4472                	lw	s0,28(sp)
20013f8e:	6105                	addi	sp,sp,32
20013f90:	8082                	ret

20013f92 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20013f92:	1101                	addi	sp,sp,-32
20013f94:	ce22                	sw	s0,28(sp)
20013f96:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20013f98:	6785                	lui	a5,0x1
20013f9a:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20013f9e:	3047a7f3          	csrrs	a5,mie,a5
20013fa2:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20013fa6:	0001                	nop
20013fa8:	4472                	lw	s0,28(sp)
20013faa:	6105                	addi	sp,sp,32
20013fac:	8082                	ret

20013fae <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20013fae:	1101                	addi	sp,sp,-32
20013fb0:	ce22                	sw	s0,28(sp)
20013fb2:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20013fb4:	6785                	lui	a5,0x1
20013fb6:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20013fba:	3047b7f3          	csrrc	a5,mie,a5
20013fbe:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20013fc2:	0001                	nop
20013fc4:	4472                	lw	s0,28(sp)
20013fc6:	6105                	addi	sp,sp,32
20013fc8:	8082                	ret

20013fca <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20013fca:	7179                	addi	sp,sp,-48
20013fcc:	d622                	sw	s0,44(sp)
20013fce:	1800                	addi	s0,sp,48
20013fd0:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20013fd4:	fdc42783          	lw	a5,-36(s0)
20013fd8:	4705                	li	a4,1
20013fda:	00f717b3          	sll	a5,a4,a5
20013fde:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20013fe2:	fec42783          	lw	a5,-20(s0)
20013fe6:	3047a7f3          	csrrs	a5,mie,a5
20013fea:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:105
}
20013fee:	0001                	nop
20013ff0:	5432                	lw	s0,44(sp)
20013ff2:	6145                	addi	sp,sp,48
20013ff4:	8082                	ret

20013ff6 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20013ff6:	7179                	addi	sp,sp,-48
20013ff8:	d622                	sw	s0,44(sp)
20013ffa:	1800                	addi	s0,sp,48
20013ffc:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20014000:	fdc42783          	lw	a5,-36(s0)
20014004:	4705                	li	a4,1
20014006:	00f717b3          	sll	a5,a4,a5
2001400a:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
2001400e:	fec42783          	lw	a5,-20(s0)
20014012:	3047b7f3          	csrrc	a5,mie,a5
20014016:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:111
}
2001401a:	0001                	nop
2001401c:	5432                	lw	s0,44(sp)
2001401e:	6145                	addi	sp,sp,48
20014020:	8082                	ret

20014022 <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20014022:	1101                	addi	sp,sp,-32
20014024:	ce06                	sw	ra,28(sp)
20014026:	cc22                	sw	s0,24(sp)
20014028:	1000                	addi	s0,sp,32
2001402a:	fea42623          	sw	a0,-20(s0)
2001402e:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20014032:	06400513          	li	a0,100
20014036:	5ab030ef          	jal	ra,20017de0 <metal_shutdown>

2001403a <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
2001403a:	1101                	addi	sp,sp,-32
2001403c:	ce06                	sw	ra,28(sp)
2001403e:	cc22                	sw	s0,24(sp)
20014040:	1000                	addi	s0,sp,32
20014042:	fea42623          	sw	a0,-20(s0)
20014046:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
2001404a:	0c800513          	li	a0,200
2001404e:	593030ef          	jal	ra,20017de0 <metal_shutdown>

20014052 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20014052:	715d                	addi	sp,sp,-80
20014054:	c686                	sw	ra,76(sp)
20014056:	c496                	sw	t0,72(sp)
20014058:	c29a                	sw	t1,68(sp)
2001405a:	c09e                	sw	t2,64(sp)
2001405c:	de22                	sw	s0,60(sp)
2001405e:	dc2a                	sw	a0,56(sp)
20014060:	da2e                	sw	a1,52(sp)
20014062:	d832                	sw	a2,48(sp)
20014064:	d636                	sw	a3,44(sp)
20014066:	d43a                	sw	a4,40(sp)
20014068:	d23e                	sw	a5,36(sp)
2001406a:	d042                	sw	a6,32(sp)
2001406c:	ce46                	sw	a7,28(sp)
2001406e:	cc72                	sw	t3,24(sp)
20014070:	ca76                	sw	t4,20(sp)
20014072:	c87a                	sw	t5,16(sp)
20014074:	c67e                	sw	t6,12(sp)
20014076:	0880                	addi	s0,sp,80
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20014078:	12c00513          	li	a0,300
2001407c:	565030ef          	jal	ra,20017de0 <metal_shutdown>

20014080 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20014080:	711d                	addi	sp,sp,-96
20014082:	ce86                	sw	ra,92(sp)
20014084:	cc96                	sw	t0,88(sp)
20014086:	ca9a                	sw	t1,84(sp)
20014088:	c89e                	sw	t2,80(sp)
2001408a:	c6a2                	sw	s0,76(sp)
2001408c:	c4aa                	sw	a0,72(sp)
2001408e:	c2ae                	sw	a1,68(sp)
20014090:	c0b2                	sw	a2,64(sp)
20014092:	de36                	sw	a3,60(sp)
20014094:	dc3a                	sw	a4,56(sp)
20014096:	da3e                	sw	a5,52(sp)
20014098:	d842                	sw	a6,48(sp)
2001409a:	d646                	sw	a7,44(sp)
2001409c:	d472                	sw	t3,40(sp)
2001409e:	d276                	sw	t4,36(sp)
200140a0:	d07a                	sw	t5,32(sp)
200140a2:	ce7e                	sw	t6,28(sp)
200140a4:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
200140a6:	3d3d                	jal	20013ee4 <__metal_myhart_id>
200140a8:	872a                	mv	a4,a0
200140aa:	800027b7          	lui	a5,0x80002
200140ae:	070a                	slli	a4,a4,0x2
200140b0:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
200140b4:	97ba                	add	a5,a5,a4
200140b6:	439c                	lw	a5,0(a5)
200140b8:	faf42623          	sw	a5,-84(s0)
200140bc:	fac42783          	lw	a5,-84(s0)
200140c0:	c785                	beqz	a5,200140e8 <metal_software_interrupt_vector_handler+0x68>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
200140c2:	fac42503          	lw	a0,-84(s0)
200140c6:	3345                	jal	20013e66 <__metal_driver_cpu_interrupt_controller>
200140c8:	faa42423          	sw	a0,-88(s0)
200140cc:	fa842783          	lw	a5,-88(s0)
200140d0:	0e07a783          	lw	a5,224(a5)
200140d4:	faf42223          	sw	a5,-92(s0)
200140d8:	fa842783          	lw	a5,-88(s0)
200140dc:	0d87a783          	lw	a5,216(a5)
200140e0:	fa442583          	lw	a1,-92(s0)
200140e4:	450d                	li	a0,3
200140e6:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:130
}
200140e8:	0001                	nop
200140ea:	40f6                	lw	ra,92(sp)
200140ec:	42e6                	lw	t0,88(sp)
200140ee:	4356                	lw	t1,84(sp)
200140f0:	43c6                	lw	t2,80(sp)
200140f2:	4436                	lw	s0,76(sp)
200140f4:	4526                	lw	a0,72(sp)
200140f6:	4596                	lw	a1,68(sp)
200140f8:	4606                	lw	a2,64(sp)
200140fa:	56f2                	lw	a3,60(sp)
200140fc:	5762                	lw	a4,56(sp)
200140fe:	57d2                	lw	a5,52(sp)
20014100:	5842                	lw	a6,48(sp)
20014102:	58b2                	lw	a7,44(sp)
20014104:	5e22                	lw	t3,40(sp)
20014106:	5e92                	lw	t4,36(sp)
20014108:	5f02                	lw	t5,32(sp)
2001410a:	4ff2                	lw	t6,28(sp)
2001410c:	6125                	addi	sp,sp,96
2001410e:	30200073          	mret

20014112 <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20014112:	7179                	addi	sp,sp,-48
20014114:	d606                	sw	ra,44(sp)
20014116:	d422                	sw	s0,40(sp)
20014118:	1800                	addi	s0,sp,48
2001411a:	fca42e23          	sw	a0,-36(s0)
2001411e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20014122:	33c9                	jal	20013ee4 <__metal_myhart_id>
20014124:	872a                	mv	a4,a0
20014126:	800027b7          	lui	a5,0x80002
2001412a:	070a                	slli	a4,a4,0x2
2001412c:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014130:	97ba                	add	a5,a5,a4
20014132:	439c                	lw	a5,0(a5)
20014134:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20014138:	342027f3          	csrr	a5,mcause
2001413c:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20014140:	fec42783          	lw	a5,-20(s0)
20014144:	c795                	beqz	a5,20014170 <__metal_default_sw_handler+0x5e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20014146:	fec42503          	lw	a0,-20(s0)
2001414a:	3b31                	jal	20013e66 <__metal_driver_cpu_interrupt_controller>
2001414c:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20014150:	fe842783          	lw	a5,-24(s0)
20014154:	3ff7f793          	andi	a5,a5,1023
20014158:	fe442703          	lw	a4,-28(s0)
2001415c:	0e878793          	addi	a5,a5,232
20014160:	078a                	slli	a5,a5,0x2
20014162:	97ba                	add	a5,a5,a4
20014164:	439c                	lw	a5,0(a5)
20014166:	fdc42583          	lw	a1,-36(s0)
2001416a:	fec42503          	lw	a0,-20(s0)
2001416e:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20014170:	0001                	nop
20014172:	50b2                	lw	ra,44(sp)
20014174:	5422                	lw	s0,40(sp)
20014176:	6145                	addi	sp,sp,48
20014178:	8082                	ret

2001417a <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
2001417a:	711d                	addi	sp,sp,-96
2001417c:	ce86                	sw	ra,92(sp)
2001417e:	cc96                	sw	t0,88(sp)
20014180:	ca9a                	sw	t1,84(sp)
20014182:	c89e                	sw	t2,80(sp)
20014184:	c6a2                	sw	s0,76(sp)
20014186:	c4aa                	sw	a0,72(sp)
20014188:	c2ae                	sw	a1,68(sp)
2001418a:	c0b2                	sw	a2,64(sp)
2001418c:	de36                	sw	a3,60(sp)
2001418e:	dc3a                	sw	a4,56(sp)
20014190:	da3e                	sw	a5,52(sp)
20014192:	d842                	sw	a6,48(sp)
20014194:	d646                	sw	a7,44(sp)
20014196:	d472                	sw	t3,40(sp)
20014198:	d276                	sw	t4,36(sp)
2001419a:	d07a                	sw	t5,32(sp)
2001419c:	ce7e                	sw	t6,28(sp)
2001419e:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
200141a0:	3391                	jal	20013ee4 <__metal_myhart_id>
200141a2:	872a                	mv	a4,a0
200141a4:	800027b7          	lui	a5,0x80002
200141a8:	070a                	slli	a4,a4,0x2
200141aa:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
200141ae:	97ba                	add	a5,a5,a4
200141b0:	439c                	lw	a5,0(a5)
200141b2:	faf42623          	sw	a5,-84(s0)
200141b6:	fac42783          	lw	a5,-84(s0)
200141ba:	c785                	beqz	a5,200141e2 <metal_timer_interrupt_vector_handler+0x68>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
200141bc:	fac42503          	lw	a0,-84(s0)
200141c0:	315d                	jal	20013e66 <__metal_driver_cpu_interrupt_controller>
200141c2:	faa42423          	sw	a0,-88(s0)
200141c6:	fa842783          	lw	a5,-88(s0)
200141ca:	1407a783          	lw	a5,320(a5)
200141ce:	faf42223          	sw	a5,-92(s0)
200141d2:	fa842783          	lw	a5,-88(s0)
200141d6:	1387a783          	lw	a5,312(a5)
200141da:	fa442583          	lw	a1,-92(s0)
200141de:	451d                	li	a0,7
200141e0:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:150
}
200141e2:	0001                	nop
200141e4:	40f6                	lw	ra,92(sp)
200141e6:	42e6                	lw	t0,88(sp)
200141e8:	4356                	lw	t1,84(sp)
200141ea:	43c6                	lw	t2,80(sp)
200141ec:	4436                	lw	s0,76(sp)
200141ee:	4526                	lw	a0,72(sp)
200141f0:	4596                	lw	a1,68(sp)
200141f2:	4606                	lw	a2,64(sp)
200141f4:	56f2                	lw	a3,60(sp)
200141f6:	5762                	lw	a4,56(sp)
200141f8:	57d2                	lw	a5,52(sp)
200141fa:	5842                	lw	a6,48(sp)
200141fc:	58b2                	lw	a7,44(sp)
200141fe:	5e22                	lw	t3,40(sp)
20014200:	5e92                	lw	t4,36(sp)
20014202:	5f02                	lw	t5,32(sp)
20014204:	4ff2                	lw	t6,28(sp)
20014206:	6125                	addi	sp,sp,96
20014208:	30200073          	mret

2001420c <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
2001420c:	1101                	addi	sp,sp,-32
2001420e:	ce22                	sw	s0,28(sp)
20014210:	1000                	addi	s0,sp,32
20014212:	fea42623          	sw	a0,-20(s0)
20014216:	feb42423          	sw	a1,-24(s0)
2001421a:	0001                	nop
2001421c:	4472                	lw	s0,28(sp)
2001421e:	6105                	addi	sp,sp,32
20014220:	8082                	ret

20014222 <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20014222:	7179                	addi	sp,sp,-48
20014224:	d606                	sw	ra,44(sp)
20014226:	d422                	sw	s0,40(sp)
20014228:	1800                	addi	s0,sp,48
2001422a:	fca42e23          	sw	a0,-36(s0)
2001422e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20014232:	394d                	jal	20013ee4 <__metal_myhart_id>
20014234:	87aa                	mv	a5,a0
20014236:	853e                	mv	a0,a5
20014238:	39b5                	jal	20013eb4 <__metal_driver_cpu_get>
2001423a:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
2001423e:	fec42503          	lw	a0,-20(s0)
20014242:	2da010ef          	jal	ra,2001551c <__metal_driver_cpu_mtime_get>
20014246:	fea42023          	sw	a0,-32(s0)
2001424a:	feb42223          	sw	a1,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
2001424e:	fe042703          	lw	a4,-32(s0)
20014252:	fe442783          	lw	a5,-28(s0)
20014256:	4529                	li	a0,10
20014258:	4581                	li	a1,0
2001425a:	00a70633          	add	a2,a4,a0
2001425e:	8832                	mv	a6,a2
20014260:	00e83833          	sltu	a6,a6,a4
20014264:	00b786b3          	add	a3,a5,a1
20014268:	00d807b3          	add	a5,a6,a3
2001426c:	86be                	mv	a3,a5
2001426e:	8732                	mv	a4,a2
20014270:	87b6                	mv	a5,a3
20014272:	85ba                	mv	a1,a4
20014274:	863e                	mv	a2,a5
20014276:	fec42503          	lw	a0,-20(s0)
2001427a:	308010ef          	jal	ra,20015582 <__metal_driver_cpu_mtimecmp_set>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:160
}
2001427e:	0001                	nop
20014280:	50b2                	lw	ra,44(sp)
20014282:	5422                	lw	s0,40(sp)
20014284:	6145                	addi	sp,sp,48
20014286:	8082                	ret
	...

20014300 <__metal_exception_handler>:
__metal_exception_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20014300:	7119                	addi	sp,sp,-128
20014302:	de86                	sw	ra,124(sp)
20014304:	dc96                	sw	t0,120(sp)
20014306:	da9a                	sw	t1,116(sp)
20014308:	d89e                	sw	t2,112(sp)
2001430a:	d6a2                	sw	s0,108(sp)
2001430c:	d4aa                	sw	a0,104(sp)
2001430e:	d2ae                	sw	a1,100(sp)
20014310:	d0b2                	sw	a2,96(sp)
20014312:	ceb6                	sw	a3,92(sp)
20014314:	ccba                	sw	a4,88(sp)
20014316:	cabe                	sw	a5,84(sp)
20014318:	c8c2                	sw	a6,80(sp)
2001431a:	c6c6                	sw	a7,76(sp)
2001431c:	c4f2                	sw	t3,72(sp)
2001431e:	c2f6                	sw	t4,68(sp)
20014320:	c0fa                	sw	t5,64(sp)
20014322:	de7e                	sw	t6,60(sp)
20014324:	0100                	addi	s0,sp,128
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20014326:	3e7d                	jal	20013ee4 <__metal_myhart_id>
20014328:	872a                	mv	a4,a0
2001432a:	800027b7          	lui	a5,0x80002
2001432e:	070a                	slli	a4,a4,0x2
20014330:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014334:	97ba                	add	a5,a5,a4
20014336:	439c                	lw	a5,0(a5)
20014338:	faf42623          	sw	a5,-84(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
2001433c:	342027f3          	csrr	a5,mcause
20014340:	faf42423          	sw	a5,-88(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20014344:	341027f3          	csrr	a5,mepc
20014348:	faf42223          	sw	a5,-92(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
2001434c:	343027f3          	csrr	a5,mtval
20014350:	faf42023          	sw	a5,-96(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20014354:	305027f3          	csrr	a5,mtvec
20014358:	f8f42e23          	sw	a5,-100(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
2001435c:	fac42783          	lw	a5,-84(s0)
20014360:	cbfd                	beqz	a5,20014456 <__metal_exception_handler+0x156>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20014362:	fac42503          	lw	a0,-84(s0)
20014366:	b01ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
2001436a:	f8a42c23          	sw	a0,-104(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
2001436e:	fa842783          	lw	a5,-88(s0)
20014372:	3ff7f793          	andi	a5,a5,1023
20014376:	f8f42a23          	sw	a5,-108(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
2001437a:	fa842783          	lw	a5,-88(s0)
2001437e:	0a07de63          	bgez	a5,2001443a <__metal_exception_handler+0x13a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20014382:	f9442703          	lw	a4,-108(s0)
20014386:	08000793          	li	a5,128
2001438a:	02f71263          	bne	a4,a5,200143ae <__metal_exception_handler+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
2001438e:	f9842783          	lw	a5,-104(s0)
20014392:	3987a783          	lw	a5,920(a5)
20014396:	f8f42623          	sw	a5,-116(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2001439a:	f9842783          	lw	a5,-104(s0)
2001439e:	3907a783          	lw	a5,912(a5)
200143a2:	f8c42583          	lw	a1,-116(s0)
200143a6:	f9442503          	lw	a0,-108(s0)
200143aa:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
200143ac:	a06d                	j	20014456 <__metal_exception_handler+0x156>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
200143ae:	f9442703          	lw	a4,-108(s0)
200143b2:	47ad                	li	a5,11
200143b4:	00e7d763          	bge	a5,a4,200143c2 <__metal_exception_handler+0xc2>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
200143b8:	f9c42783          	lw	a5,-100(s0)
200143bc:	03f7f793          	andi	a5,a5,63
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
200143c0:	ef9d                	bnez	a5,200143fe <__metal_exception_handler+0xfe>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
200143c2:	f9842683          	lw	a3,-104(s0)
200143c6:	f9442703          	lw	a4,-108(s0)
200143ca:	87ba                	mv	a5,a4
200143cc:	0786                	slli	a5,a5,0x1
200143ce:	97ba                	add	a5,a5,a4
200143d0:	078e                	slli	a5,a5,0x3
200143d2:	97b6                	add	a5,a5,a3
200143d4:	0987a783          	lw	a5,152(a5)
200143d8:	f8f42623          	sw	a5,-116(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
200143dc:	f9842683          	lw	a3,-104(s0)
200143e0:	f9442703          	lw	a4,-108(s0)
200143e4:	87ba                	mv	a5,a4
200143e6:	0786                	slli	a5,a5,0x1
200143e8:	97ba                	add	a5,a5,a4
200143ea:	078e                	slli	a5,a5,0x3
200143ec:	97b6                	add	a5,a5,a3
200143ee:	0907a783          	lw	a5,144(a5)
200143f2:	f8c42583          	lw	a1,-116(s0)
200143f6:	f9442503          	lw	a0,-108(s0)
200143fa:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
200143fc:	a8a9                	j	20014456 <__metal_exception_handler+0x156>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
200143fe:	f9c42783          	lw	a5,-100(s0)
20014402:	03f7f713          	andi	a4,a5,63
20014406:	4789                	li	a5,2
20014408:	04f71763          	bne	a4,a5,20014456 <__metal_exception_handler+0x156>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2001440c:	307027f3          	csrr	a5,mtvt
20014410:	f8f42823          	sw	a5,-112(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014414:	f9842783          	lw	a5,-104(s0)
20014418:	0dc7a783          	lw	a5,220(a5)
2001441c:	f8f42623          	sw	a5,-116(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20014420:	f9042783          	lw	a5,-112(s0)
20014424:	439c                	lw	a5,0(a5)
20014426:	f8f42423          	sw	a5,-120(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
2001442a:	f8842783          	lw	a5,-120(s0)
2001442e:	f8c42583          	lw	a1,-116(s0)
20014432:	f9442503          	lw	a0,-108(s0)
20014436:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20014438:	a839                	j	20014456 <__metal_exception_handler+0x156>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
2001443a:	f9842703          	lw	a4,-104(s0)
2001443e:	f9442783          	lw	a5,-108(s0)
20014442:	0e878793          	addi	a5,a5,232
20014446:	078a                	slli	a5,a5,0x2
20014448:	97ba                	add	a5,a5,a4
2001444a:	439c                	lw	a5,0(a5)
2001444c:	f9442583          	lw	a1,-108(s0)
20014450:	fac42503          	lw	a0,-84(s0)
20014454:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20014456:	50f6                	lw	ra,124(sp)
20014458:	52e6                	lw	t0,120(sp)
2001445a:	5356                	lw	t1,116(sp)
2001445c:	53c6                	lw	t2,112(sp)
2001445e:	5436                	lw	s0,108(sp)
20014460:	5526                	lw	a0,104(sp)
20014462:	5596                	lw	a1,100(sp)
20014464:	5606                	lw	a2,96(sp)
20014466:	46f6                	lw	a3,92(sp)
20014468:	4766                	lw	a4,88(sp)
2001446a:	47d6                	lw	a5,84(sp)
2001446c:	4846                	lw	a6,80(sp)
2001446e:	48b6                	lw	a7,76(sp)
20014470:	4e26                	lw	t3,72(sp)
20014472:	4e96                	lw	t4,68(sp)
20014474:	4f06                	lw	t5,64(sp)
20014476:	5ff2                	lw	t6,60(sp)
20014478:	6109                	addi	sp,sp,128
2001447a:	30200073          	mret
	...

200144f8 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
200144f8:	711d                	addi	sp,sp,-96
200144fa:	ce86                	sw	ra,92(sp)
200144fc:	cc96                	sw	t0,88(sp)
200144fe:	ca9a                	sw	t1,84(sp)
20014500:	c89e                	sw	t2,80(sp)
20014502:	c6a2                	sw	s0,76(sp)
20014504:	c4aa                	sw	a0,72(sp)
20014506:	c2ae                	sw	a1,68(sp)
20014508:	c0b2                	sw	a2,64(sp)
2001450a:	de36                	sw	a3,60(sp)
2001450c:	dc3a                	sw	a4,56(sp)
2001450e:	da3e                	sw	a5,52(sp)
20014510:	d842                	sw	a6,48(sp)
20014512:	d646                	sw	a7,44(sp)
20014514:	d472                	sw	t3,40(sp)
20014516:	d276                	sw	t4,36(sp)
20014518:	d07a                	sw	t5,32(sp)
2001451a:	ce7e                	sw	t6,28(sp)
2001451c:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
2001451e:	9c7ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20014522:	872a                	mv	a4,a0
20014524:	800027b7          	lui	a5,0x80002
20014528:	070a                	slli	a4,a4,0x2
2001452a:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
2001452e:	97ba                	add	a5,a5,a4
20014530:	439c                	lw	a5,0(a5)
20014532:	faf42623          	sw	a5,-84(s0)
20014536:	fac42783          	lw	a5,-84(s0)
2001453a:	c78d                	beqz	a5,20014564 <metal_lc0_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
2001453c:	fac42503          	lw	a0,-84(s0)
20014540:	927ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014544:	faa42423          	sw	a0,-88(s0)
20014548:	fa842783          	lw	a5,-88(s0)
2001454c:	2187a783          	lw	a5,536(a5)
20014550:	faf42223          	sw	a5,-92(s0)
20014554:	fa842783          	lw	a5,-88(s0)
20014558:	2107a783          	lw	a5,528(a5)
2001455c:	fa442583          	lw	a1,-92(s0)
20014560:	4541                	li	a0,16
20014562:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:216
}
20014564:	0001                	nop
20014566:	40f6                	lw	ra,92(sp)
20014568:	42e6                	lw	t0,88(sp)
2001456a:	4356                	lw	t1,84(sp)
2001456c:	43c6                	lw	t2,80(sp)
2001456e:	4436                	lw	s0,76(sp)
20014570:	4526                	lw	a0,72(sp)
20014572:	4596                	lw	a1,68(sp)
20014574:	4606                	lw	a2,64(sp)
20014576:	56f2                	lw	a3,60(sp)
20014578:	5762                	lw	a4,56(sp)
2001457a:	57d2                	lw	a5,52(sp)
2001457c:	5842                	lw	a6,48(sp)
2001457e:	58b2                	lw	a7,44(sp)
20014580:	5e22                	lw	t3,40(sp)
20014582:	5e92                	lw	t4,36(sp)
20014584:	5f02                	lw	t5,32(sp)
20014586:	4ff2                	lw	t6,28(sp)
20014588:	6125                	addi	sp,sp,96
2001458a:	30200073          	mret

2001458e <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
2001458e:	711d                	addi	sp,sp,-96
20014590:	ce86                	sw	ra,92(sp)
20014592:	cc96                	sw	t0,88(sp)
20014594:	ca9a                	sw	t1,84(sp)
20014596:	c89e                	sw	t2,80(sp)
20014598:	c6a2                	sw	s0,76(sp)
2001459a:	c4aa                	sw	a0,72(sp)
2001459c:	c2ae                	sw	a1,68(sp)
2001459e:	c0b2                	sw	a2,64(sp)
200145a0:	de36                	sw	a3,60(sp)
200145a2:	dc3a                	sw	a4,56(sp)
200145a4:	da3e                	sw	a5,52(sp)
200145a6:	d842                	sw	a6,48(sp)
200145a8:	d646                	sw	a7,44(sp)
200145aa:	d472                	sw	t3,40(sp)
200145ac:	d276                	sw	t4,36(sp)
200145ae:	d07a                	sw	t5,32(sp)
200145b0:	ce7e                	sw	t6,28(sp)
200145b2:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
200145b4:	931ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
200145b8:	872a                	mv	a4,a0
200145ba:	800027b7          	lui	a5,0x80002
200145be:	070a                	slli	a4,a4,0x2
200145c0:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
200145c4:	97ba                	add	a5,a5,a4
200145c6:	439c                	lw	a5,0(a5)
200145c8:	faf42623          	sw	a5,-84(s0)
200145cc:	fac42783          	lw	a5,-84(s0)
200145d0:	c78d                	beqz	a5,200145fa <metal_lc1_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
200145d2:	fac42503          	lw	a0,-84(s0)
200145d6:	891ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
200145da:	faa42423          	sw	a0,-88(s0)
200145de:	fa842783          	lw	a5,-88(s0)
200145e2:	2307a783          	lw	a5,560(a5)
200145e6:	faf42223          	sw	a5,-92(s0)
200145ea:	fa842783          	lw	a5,-88(s0)
200145ee:	2287a783          	lw	a5,552(a5)
200145f2:	fa442583          	lw	a1,-92(s0)
200145f6:	4545                	li	a0,17
200145f8:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:221
}
200145fa:	0001                	nop
200145fc:	40f6                	lw	ra,92(sp)
200145fe:	42e6                	lw	t0,88(sp)
20014600:	4356                	lw	t1,84(sp)
20014602:	43c6                	lw	t2,80(sp)
20014604:	4436                	lw	s0,76(sp)
20014606:	4526                	lw	a0,72(sp)
20014608:	4596                	lw	a1,68(sp)
2001460a:	4606                	lw	a2,64(sp)
2001460c:	56f2                	lw	a3,60(sp)
2001460e:	5762                	lw	a4,56(sp)
20014610:	57d2                	lw	a5,52(sp)
20014612:	5842                	lw	a6,48(sp)
20014614:	58b2                	lw	a7,44(sp)
20014616:	5e22                	lw	t3,40(sp)
20014618:	5e92                	lw	t4,36(sp)
2001461a:	5f02                	lw	t5,32(sp)
2001461c:	4ff2                	lw	t6,28(sp)
2001461e:	6125                	addi	sp,sp,96
20014620:	30200073          	mret

20014624 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20014624:	711d                	addi	sp,sp,-96
20014626:	ce86                	sw	ra,92(sp)
20014628:	cc96                	sw	t0,88(sp)
2001462a:	ca9a                	sw	t1,84(sp)
2001462c:	c89e                	sw	t2,80(sp)
2001462e:	c6a2                	sw	s0,76(sp)
20014630:	c4aa                	sw	a0,72(sp)
20014632:	c2ae                	sw	a1,68(sp)
20014634:	c0b2                	sw	a2,64(sp)
20014636:	de36                	sw	a3,60(sp)
20014638:	dc3a                	sw	a4,56(sp)
2001463a:	da3e                	sw	a5,52(sp)
2001463c:	d842                	sw	a6,48(sp)
2001463e:	d646                	sw	a7,44(sp)
20014640:	d472                	sw	t3,40(sp)
20014642:	d276                	sw	t4,36(sp)
20014644:	d07a                	sw	t5,32(sp)
20014646:	ce7e                	sw	t6,28(sp)
20014648:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2001464a:	89bff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
2001464e:	872a                	mv	a4,a0
20014650:	800027b7          	lui	a5,0x80002
20014654:	070a                	slli	a4,a4,0x2
20014656:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
2001465a:	97ba                	add	a5,a5,a4
2001465c:	439c                	lw	a5,0(a5)
2001465e:	faf42623          	sw	a5,-84(s0)
20014662:	fac42783          	lw	a5,-84(s0)
20014666:	c78d                	beqz	a5,20014690 <metal_lc2_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20014668:	fac42503          	lw	a0,-84(s0)
2001466c:	ffaff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014670:	faa42423          	sw	a0,-88(s0)
20014674:	fa842783          	lw	a5,-88(s0)
20014678:	2487a783          	lw	a5,584(a5)
2001467c:	faf42223          	sw	a5,-92(s0)
20014680:	fa842783          	lw	a5,-88(s0)
20014684:	2407a783          	lw	a5,576(a5)
20014688:	fa442583          	lw	a1,-92(s0)
2001468c:	4549                	li	a0,18
2001468e:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:226
}
20014690:	0001                	nop
20014692:	40f6                	lw	ra,92(sp)
20014694:	42e6                	lw	t0,88(sp)
20014696:	4356                	lw	t1,84(sp)
20014698:	43c6                	lw	t2,80(sp)
2001469a:	4436                	lw	s0,76(sp)
2001469c:	4526                	lw	a0,72(sp)
2001469e:	4596                	lw	a1,68(sp)
200146a0:	4606                	lw	a2,64(sp)
200146a2:	56f2                	lw	a3,60(sp)
200146a4:	5762                	lw	a4,56(sp)
200146a6:	57d2                	lw	a5,52(sp)
200146a8:	5842                	lw	a6,48(sp)
200146aa:	58b2                	lw	a7,44(sp)
200146ac:	5e22                	lw	t3,40(sp)
200146ae:	5e92                	lw	t4,36(sp)
200146b0:	5f02                	lw	t5,32(sp)
200146b2:	4ff2                	lw	t6,28(sp)
200146b4:	6125                	addi	sp,sp,96
200146b6:	30200073          	mret

200146ba <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
200146ba:	711d                	addi	sp,sp,-96
200146bc:	ce86                	sw	ra,92(sp)
200146be:	cc96                	sw	t0,88(sp)
200146c0:	ca9a                	sw	t1,84(sp)
200146c2:	c89e                	sw	t2,80(sp)
200146c4:	c6a2                	sw	s0,76(sp)
200146c6:	c4aa                	sw	a0,72(sp)
200146c8:	c2ae                	sw	a1,68(sp)
200146ca:	c0b2                	sw	a2,64(sp)
200146cc:	de36                	sw	a3,60(sp)
200146ce:	dc3a                	sw	a4,56(sp)
200146d0:	da3e                	sw	a5,52(sp)
200146d2:	d842                	sw	a6,48(sp)
200146d4:	d646                	sw	a7,44(sp)
200146d6:	d472                	sw	t3,40(sp)
200146d8:	d276                	sw	t4,36(sp)
200146da:	d07a                	sw	t5,32(sp)
200146dc:	ce7e                	sw	t6,28(sp)
200146de:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
200146e0:	805ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
200146e4:	872a                	mv	a4,a0
200146e6:	800027b7          	lui	a5,0x80002
200146ea:	070a                	slli	a4,a4,0x2
200146ec:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
200146f0:	97ba                	add	a5,a5,a4
200146f2:	439c                	lw	a5,0(a5)
200146f4:	faf42623          	sw	a5,-84(s0)
200146f8:	fac42783          	lw	a5,-84(s0)
200146fc:	c78d                	beqz	a5,20014726 <metal_lc3_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
200146fe:	fac42503          	lw	a0,-84(s0)
20014702:	f64ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014706:	faa42423          	sw	a0,-88(s0)
2001470a:	fa842783          	lw	a5,-88(s0)
2001470e:	2607a783          	lw	a5,608(a5)
20014712:	faf42223          	sw	a5,-92(s0)
20014716:	fa842783          	lw	a5,-88(s0)
2001471a:	2587a783          	lw	a5,600(a5)
2001471e:	fa442583          	lw	a1,-92(s0)
20014722:	454d                	li	a0,19
20014724:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:231
}
20014726:	0001                	nop
20014728:	40f6                	lw	ra,92(sp)
2001472a:	42e6                	lw	t0,88(sp)
2001472c:	4356                	lw	t1,84(sp)
2001472e:	43c6                	lw	t2,80(sp)
20014730:	4436                	lw	s0,76(sp)
20014732:	4526                	lw	a0,72(sp)
20014734:	4596                	lw	a1,68(sp)
20014736:	4606                	lw	a2,64(sp)
20014738:	56f2                	lw	a3,60(sp)
2001473a:	5762                	lw	a4,56(sp)
2001473c:	57d2                	lw	a5,52(sp)
2001473e:	5842                	lw	a6,48(sp)
20014740:	58b2                	lw	a7,44(sp)
20014742:	5e22                	lw	t3,40(sp)
20014744:	5e92                	lw	t4,36(sp)
20014746:	5f02                	lw	t5,32(sp)
20014748:	4ff2                	lw	t6,28(sp)
2001474a:	6125                	addi	sp,sp,96
2001474c:	30200073          	mret

20014750 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20014750:	711d                	addi	sp,sp,-96
20014752:	ce86                	sw	ra,92(sp)
20014754:	cc96                	sw	t0,88(sp)
20014756:	ca9a                	sw	t1,84(sp)
20014758:	c89e                	sw	t2,80(sp)
2001475a:	c6a2                	sw	s0,76(sp)
2001475c:	c4aa                	sw	a0,72(sp)
2001475e:	c2ae                	sw	a1,68(sp)
20014760:	c0b2                	sw	a2,64(sp)
20014762:	de36                	sw	a3,60(sp)
20014764:	dc3a                	sw	a4,56(sp)
20014766:	da3e                	sw	a5,52(sp)
20014768:	d842                	sw	a6,48(sp)
2001476a:	d646                	sw	a7,44(sp)
2001476c:	d472                	sw	t3,40(sp)
2001476e:	d276                	sw	t4,36(sp)
20014770:	d07a                	sw	t5,32(sp)
20014772:	ce7e                	sw	t6,28(sp)
20014774:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20014776:	f6eff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
2001477a:	872a                	mv	a4,a0
2001477c:	800027b7          	lui	a5,0x80002
20014780:	070a                	slli	a4,a4,0x2
20014782:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014786:	97ba                	add	a5,a5,a4
20014788:	439c                	lw	a5,0(a5)
2001478a:	faf42623          	sw	a5,-84(s0)
2001478e:	fac42783          	lw	a5,-84(s0)
20014792:	c78d                	beqz	a5,200147bc <metal_lc4_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20014794:	fac42503          	lw	a0,-84(s0)
20014798:	eceff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
2001479c:	faa42423          	sw	a0,-88(s0)
200147a0:	fa842783          	lw	a5,-88(s0)
200147a4:	2787a783          	lw	a5,632(a5)
200147a8:	faf42223          	sw	a5,-92(s0)
200147ac:	fa842783          	lw	a5,-88(s0)
200147b0:	2707a783          	lw	a5,624(a5)
200147b4:	fa442583          	lw	a1,-92(s0)
200147b8:	4551                	li	a0,20
200147ba:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:236
}
200147bc:	0001                	nop
200147be:	40f6                	lw	ra,92(sp)
200147c0:	42e6                	lw	t0,88(sp)
200147c2:	4356                	lw	t1,84(sp)
200147c4:	43c6                	lw	t2,80(sp)
200147c6:	4436                	lw	s0,76(sp)
200147c8:	4526                	lw	a0,72(sp)
200147ca:	4596                	lw	a1,68(sp)
200147cc:	4606                	lw	a2,64(sp)
200147ce:	56f2                	lw	a3,60(sp)
200147d0:	5762                	lw	a4,56(sp)
200147d2:	57d2                	lw	a5,52(sp)
200147d4:	5842                	lw	a6,48(sp)
200147d6:	58b2                	lw	a7,44(sp)
200147d8:	5e22                	lw	t3,40(sp)
200147da:	5e92                	lw	t4,36(sp)
200147dc:	5f02                	lw	t5,32(sp)
200147de:	4ff2                	lw	t6,28(sp)
200147e0:	6125                	addi	sp,sp,96
200147e2:	30200073          	mret

200147e6 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
200147e6:	711d                	addi	sp,sp,-96
200147e8:	ce86                	sw	ra,92(sp)
200147ea:	cc96                	sw	t0,88(sp)
200147ec:	ca9a                	sw	t1,84(sp)
200147ee:	c89e                	sw	t2,80(sp)
200147f0:	c6a2                	sw	s0,76(sp)
200147f2:	c4aa                	sw	a0,72(sp)
200147f4:	c2ae                	sw	a1,68(sp)
200147f6:	c0b2                	sw	a2,64(sp)
200147f8:	de36                	sw	a3,60(sp)
200147fa:	dc3a                	sw	a4,56(sp)
200147fc:	da3e                	sw	a5,52(sp)
200147fe:	d842                	sw	a6,48(sp)
20014800:	d646                	sw	a7,44(sp)
20014802:	d472                	sw	t3,40(sp)
20014804:	d276                	sw	t4,36(sp)
20014806:	d07a                	sw	t5,32(sp)
20014808:	ce7e                	sw	t6,28(sp)
2001480a:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2001480c:	ed8ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20014810:	872a                	mv	a4,a0
20014812:	800027b7          	lui	a5,0x80002
20014816:	070a                	slli	a4,a4,0x2
20014818:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
2001481c:	97ba                	add	a5,a5,a4
2001481e:	439c                	lw	a5,0(a5)
20014820:	faf42623          	sw	a5,-84(s0)
20014824:	fac42783          	lw	a5,-84(s0)
20014828:	c78d                	beqz	a5,20014852 <metal_lc5_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2001482a:	fac42503          	lw	a0,-84(s0)
2001482e:	e38ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014832:	faa42423          	sw	a0,-88(s0)
20014836:	fa842783          	lw	a5,-88(s0)
2001483a:	2907a783          	lw	a5,656(a5)
2001483e:	faf42223          	sw	a5,-92(s0)
20014842:	fa842783          	lw	a5,-88(s0)
20014846:	2887a783          	lw	a5,648(a5)
2001484a:	fa442583          	lw	a1,-92(s0)
2001484e:	4555                	li	a0,21
20014850:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:241
}
20014852:	0001                	nop
20014854:	40f6                	lw	ra,92(sp)
20014856:	42e6                	lw	t0,88(sp)
20014858:	4356                	lw	t1,84(sp)
2001485a:	43c6                	lw	t2,80(sp)
2001485c:	4436                	lw	s0,76(sp)
2001485e:	4526                	lw	a0,72(sp)
20014860:	4596                	lw	a1,68(sp)
20014862:	4606                	lw	a2,64(sp)
20014864:	56f2                	lw	a3,60(sp)
20014866:	5762                	lw	a4,56(sp)
20014868:	57d2                	lw	a5,52(sp)
2001486a:	5842                	lw	a6,48(sp)
2001486c:	58b2                	lw	a7,44(sp)
2001486e:	5e22                	lw	t3,40(sp)
20014870:	5e92                	lw	t4,36(sp)
20014872:	5f02                	lw	t5,32(sp)
20014874:	4ff2                	lw	t6,28(sp)
20014876:	6125                	addi	sp,sp,96
20014878:	30200073          	mret

2001487c <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2001487c:	711d                	addi	sp,sp,-96
2001487e:	ce86                	sw	ra,92(sp)
20014880:	cc96                	sw	t0,88(sp)
20014882:	ca9a                	sw	t1,84(sp)
20014884:	c89e                	sw	t2,80(sp)
20014886:	c6a2                	sw	s0,76(sp)
20014888:	c4aa                	sw	a0,72(sp)
2001488a:	c2ae                	sw	a1,68(sp)
2001488c:	c0b2                	sw	a2,64(sp)
2001488e:	de36                	sw	a3,60(sp)
20014890:	dc3a                	sw	a4,56(sp)
20014892:	da3e                	sw	a5,52(sp)
20014894:	d842                	sw	a6,48(sp)
20014896:	d646                	sw	a7,44(sp)
20014898:	d472                	sw	t3,40(sp)
2001489a:	d276                	sw	t4,36(sp)
2001489c:	d07a                	sw	t5,32(sp)
2001489e:	ce7e                	sw	t6,28(sp)
200148a0:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
200148a2:	e42ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
200148a6:	872a                	mv	a4,a0
200148a8:	800027b7          	lui	a5,0x80002
200148ac:	070a                	slli	a4,a4,0x2
200148ae:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
200148b2:	97ba                	add	a5,a5,a4
200148b4:	439c                	lw	a5,0(a5)
200148b6:	faf42623          	sw	a5,-84(s0)
200148ba:	fac42783          	lw	a5,-84(s0)
200148be:	c78d                	beqz	a5,200148e8 <metal_lc6_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
200148c0:	fac42503          	lw	a0,-84(s0)
200148c4:	da2ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
200148c8:	faa42423          	sw	a0,-88(s0)
200148cc:	fa842783          	lw	a5,-88(s0)
200148d0:	2a87a783          	lw	a5,680(a5)
200148d4:	faf42223          	sw	a5,-92(s0)
200148d8:	fa842783          	lw	a5,-88(s0)
200148dc:	2a07a783          	lw	a5,672(a5)
200148e0:	fa442583          	lw	a1,-92(s0)
200148e4:	4559                	li	a0,22
200148e6:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:246
}
200148e8:	0001                	nop
200148ea:	40f6                	lw	ra,92(sp)
200148ec:	42e6                	lw	t0,88(sp)
200148ee:	4356                	lw	t1,84(sp)
200148f0:	43c6                	lw	t2,80(sp)
200148f2:	4436                	lw	s0,76(sp)
200148f4:	4526                	lw	a0,72(sp)
200148f6:	4596                	lw	a1,68(sp)
200148f8:	4606                	lw	a2,64(sp)
200148fa:	56f2                	lw	a3,60(sp)
200148fc:	5762                	lw	a4,56(sp)
200148fe:	57d2                	lw	a5,52(sp)
20014900:	5842                	lw	a6,48(sp)
20014902:	58b2                	lw	a7,44(sp)
20014904:	5e22                	lw	t3,40(sp)
20014906:	5e92                	lw	t4,36(sp)
20014908:	5f02                	lw	t5,32(sp)
2001490a:	4ff2                	lw	t6,28(sp)
2001490c:	6125                	addi	sp,sp,96
2001490e:	30200073          	mret

20014912 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20014912:	711d                	addi	sp,sp,-96
20014914:	ce86                	sw	ra,92(sp)
20014916:	cc96                	sw	t0,88(sp)
20014918:	ca9a                	sw	t1,84(sp)
2001491a:	c89e                	sw	t2,80(sp)
2001491c:	c6a2                	sw	s0,76(sp)
2001491e:	c4aa                	sw	a0,72(sp)
20014920:	c2ae                	sw	a1,68(sp)
20014922:	c0b2                	sw	a2,64(sp)
20014924:	de36                	sw	a3,60(sp)
20014926:	dc3a                	sw	a4,56(sp)
20014928:	da3e                	sw	a5,52(sp)
2001492a:	d842                	sw	a6,48(sp)
2001492c:	d646                	sw	a7,44(sp)
2001492e:	d472                	sw	t3,40(sp)
20014930:	d276                	sw	t4,36(sp)
20014932:	d07a                	sw	t5,32(sp)
20014934:	ce7e                	sw	t6,28(sp)
20014936:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20014938:	dacff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
2001493c:	872a                	mv	a4,a0
2001493e:	800027b7          	lui	a5,0x80002
20014942:	070a                	slli	a4,a4,0x2
20014944:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014948:	97ba                	add	a5,a5,a4
2001494a:	439c                	lw	a5,0(a5)
2001494c:	faf42623          	sw	a5,-84(s0)
20014950:	fac42783          	lw	a5,-84(s0)
20014954:	c78d                	beqz	a5,2001497e <metal_lc7_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20014956:	fac42503          	lw	a0,-84(s0)
2001495a:	d0cff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
2001495e:	faa42423          	sw	a0,-88(s0)
20014962:	fa842783          	lw	a5,-88(s0)
20014966:	2c07a783          	lw	a5,704(a5)
2001496a:	faf42223          	sw	a5,-92(s0)
2001496e:	fa842783          	lw	a5,-88(s0)
20014972:	2b87a783          	lw	a5,696(a5)
20014976:	fa442583          	lw	a1,-92(s0)
2001497a:	455d                	li	a0,23
2001497c:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:251
}
2001497e:	0001                	nop
20014980:	40f6                	lw	ra,92(sp)
20014982:	42e6                	lw	t0,88(sp)
20014984:	4356                	lw	t1,84(sp)
20014986:	43c6                	lw	t2,80(sp)
20014988:	4436                	lw	s0,76(sp)
2001498a:	4526                	lw	a0,72(sp)
2001498c:	4596                	lw	a1,68(sp)
2001498e:	4606                	lw	a2,64(sp)
20014990:	56f2                	lw	a3,60(sp)
20014992:	5762                	lw	a4,56(sp)
20014994:	57d2                	lw	a5,52(sp)
20014996:	5842                	lw	a6,48(sp)
20014998:	58b2                	lw	a7,44(sp)
2001499a:	5e22                	lw	t3,40(sp)
2001499c:	5e92                	lw	t4,36(sp)
2001499e:	5f02                	lw	t5,32(sp)
200149a0:	4ff2                	lw	t6,28(sp)
200149a2:	6125                	addi	sp,sp,96
200149a4:	30200073          	mret

200149a8 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
200149a8:	711d                	addi	sp,sp,-96
200149aa:	ce86                	sw	ra,92(sp)
200149ac:	cc96                	sw	t0,88(sp)
200149ae:	ca9a                	sw	t1,84(sp)
200149b0:	c89e                	sw	t2,80(sp)
200149b2:	c6a2                	sw	s0,76(sp)
200149b4:	c4aa                	sw	a0,72(sp)
200149b6:	c2ae                	sw	a1,68(sp)
200149b8:	c0b2                	sw	a2,64(sp)
200149ba:	de36                	sw	a3,60(sp)
200149bc:	dc3a                	sw	a4,56(sp)
200149be:	da3e                	sw	a5,52(sp)
200149c0:	d842                	sw	a6,48(sp)
200149c2:	d646                	sw	a7,44(sp)
200149c4:	d472                	sw	t3,40(sp)
200149c6:	d276                	sw	t4,36(sp)
200149c8:	d07a                	sw	t5,32(sp)
200149ca:	ce7e                	sw	t6,28(sp)
200149cc:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
200149ce:	d16ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
200149d2:	872a                	mv	a4,a0
200149d4:	800027b7          	lui	a5,0x80002
200149d8:	070a                	slli	a4,a4,0x2
200149da:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
200149de:	97ba                	add	a5,a5,a4
200149e0:	439c                	lw	a5,0(a5)
200149e2:	faf42623          	sw	a5,-84(s0)
200149e6:	fac42783          	lw	a5,-84(s0)
200149ea:	c78d                	beqz	a5,20014a14 <metal_lc8_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
200149ec:	fac42503          	lw	a0,-84(s0)
200149f0:	c76ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
200149f4:	faa42423          	sw	a0,-88(s0)
200149f8:	fa842783          	lw	a5,-88(s0)
200149fc:	2d87a783          	lw	a5,728(a5)
20014a00:	faf42223          	sw	a5,-92(s0)
20014a04:	fa842783          	lw	a5,-88(s0)
20014a08:	2d07a783          	lw	a5,720(a5)
20014a0c:	fa442583          	lw	a1,-92(s0)
20014a10:	4561                	li	a0,24
20014a12:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:256
}
20014a14:	0001                	nop
20014a16:	40f6                	lw	ra,92(sp)
20014a18:	42e6                	lw	t0,88(sp)
20014a1a:	4356                	lw	t1,84(sp)
20014a1c:	43c6                	lw	t2,80(sp)
20014a1e:	4436                	lw	s0,76(sp)
20014a20:	4526                	lw	a0,72(sp)
20014a22:	4596                	lw	a1,68(sp)
20014a24:	4606                	lw	a2,64(sp)
20014a26:	56f2                	lw	a3,60(sp)
20014a28:	5762                	lw	a4,56(sp)
20014a2a:	57d2                	lw	a5,52(sp)
20014a2c:	5842                	lw	a6,48(sp)
20014a2e:	58b2                	lw	a7,44(sp)
20014a30:	5e22                	lw	t3,40(sp)
20014a32:	5e92                	lw	t4,36(sp)
20014a34:	5f02                	lw	t5,32(sp)
20014a36:	4ff2                	lw	t6,28(sp)
20014a38:	6125                	addi	sp,sp,96
20014a3a:	30200073          	mret

20014a3e <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20014a3e:	711d                	addi	sp,sp,-96
20014a40:	ce86                	sw	ra,92(sp)
20014a42:	cc96                	sw	t0,88(sp)
20014a44:	ca9a                	sw	t1,84(sp)
20014a46:	c89e                	sw	t2,80(sp)
20014a48:	c6a2                	sw	s0,76(sp)
20014a4a:	c4aa                	sw	a0,72(sp)
20014a4c:	c2ae                	sw	a1,68(sp)
20014a4e:	c0b2                	sw	a2,64(sp)
20014a50:	de36                	sw	a3,60(sp)
20014a52:	dc3a                	sw	a4,56(sp)
20014a54:	da3e                	sw	a5,52(sp)
20014a56:	d842                	sw	a6,48(sp)
20014a58:	d646                	sw	a7,44(sp)
20014a5a:	d472                	sw	t3,40(sp)
20014a5c:	d276                	sw	t4,36(sp)
20014a5e:	d07a                	sw	t5,32(sp)
20014a60:	ce7e                	sw	t6,28(sp)
20014a62:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20014a64:	c80ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20014a68:	872a                	mv	a4,a0
20014a6a:	800027b7          	lui	a5,0x80002
20014a6e:	070a                	slli	a4,a4,0x2
20014a70:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014a74:	97ba                	add	a5,a5,a4
20014a76:	439c                	lw	a5,0(a5)
20014a78:	faf42623          	sw	a5,-84(s0)
20014a7c:	fac42783          	lw	a5,-84(s0)
20014a80:	c78d                	beqz	a5,20014aaa <metal_lc9_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20014a82:	fac42503          	lw	a0,-84(s0)
20014a86:	be0ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014a8a:	faa42423          	sw	a0,-88(s0)
20014a8e:	fa842783          	lw	a5,-88(s0)
20014a92:	2f07a783          	lw	a5,752(a5)
20014a96:	faf42223          	sw	a5,-92(s0)
20014a9a:	fa842783          	lw	a5,-88(s0)
20014a9e:	2e87a783          	lw	a5,744(a5)
20014aa2:	fa442583          	lw	a1,-92(s0)
20014aa6:	4565                	li	a0,25
20014aa8:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:261
}
20014aaa:	0001                	nop
20014aac:	40f6                	lw	ra,92(sp)
20014aae:	42e6                	lw	t0,88(sp)
20014ab0:	4356                	lw	t1,84(sp)
20014ab2:	43c6                	lw	t2,80(sp)
20014ab4:	4436                	lw	s0,76(sp)
20014ab6:	4526                	lw	a0,72(sp)
20014ab8:	4596                	lw	a1,68(sp)
20014aba:	4606                	lw	a2,64(sp)
20014abc:	56f2                	lw	a3,60(sp)
20014abe:	5762                	lw	a4,56(sp)
20014ac0:	57d2                	lw	a5,52(sp)
20014ac2:	5842                	lw	a6,48(sp)
20014ac4:	58b2                	lw	a7,44(sp)
20014ac6:	5e22                	lw	t3,40(sp)
20014ac8:	5e92                	lw	t4,36(sp)
20014aca:	5f02                	lw	t5,32(sp)
20014acc:	4ff2                	lw	t6,28(sp)
20014ace:	6125                	addi	sp,sp,96
20014ad0:	30200073          	mret

20014ad4 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20014ad4:	711d                	addi	sp,sp,-96
20014ad6:	ce86                	sw	ra,92(sp)
20014ad8:	cc96                	sw	t0,88(sp)
20014ada:	ca9a                	sw	t1,84(sp)
20014adc:	c89e                	sw	t2,80(sp)
20014ade:	c6a2                	sw	s0,76(sp)
20014ae0:	c4aa                	sw	a0,72(sp)
20014ae2:	c2ae                	sw	a1,68(sp)
20014ae4:	c0b2                	sw	a2,64(sp)
20014ae6:	de36                	sw	a3,60(sp)
20014ae8:	dc3a                	sw	a4,56(sp)
20014aea:	da3e                	sw	a5,52(sp)
20014aec:	d842                	sw	a6,48(sp)
20014aee:	d646                	sw	a7,44(sp)
20014af0:	d472                	sw	t3,40(sp)
20014af2:	d276                	sw	t4,36(sp)
20014af4:	d07a                	sw	t5,32(sp)
20014af6:	ce7e                	sw	t6,28(sp)
20014af8:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20014afa:	beaff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20014afe:	872a                	mv	a4,a0
20014b00:	800027b7          	lui	a5,0x80002
20014b04:	070a                	slli	a4,a4,0x2
20014b06:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014b0a:	97ba                	add	a5,a5,a4
20014b0c:	439c                	lw	a5,0(a5)
20014b0e:	faf42623          	sw	a5,-84(s0)
20014b12:	fac42783          	lw	a5,-84(s0)
20014b16:	c78d                	beqz	a5,20014b40 <metal_lc10_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20014b18:	fac42503          	lw	a0,-84(s0)
20014b1c:	b4aff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014b20:	faa42423          	sw	a0,-88(s0)
20014b24:	fa842783          	lw	a5,-88(s0)
20014b28:	3087a783          	lw	a5,776(a5)
20014b2c:	faf42223          	sw	a5,-92(s0)
20014b30:	fa842783          	lw	a5,-88(s0)
20014b34:	3007a783          	lw	a5,768(a5)
20014b38:	fa442583          	lw	a1,-92(s0)
20014b3c:	4569                	li	a0,26
20014b3e:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:267
}
20014b40:	0001                	nop
20014b42:	40f6                	lw	ra,92(sp)
20014b44:	42e6                	lw	t0,88(sp)
20014b46:	4356                	lw	t1,84(sp)
20014b48:	43c6                	lw	t2,80(sp)
20014b4a:	4436                	lw	s0,76(sp)
20014b4c:	4526                	lw	a0,72(sp)
20014b4e:	4596                	lw	a1,68(sp)
20014b50:	4606                	lw	a2,64(sp)
20014b52:	56f2                	lw	a3,60(sp)
20014b54:	5762                	lw	a4,56(sp)
20014b56:	57d2                	lw	a5,52(sp)
20014b58:	5842                	lw	a6,48(sp)
20014b5a:	58b2                	lw	a7,44(sp)
20014b5c:	5e22                	lw	t3,40(sp)
20014b5e:	5e92                	lw	t4,36(sp)
20014b60:	5f02                	lw	t5,32(sp)
20014b62:	4ff2                	lw	t6,28(sp)
20014b64:	6125                	addi	sp,sp,96
20014b66:	30200073          	mret

20014b6a <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20014b6a:	711d                	addi	sp,sp,-96
20014b6c:	ce86                	sw	ra,92(sp)
20014b6e:	cc96                	sw	t0,88(sp)
20014b70:	ca9a                	sw	t1,84(sp)
20014b72:	c89e                	sw	t2,80(sp)
20014b74:	c6a2                	sw	s0,76(sp)
20014b76:	c4aa                	sw	a0,72(sp)
20014b78:	c2ae                	sw	a1,68(sp)
20014b7a:	c0b2                	sw	a2,64(sp)
20014b7c:	de36                	sw	a3,60(sp)
20014b7e:	dc3a                	sw	a4,56(sp)
20014b80:	da3e                	sw	a5,52(sp)
20014b82:	d842                	sw	a6,48(sp)
20014b84:	d646                	sw	a7,44(sp)
20014b86:	d472                	sw	t3,40(sp)
20014b88:	d276                	sw	t4,36(sp)
20014b8a:	d07a                	sw	t5,32(sp)
20014b8c:	ce7e                	sw	t6,28(sp)
20014b8e:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20014b90:	b54ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20014b94:	872a                	mv	a4,a0
20014b96:	800027b7          	lui	a5,0x80002
20014b9a:	070a                	slli	a4,a4,0x2
20014b9c:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014ba0:	97ba                	add	a5,a5,a4
20014ba2:	439c                	lw	a5,0(a5)
20014ba4:	faf42623          	sw	a5,-84(s0)
20014ba8:	fac42783          	lw	a5,-84(s0)
20014bac:	c78d                	beqz	a5,20014bd6 <metal_lc11_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20014bae:	fac42503          	lw	a0,-84(s0)
20014bb2:	ab4ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014bb6:	faa42423          	sw	a0,-88(s0)
20014bba:	fa842783          	lw	a5,-88(s0)
20014bbe:	3207a783          	lw	a5,800(a5)
20014bc2:	faf42223          	sw	a5,-92(s0)
20014bc6:	fa842783          	lw	a5,-88(s0)
20014bca:	3187a783          	lw	a5,792(a5)
20014bce:	fa442583          	lw	a1,-92(s0)
20014bd2:	456d                	li	a0,27
20014bd4:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:273
}
20014bd6:	0001                	nop
20014bd8:	40f6                	lw	ra,92(sp)
20014bda:	42e6                	lw	t0,88(sp)
20014bdc:	4356                	lw	t1,84(sp)
20014bde:	43c6                	lw	t2,80(sp)
20014be0:	4436                	lw	s0,76(sp)
20014be2:	4526                	lw	a0,72(sp)
20014be4:	4596                	lw	a1,68(sp)
20014be6:	4606                	lw	a2,64(sp)
20014be8:	56f2                	lw	a3,60(sp)
20014bea:	5762                	lw	a4,56(sp)
20014bec:	57d2                	lw	a5,52(sp)
20014bee:	5842                	lw	a6,48(sp)
20014bf0:	58b2                	lw	a7,44(sp)
20014bf2:	5e22                	lw	t3,40(sp)
20014bf4:	5e92                	lw	t4,36(sp)
20014bf6:	5f02                	lw	t5,32(sp)
20014bf8:	4ff2                	lw	t6,28(sp)
20014bfa:	6125                	addi	sp,sp,96
20014bfc:	30200073          	mret

20014c00 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20014c00:	711d                	addi	sp,sp,-96
20014c02:	ce86                	sw	ra,92(sp)
20014c04:	cc96                	sw	t0,88(sp)
20014c06:	ca9a                	sw	t1,84(sp)
20014c08:	c89e                	sw	t2,80(sp)
20014c0a:	c6a2                	sw	s0,76(sp)
20014c0c:	c4aa                	sw	a0,72(sp)
20014c0e:	c2ae                	sw	a1,68(sp)
20014c10:	c0b2                	sw	a2,64(sp)
20014c12:	de36                	sw	a3,60(sp)
20014c14:	dc3a                	sw	a4,56(sp)
20014c16:	da3e                	sw	a5,52(sp)
20014c18:	d842                	sw	a6,48(sp)
20014c1a:	d646                	sw	a7,44(sp)
20014c1c:	d472                	sw	t3,40(sp)
20014c1e:	d276                	sw	t4,36(sp)
20014c20:	d07a                	sw	t5,32(sp)
20014c22:	ce7e                	sw	t6,28(sp)
20014c24:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20014c26:	abeff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20014c2a:	872a                	mv	a4,a0
20014c2c:	800027b7          	lui	a5,0x80002
20014c30:	070a                	slli	a4,a4,0x2
20014c32:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014c36:	97ba                	add	a5,a5,a4
20014c38:	439c                	lw	a5,0(a5)
20014c3a:	faf42623          	sw	a5,-84(s0)
20014c3e:	fac42783          	lw	a5,-84(s0)
20014c42:	c78d                	beqz	a5,20014c6c <metal_lc12_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20014c44:	fac42503          	lw	a0,-84(s0)
20014c48:	a1eff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014c4c:	faa42423          	sw	a0,-88(s0)
20014c50:	fa842783          	lw	a5,-88(s0)
20014c54:	3387a783          	lw	a5,824(a5)
20014c58:	faf42223          	sw	a5,-92(s0)
20014c5c:	fa842783          	lw	a5,-88(s0)
20014c60:	3307a783          	lw	a5,816(a5)
20014c64:	fa442583          	lw	a1,-92(s0)
20014c68:	4571                	li	a0,28
20014c6a:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:279
}
20014c6c:	0001                	nop
20014c6e:	40f6                	lw	ra,92(sp)
20014c70:	42e6                	lw	t0,88(sp)
20014c72:	4356                	lw	t1,84(sp)
20014c74:	43c6                	lw	t2,80(sp)
20014c76:	4436                	lw	s0,76(sp)
20014c78:	4526                	lw	a0,72(sp)
20014c7a:	4596                	lw	a1,68(sp)
20014c7c:	4606                	lw	a2,64(sp)
20014c7e:	56f2                	lw	a3,60(sp)
20014c80:	5762                	lw	a4,56(sp)
20014c82:	57d2                	lw	a5,52(sp)
20014c84:	5842                	lw	a6,48(sp)
20014c86:	58b2                	lw	a7,44(sp)
20014c88:	5e22                	lw	t3,40(sp)
20014c8a:	5e92                	lw	t4,36(sp)
20014c8c:	5f02                	lw	t5,32(sp)
20014c8e:	4ff2                	lw	t6,28(sp)
20014c90:	6125                	addi	sp,sp,96
20014c92:	30200073          	mret

20014c96 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20014c96:	711d                	addi	sp,sp,-96
20014c98:	ce86                	sw	ra,92(sp)
20014c9a:	cc96                	sw	t0,88(sp)
20014c9c:	ca9a                	sw	t1,84(sp)
20014c9e:	c89e                	sw	t2,80(sp)
20014ca0:	c6a2                	sw	s0,76(sp)
20014ca2:	c4aa                	sw	a0,72(sp)
20014ca4:	c2ae                	sw	a1,68(sp)
20014ca6:	c0b2                	sw	a2,64(sp)
20014ca8:	de36                	sw	a3,60(sp)
20014caa:	dc3a                	sw	a4,56(sp)
20014cac:	da3e                	sw	a5,52(sp)
20014cae:	d842                	sw	a6,48(sp)
20014cb0:	d646                	sw	a7,44(sp)
20014cb2:	d472                	sw	t3,40(sp)
20014cb4:	d276                	sw	t4,36(sp)
20014cb6:	d07a                	sw	t5,32(sp)
20014cb8:	ce7e                	sw	t6,28(sp)
20014cba:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20014cbc:	a28ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20014cc0:	872a                	mv	a4,a0
20014cc2:	800027b7          	lui	a5,0x80002
20014cc6:	070a                	slli	a4,a4,0x2
20014cc8:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014ccc:	97ba                	add	a5,a5,a4
20014cce:	439c                	lw	a5,0(a5)
20014cd0:	faf42623          	sw	a5,-84(s0)
20014cd4:	fac42783          	lw	a5,-84(s0)
20014cd8:	c78d                	beqz	a5,20014d02 <metal_lc13_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20014cda:	fac42503          	lw	a0,-84(s0)
20014cde:	988ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014ce2:	faa42423          	sw	a0,-88(s0)
20014ce6:	fa842783          	lw	a5,-88(s0)
20014cea:	3507a783          	lw	a5,848(a5)
20014cee:	faf42223          	sw	a5,-92(s0)
20014cf2:	fa842783          	lw	a5,-88(s0)
20014cf6:	3487a783          	lw	a5,840(a5)
20014cfa:	fa442583          	lw	a1,-92(s0)
20014cfe:	4575                	li	a0,29
20014d00:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:285
}
20014d02:	0001                	nop
20014d04:	40f6                	lw	ra,92(sp)
20014d06:	42e6                	lw	t0,88(sp)
20014d08:	4356                	lw	t1,84(sp)
20014d0a:	43c6                	lw	t2,80(sp)
20014d0c:	4436                	lw	s0,76(sp)
20014d0e:	4526                	lw	a0,72(sp)
20014d10:	4596                	lw	a1,68(sp)
20014d12:	4606                	lw	a2,64(sp)
20014d14:	56f2                	lw	a3,60(sp)
20014d16:	5762                	lw	a4,56(sp)
20014d18:	57d2                	lw	a5,52(sp)
20014d1a:	5842                	lw	a6,48(sp)
20014d1c:	58b2                	lw	a7,44(sp)
20014d1e:	5e22                	lw	t3,40(sp)
20014d20:	5e92                	lw	t4,36(sp)
20014d22:	5f02                	lw	t5,32(sp)
20014d24:	4ff2                	lw	t6,28(sp)
20014d26:	6125                	addi	sp,sp,96
20014d28:	30200073          	mret

20014d2c <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20014d2c:	711d                	addi	sp,sp,-96
20014d2e:	ce86                	sw	ra,92(sp)
20014d30:	cc96                	sw	t0,88(sp)
20014d32:	ca9a                	sw	t1,84(sp)
20014d34:	c89e                	sw	t2,80(sp)
20014d36:	c6a2                	sw	s0,76(sp)
20014d38:	c4aa                	sw	a0,72(sp)
20014d3a:	c2ae                	sw	a1,68(sp)
20014d3c:	c0b2                	sw	a2,64(sp)
20014d3e:	de36                	sw	a3,60(sp)
20014d40:	dc3a                	sw	a4,56(sp)
20014d42:	da3e                	sw	a5,52(sp)
20014d44:	d842                	sw	a6,48(sp)
20014d46:	d646                	sw	a7,44(sp)
20014d48:	d472                	sw	t3,40(sp)
20014d4a:	d276                	sw	t4,36(sp)
20014d4c:	d07a                	sw	t5,32(sp)
20014d4e:	ce7e                	sw	t6,28(sp)
20014d50:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20014d52:	992ff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20014d56:	872a                	mv	a4,a0
20014d58:	800027b7          	lui	a5,0x80002
20014d5c:	070a                	slli	a4,a4,0x2
20014d5e:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014d62:	97ba                	add	a5,a5,a4
20014d64:	439c                	lw	a5,0(a5)
20014d66:	faf42623          	sw	a5,-84(s0)
20014d6a:	fac42783          	lw	a5,-84(s0)
20014d6e:	c78d                	beqz	a5,20014d98 <metal_lc14_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20014d70:	fac42503          	lw	a0,-84(s0)
20014d74:	8f2ff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014d78:	faa42423          	sw	a0,-88(s0)
20014d7c:	fa842783          	lw	a5,-88(s0)
20014d80:	3687a783          	lw	a5,872(a5)
20014d84:	faf42223          	sw	a5,-92(s0)
20014d88:	fa842783          	lw	a5,-88(s0)
20014d8c:	3607a783          	lw	a5,864(a5)
20014d90:	fa442583          	lw	a1,-92(s0)
20014d94:	4579                	li	a0,30
20014d96:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:291
}
20014d98:	0001                	nop
20014d9a:	40f6                	lw	ra,92(sp)
20014d9c:	42e6                	lw	t0,88(sp)
20014d9e:	4356                	lw	t1,84(sp)
20014da0:	43c6                	lw	t2,80(sp)
20014da2:	4436                	lw	s0,76(sp)
20014da4:	4526                	lw	a0,72(sp)
20014da6:	4596                	lw	a1,68(sp)
20014da8:	4606                	lw	a2,64(sp)
20014daa:	56f2                	lw	a3,60(sp)
20014dac:	5762                	lw	a4,56(sp)
20014dae:	57d2                	lw	a5,52(sp)
20014db0:	5842                	lw	a6,48(sp)
20014db2:	58b2                	lw	a7,44(sp)
20014db4:	5e22                	lw	t3,40(sp)
20014db6:	5e92                	lw	t4,36(sp)
20014db8:	5f02                	lw	t5,32(sp)
20014dba:	4ff2                	lw	t6,28(sp)
20014dbc:	6125                	addi	sp,sp,96
20014dbe:	30200073          	mret

20014dc2 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20014dc2:	711d                	addi	sp,sp,-96
20014dc4:	ce86                	sw	ra,92(sp)
20014dc6:	cc96                	sw	t0,88(sp)
20014dc8:	ca9a                	sw	t1,84(sp)
20014dca:	c89e                	sw	t2,80(sp)
20014dcc:	c6a2                	sw	s0,76(sp)
20014dce:	c4aa                	sw	a0,72(sp)
20014dd0:	c2ae                	sw	a1,68(sp)
20014dd2:	c0b2                	sw	a2,64(sp)
20014dd4:	de36                	sw	a3,60(sp)
20014dd6:	dc3a                	sw	a4,56(sp)
20014dd8:	da3e                	sw	a5,52(sp)
20014dda:	d842                	sw	a6,48(sp)
20014ddc:	d646                	sw	a7,44(sp)
20014dde:	d472                	sw	t3,40(sp)
20014de0:	d276                	sw	t4,36(sp)
20014de2:	d07a                	sw	t5,32(sp)
20014de4:	ce7e                	sw	t6,28(sp)
20014de6:	1080                	addi	s0,sp,96
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20014de8:	8fcff0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20014dec:	872a                	mv	a4,a0
20014dee:	800027b7          	lui	a5,0x80002
20014df2:	070a                	slli	a4,a4,0x2
20014df4:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20014df8:	97ba                	add	a5,a5,a4
20014dfa:	439c                	lw	a5,0(a5)
20014dfc:	faf42623          	sw	a5,-84(s0)
20014e00:	fac42783          	lw	a5,-84(s0)
20014e04:	c78d                	beqz	a5,20014e2e <metal_lc15_interrupt_vector_handler+0x6c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20014e06:	fac42503          	lw	a0,-84(s0)
20014e0a:	85cff0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20014e0e:	faa42423          	sw	a0,-88(s0)
20014e12:	fa842783          	lw	a5,-88(s0)
20014e16:	3807a783          	lw	a5,896(a5)
20014e1a:	faf42223          	sw	a5,-92(s0)
20014e1e:	fa842783          	lw	a5,-88(s0)
20014e22:	3787a783          	lw	a5,888(a5)
20014e26:	fa442583          	lw	a1,-92(s0)
20014e2a:	457d                	li	a0,31
20014e2c:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:297
}
20014e2e:	0001                	nop
20014e30:	40f6                	lw	ra,92(sp)
20014e32:	42e6                	lw	t0,88(sp)
20014e34:	4356                	lw	t1,84(sp)
20014e36:	43c6                	lw	t2,80(sp)
20014e38:	4436                	lw	s0,76(sp)
20014e3a:	4526                	lw	a0,72(sp)
20014e3c:	4596                	lw	a1,68(sp)
20014e3e:	4606                	lw	a2,64(sp)
20014e40:	56f2                	lw	a3,60(sp)
20014e42:	5762                	lw	a4,56(sp)
20014e44:	57d2                	lw	a5,52(sp)
20014e46:	5842                	lw	a6,48(sp)
20014e48:	58b2                	lw	a7,44(sp)
20014e4a:	5e22                	lw	t3,40(sp)
20014e4c:	5e92                	lw	t4,36(sp)
20014e4e:	5f02                	lw	t5,32(sp)
20014e50:	4ff2                	lw	t6,28(sp)
20014e52:	6125                	addi	sp,sp,96
20014e54:	30200073          	mret

20014e58 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20014e58:	1101                	addi	sp,sp,-32
20014e5a:	ce22                	sw	s0,28(sp)
20014e5c:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20014e5e:	305027f3          	csrr	a5,mtvec
20014e62:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20014e66:	fec42783          	lw	a5,-20(s0)
20014e6a:	03f7f793          	andi	a5,a5,63
20014e6e:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20014e72:	fec42703          	lw	a4,-20(s0)
20014e76:	478d                	li	a5,3
20014e78:	02f70363          	beq	a4,a5,20014e9e <__metal_controller_interrupt_vector_mode+0x46>
20014e7c:	fec42703          	lw	a4,-20(s0)
20014e80:	478d                	li	a5,3
20014e82:	02e7e263          	bltu	a5,a4,20014ea6 <__metal_controller_interrupt_vector_mode+0x4e>
20014e86:	fec42703          	lw	a4,-20(s0)
20014e8a:	4785                	li	a5,1
20014e8c:	00f70b63          	beq	a4,a5,20014ea2 <__metal_controller_interrupt_vector_mode+0x4a>
20014e90:	fec42703          	lw	a4,-20(s0)
20014e94:	4789                	li	a5,2
20014e96:	00f71863          	bne	a4,a5,20014ea6 <__metal_controller_interrupt_vector_mode+0x4e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20014e9a:	478d                	li	a5,3
20014e9c:	a031                	j	20014ea8 <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20014e9e:	4791                	li	a5,4
20014ea0:	a021                	j	20014ea8 <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20014ea2:	4785                	li	a5,1
20014ea4:	a011                	j	20014ea8 <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20014ea6:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:314
}
20014ea8:	853e                	mv	a0,a5
20014eaa:	4472                	lw	s0,28(sp)
20014eac:	6105                	addi	sp,sp,32
20014eae:	8082                	ret

20014eb0 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20014eb0:	7179                	addi	sp,sp,-48
20014eb2:	d622                	sw	s0,44(sp)
20014eb4:	1800                	addi	s0,sp,48
20014eb6:	fca42e23          	sw	a0,-36(s0)
20014eba:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20014ebe:	305027f3          	csrr	a5,mtvec
20014ec2:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20014ec6:	fec42783          	lw	a5,-20(s0)
20014eca:	fc07f793          	andi	a5,a5,-64
20014ece:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20014ed2:	fd842783          	lw	a5,-40(s0)
20014ed6:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20014eda:	fdc42703          	lw	a4,-36(s0)
20014ede:	4791                	li	a5,4
20014ee0:	04f70563          	beq	a4,a5,20014f2a <__metal_controller_interrupt_vector+0x7a>
20014ee4:	fdc42703          	lw	a4,-36(s0)
20014ee8:	4791                	li	a5,4
20014eea:	06e7e863          	bltu	a5,a4,20014f5a <__metal_controller_interrupt_vector+0xaa>
20014eee:	fdc42703          	lw	a4,-36(s0)
20014ef2:	478d                	li	a5,3
20014ef4:	06e7e363          	bltu	a5,a4,20014f5a <__metal_controller_interrupt_vector+0xaa>
20014ef8:	fdc42703          	lw	a4,-36(s0)
20014efc:	4789                	li	a5,2
20014efe:	00f77b63          	bgeu	a4,a5,20014f14 <__metal_controller_interrupt_vector+0x64>
20014f02:	fdc42783          	lw	a5,-36(s0)
20014f06:	c7a1                	beqz	a5,20014f4e <__metal_controller_interrupt_vector+0x9e>
20014f08:	fdc42703          	lw	a4,-36(s0)
20014f0c:	4785                	li	a5,1
20014f0e:	02f70963          	beq	a4,a5,20014f40 <__metal_controller_interrupt_vector+0x90>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20014f12:	a0a1                	j	20014f5a <__metal_controller_interrupt_vector+0xaa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20014f14:	fe842783          	lw	a5,-24(s0)
20014f18:	30779073          	csrw	mtvt,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20014f1c:	fec42783          	lw	a5,-20(s0)
20014f20:	0027e793          	ori	a5,a5,2
20014f24:	30579073          	csrw	mtvec,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20014f28:	a80d                	j	20014f5a <__metal_controller_interrupt_vector+0xaa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20014f2a:	fe842783          	lw	a5,-24(s0)
20014f2e:	30779073          	csrw	mtvt,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20014f32:	fec42783          	lw	a5,-20(s0)
20014f36:	0037e793          	ori	a5,a5,3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20014f3a:	30579073          	csrw	mtvec,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20014f3e:	a831                	j	20014f5a <__metal_controller_interrupt_vector+0xaa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20014f40:	fe842783          	lw	a5,-24(s0)
20014f44:	0017e793          	ori	a5,a5,1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20014f48:	30579073          	csrw	mtvec,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20014f4c:	a039                	j	20014f5a <__metal_controller_interrupt_vector+0xaa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20014f4e:	fe842783          	lw	a5,-24(s0)
20014f52:	9bf1                	andi	a5,a5,-4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20014f54:	30579073          	csrw	mtvec,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20014f58:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:344
}
20014f5a:	0001                	nop
20014f5c:	5432                	lw	s0,44(sp)
20014f5e:	6145                	addi	sp,sp,48
20014f60:	8082                	ret

20014f62 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20014f62:	1101                	addi	sp,sp,-32
20014f64:	ce22                	sw	s0,28(sp)
20014f66:	1000                	addi	s0,sp,32
20014f68:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20014f6c:	fec42703          	lw	a4,-20(s0)
20014f70:	47fd                	li	a5,31
20014f72:	02e7c663          	blt	a5,a4,20014f9e <__metal_valid_interrupt_id+0x3c>
20014f76:	fec42703          	lw	a4,-20(s0)
20014f7a:	478d                	li	a5,3
20014f7c:	02f74963          	blt	a4,a5,20014fae <__metal_valid_interrupt_id+0x4c>
20014f80:	fec42783          	lw	a5,-20(s0)
20014f84:	4705                	li	a4,1
20014f86:	00f71733          	sll	a4,a4,a5
20014f8a:	77c5                	lui	a5,0xffff1
20014f8c:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffee118>
20014f90:	8ff9                	and	a5,a5,a4
20014f92:	00f037b3          	snez	a5,a5
20014f96:	0ff7f793          	zext.b	a5,a5
20014f9a:	eb81                	bnez	a5,20014faa <__metal_valid_interrupt_id+0x48>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20014f9c:	a809                	j	20014fae <__metal_valid_interrupt_id+0x4c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20014f9e:	fec42703          	lw	a4,-20(s0)
20014fa2:	08000793          	li	a5,128
20014fa6:	00f71463          	bne	a4,a5,20014fae <__metal_valid_interrupt_id+0x4c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20014faa:	4785                	li	a5,1
20014fac:	a019                	j	20014fb2 <__metal_valid_interrupt_id+0x50>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20014fae:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20014fb0:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:374
}
20014fb2:	853e                	mv	a0,a5
20014fb4:	4472                	lw	s0,28(sp)
20014fb6:	6105                	addi	sp,sp,32
20014fb8:	8082                	ret

20014fba <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20014fba:	7179                	addi	sp,sp,-48
20014fbc:	d606                	sw	ra,44(sp)
20014fbe:	d422                	sw	s0,40(sp)
20014fc0:	1800                	addi	s0,sp,48
20014fc2:	fca42e23          	sw	a0,-36(s0)
20014fc6:	fcb42c23          	sw	a1,-40(s0)
20014fca:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20014fce:	fe042623          	sw	zero,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20014fd2:	fdc42783          	lw	a5,-36(s0)
20014fd6:	e399                	bnez	a5,20014fdc <__metal_local_interrupt_enable+0x22>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20014fd8:	57fd                	li	a5,-1
20014fda:	a849                	j	2001506c <__metal_local_interrupt_enable+0xb2>
20014fdc:	fd842703          	lw	a4,-40(s0)
20014fe0:	47fd                	li	a5,31
20014fe2:	08e7e063          	bltu	a5,a4,20015062 <__metal_local_interrupt_enable+0xa8>
20014fe6:	fd842783          	lw	a5,-40(s0)
20014fea:	00279713          	slli	a4,a5,0x2
20014fee:	200107b7          	lui	a5,0x20010
20014ff2:	54078793          	addi	a5,a5,1344 # 20010540 <__metal_driver_vtable_riscv_clint0+0x64>
20014ff6:	97ba                	add	a5,a5,a4
20014ff8:	439c                	lw	a5,0(a5)
20014ffa:	8782                	jr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20014ffc:	fd442783          	lw	a5,-44(s0)
20015000:	c781                	beqz	a5,20015008 <__metal_local_interrupt_enable+0x4e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20015002:	efdfe0ef          	jal	ra,20013efe <__metal_interrupt_global_enable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20015006:	a08d                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20015008:	f0ffe0ef          	jal	ra,20013f16 <__metal_interrupt_global_disable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2001500c:	a8b1                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
2001500e:	fd442783          	lw	a5,-44(s0)
20015012:	c781                	beqz	a5,2001501a <__metal_local_interrupt_enable+0x60>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20015014:	f1bfe0ef          	jal	ra,20013f2e <__metal_interrupt_software_enable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20015018:	a881                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2001501a:	f2dfe0ef          	jal	ra,20013f46 <__metal_interrupt_software_disable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
2001501e:	a0a9                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20015020:	fd442783          	lw	a5,-44(s0)
20015024:	c781                	beqz	a5,2001502c <__metal_local_interrupt_enable+0x72>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20015026:	f39fe0ef          	jal	ra,20013f5e <__metal_interrupt_timer_enable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
2001502a:	a83d                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
2001502c:	f4dfe0ef          	jal	ra,20013f78 <__metal_interrupt_timer_disable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20015030:	a825                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20015032:	fd442783          	lw	a5,-44(s0)
20015036:	c781                	beqz	a5,2001503e <__metal_local_interrupt_enable+0x84>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20015038:	f5bfe0ef          	jal	ra,20013f92 <__metal_interrupt_external_enable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
2001503c:	a035                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
2001503e:	f71fe0ef          	jal	ra,20013fae <__metal_interrupt_external_disable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20015042:	a01d                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20015044:	fd442783          	lw	a5,-44(s0)
20015048:	c799                	beqz	a5,20015056 <__metal_local_interrupt_enable+0x9c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
2001504a:	fd842783          	lw	a5,-40(s0)
2001504e:	853e                	mv	a0,a5
20015050:	f7bfe0ef          	jal	ra,20013fca <__metal_interrupt_local_enable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20015054:	a811                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20015056:	fd842783          	lw	a5,-40(s0)
2001505a:	853e                	mv	a0,a5
2001505c:	f9bfe0ef          	jal	ra,20013ff6 <__metal_interrupt_local_disable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20015060:	a021                	j	20015068 <__metal_local_interrupt_enable+0xae>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20015062:	57fd                	li	a5,-1
20015064:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20015068:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:439
}
2001506c:	853e                	mv	a0,a5
2001506e:	50b2                	lw	ra,44(sp)
20015070:	5422                	lw	s0,40(sp)
20015072:	6145                	addi	sp,sp,48
20015074:	8082                	ret

20015076 <__metal_exception_register>:
__metal_exception_register():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20015076:	7179                	addi	sp,sp,-48
20015078:	d622                	sw	s0,44(sp)
2001507a:	1800                	addi	s0,sp,48
2001507c:	fca42e23          	sw	a0,-36(s0)
20015080:	fcb42c23          	sw	a1,-40(s0)
20015084:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20015088:	fdc42783          	lw	a5,-36(s0)
2001508c:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20015090:	fd842703          	lw	a4,-40(s0)
20015094:	47ad                	li	a5,11
20015096:	02e7c263          	blt	a5,a4,200150ba <__metal_exception_register+0x44>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
2001509a:	fd442783          	lw	a5,-44(s0)
2001509e:	cf91                	beqz	a5,200150ba <__metal_exception_register+0x44>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
200150a0:	fec42703          	lw	a4,-20(s0)
200150a4:	fd842783          	lw	a5,-40(s0)
200150a8:	0e878793          	addi	a5,a5,232
200150ac:	078a                	slli	a5,a5,0x2
200150ae:	97ba                	add	a5,a5,a4
200150b0:	fd442703          	lw	a4,-44(s0)
200150b4:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
200150b6:	4781                	li	a5,0
200150b8:	a011                	j	200150bc <__metal_exception_register+0x46>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
200150ba:	57fd                	li	a5,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:450
}
200150bc:	853e                	mv	a0,a5
200150be:	5432                	lw	s0,44(sp)
200150c0:	6145                	addi	sp,sp,48
200150c2:	8082                	ret

200150c4 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
200150c4:	7179                	addi	sp,sp,-48
200150c6:	d606                	sw	ra,44(sp)
200150c8:	d422                	sw	s0,40(sp)
200150ca:	1800                	addi	s0,sp,48
200150cc:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
200150d0:	fdc42783          	lw	a5,-36(s0)
200150d4:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
200150d8:	fe442783          	lw	a5,-28(s0)
200150dc:	43dc                	lw	a5,4(a5)
200150de:	efdd                	bnez	a5,2001519c <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
200150e0:	fe042623          	sw	zero,-20(s0)
200150e4:	a0b9                	j	20015132 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
200150e6:	fe442683          	lw	a3,-28(s0)
200150ea:	fec42703          	lw	a4,-20(s0)
200150ee:	87ba                	mv	a5,a4
200150f0:	0786                	slli	a5,a5,0x1
200150f2:	97ba                	add	a5,a5,a4
200150f4:	078e                	slli	a5,a5,0x3
200150f6:	97b6                	add	a5,a5,a3
200150f8:	0807a823          	sw	zero,144(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
200150fc:	fe442683          	lw	a3,-28(s0)
20015100:	fec42703          	lw	a4,-20(s0)
20015104:	87ba                	mv	a5,a4
20015106:	0786                	slli	a5,a5,0x1
20015108:	97ba                	add	a5,a5,a4
2001510a:	078e                	slli	a5,a5,0x3
2001510c:	97b6                	add	a5,a5,a3
2001510e:	0807aa23          	sw	zero,148(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20015112:	fe442683          	lw	a3,-28(s0)
20015116:	fec42703          	lw	a4,-20(s0)
2001511a:	87ba                	mv	a5,a4
2001511c:	0786                	slli	a5,a5,0x1
2001511e:	97ba                	add	a5,a5,a4
20015120:	078e                	slli	a5,a5,0x3
20015122:	97b6                	add	a5,a5,a3
20015124:	0807ac23          	sw	zero,152(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20015128:	fec42783          	lw	a5,-20(s0)
2001512c:	0785                	addi	a5,a5,1
2001512e:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20015132:	fec42703          	lw	a4,-20(s0)
20015136:	47fd                	li	a5,31
20015138:	fae7d7e3          	bge	a5,a4,200150e6 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
2001513c:	fe042423          	sw	zero,-24(s0)
20015140:	a01d                	j	20015166 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20015142:	fe442703          	lw	a4,-28(s0)
20015146:	fe842783          	lw	a5,-24(s0)
2001514a:	0e878793          	addi	a5,a5,232
2001514e:	078a                	slli	a5,a5,0x2
20015150:	97ba                	add	a5,a5,a4
20015152:	20014737          	lui	a4,0x20014
20015156:	02270713          	addi	a4,a4,34 # 20014022 <__metal_default_exception_handler>
2001515a:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
2001515c:	fe842783          	lw	a5,-24(s0)
20015160:	0785                	addi	a5,a5,1
20015162:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20015166:	fe842703          	lw	a4,-24(s0)
2001516a:	47ad                	li	a5,11
2001516c:	fce7dbe3          	bge	a5,a4,20015142 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20015170:	305027f3          	csrr	a5,mtvec
20015174:	fef42023          	sw	a5,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20015178:	200107b7          	lui	a5,0x20010
2001517c:	13478793          	addi	a5,a5,308 # 20010134 <early_trap_vector>
20015180:	fe042703          	lw	a4,-32(s0)
20015184:	00f71863          	bne	a4,a5,20015194 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20015188:	200147b7          	lui	a5,0x20014
2001518c:	30078593          	addi	a1,a5,768 # 20014300 <__metal_exception_handler>
20015190:	4501                	li	a0,0
20015192:	3b39                	jal	20014eb0 <__metal_controller_interrupt_vector>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20015194:	fe442783          	lw	a5,-28(s0)
20015198:	4705                	li	a4,1
2001519a:	c3d8                	sw	a4,4(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
2001519c:	0001                	nop
2001519e:	50b2                	lw	ra,44(sp)
200151a0:	5422                	lw	s0,40(sp)
200151a2:	6145                	addi	sp,sp,48
200151a4:	8082                	ret

200151a6 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
200151a6:	7179                	addi	sp,sp,-48
200151a8:	d606                	sw	ra,44(sp)
200151aa:	d422                	sw	s0,40(sp)
200151ac:	1800                	addi	s0,sp,48
200151ae:	fca42e23          	sw	a0,-36(s0)
200151b2:	fcb42c23          	sw	a1,-40(s0)
200151b6:	fcc42a23          	sw	a2,-44(s0)
200151ba:	fcd42823          	sw	a3,-48(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
200151be:	fe042623          	sw	zero,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
200151c2:	fdc42783          	lw	a5,-36(s0)
200151c6:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
200151ca:	fd842503          	lw	a0,-40(s0)
200151ce:	3b51                	jal	20014f62 <__metal_valid_interrupt_id>
200151d0:	87aa                	mv	a5,a0
200151d2:	e399                	bnez	a5,200151d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
200151d4:	57d5                	li	a5,-11
200151d6:	a25d                	j	2001537c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
200151d8:	fd842703          	lw	a4,-40(s0)
200151dc:	08000793          	li	a5,128
200151e0:	00f71763          	bne	a4,a5,200151ee <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
200151e4:	3995                	jal	20014e58 <__metal_controller_interrupt_vector_mode>
200151e6:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
200151e8:	c399                	beqz	a5,200151ee <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
200151ea:	57cd                	li	a5,-13
200151ec:	aa41                	j	2001537c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
200151ee:	fd442783          	lw	a5,-44(s0)
200151f2:	cfb9                	beqz	a5,20015250 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
200151f4:	fd842703          	lw	a4,-40(s0)
200151f8:	08000793          	li	a5,128
200151fc:	00f71f63          	bne	a4,a5,2001521a <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20015200:	fe842783          	lw	a5,-24(s0)
20015204:	fd442703          	lw	a4,-44(s0)
20015208:	38e7a823          	sw	a4,912(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
2001520c:	fe842783          	lw	a5,-24(s0)
20015210:	fd042703          	lw	a4,-48(s0)
20015214:	38e7ac23          	sw	a4,920(a5)
20015218:	a285                	j	20015378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
2001521a:	fe842683          	lw	a3,-24(s0)
2001521e:	fd842703          	lw	a4,-40(s0)
20015222:	87ba                	mv	a5,a4
20015224:	0786                	slli	a5,a5,0x1
20015226:	97ba                	add	a5,a5,a4
20015228:	078e                	slli	a5,a5,0x3
2001522a:	97b6                	add	a5,a5,a3
2001522c:	fd442703          	lw	a4,-44(s0)
20015230:	08e7a823          	sw	a4,144(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20015234:	fe842683          	lw	a3,-24(s0)
20015238:	fd842703          	lw	a4,-40(s0)
2001523c:	87ba                	mv	a5,a4
2001523e:	0786                	slli	a5,a5,0x1
20015240:	97ba                	add	a5,a5,a4
20015242:	078e                	slli	a5,a5,0x3
20015244:	97b6                	add	a5,a5,a3
20015246:	fd042703          	lw	a4,-48(s0)
2001524a:	08e7ac23          	sw	a4,152(a5)
2001524e:	a22d                	j	20015378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20015250:	fd842703          	lw	a4,-40(s0)
20015254:	08000793          	li	a5,128
20015258:	0cf70163          	beq	a4,a5,2001531a <__metal_driver_riscv_cpu_controller_interrupt_register+0x174>
2001525c:	fd842703          	lw	a4,-40(s0)
20015260:	08000793          	li	a5,128
20015264:	10e7c763          	blt	a5,a4,20015372 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20015268:	fd842703          	lw	a4,-40(s0)
2001526c:	47fd                	li	a5,31
2001526e:	10e7c263          	blt	a5,a4,20015372 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20015272:	fd842703          	lw	a4,-40(s0)
20015276:	47c1                	li	a5,16
20015278:	0cf75063          	bge	a4,a5,20015338 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
2001527c:	fd842703          	lw	a4,-40(s0)
20015280:	47ad                	li	a5,11
20015282:	0af70b63          	beq	a4,a5,20015338 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20015286:	fd842703          	lw	a4,-40(s0)
2001528a:	47ad                	li	a5,11
2001528c:	0ee7c363          	blt	a5,a4,20015372 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20015290:	fd842703          	lw	a4,-40(s0)
20015294:	478d                	li	a5,3
20015296:	00f70863          	beq	a4,a5,200152a6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x100>
2001529a:	fd842703          	lw	a4,-40(s0)
2001529e:	479d                	li	a5,7
200152a0:	04f70063          	beq	a4,a5,200152e0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
200152a4:	a0f9                	j	20015372 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
200152a6:	fe842683          	lw	a3,-24(s0)
200152aa:	fd842703          	lw	a4,-40(s0)
200152ae:	87ba                	mv	a5,a4
200152b0:	0786                	slli	a5,a5,0x1
200152b2:	97ba                	add	a5,a5,a4
200152b4:	078e                	slli	a5,a5,0x3
200152b6:	97b6                	add	a5,a5,a3
200152b8:	20014737          	lui	a4,0x20014
200152bc:	11270713          	addi	a4,a4,274 # 20014112 <__metal_default_sw_handler>
200152c0:	08e7a823          	sw	a4,144(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
200152c4:	fe842683          	lw	a3,-24(s0)
200152c8:	fd842703          	lw	a4,-40(s0)
200152cc:	87ba                	mv	a5,a4
200152ce:	0786                	slli	a5,a5,0x1
200152d0:	97ba                	add	a5,a5,a4
200152d2:	078e                	slli	a5,a5,0x3
200152d4:	97b6                	add	a5,a5,a3
200152d6:	fd042703          	lw	a4,-48(s0)
200152da:	08e7aa23          	sw	a4,148(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
200152de:	a869                	j	20015378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
200152e0:	fe842683          	lw	a3,-24(s0)
200152e4:	fd842703          	lw	a4,-40(s0)
200152e8:	87ba                	mv	a5,a4
200152ea:	0786                	slli	a5,a5,0x1
200152ec:	97ba                	add	a5,a5,a4
200152ee:	078e                	slli	a5,a5,0x3
200152f0:	97b6                	add	a5,a5,a3
200152f2:	20014737          	lui	a4,0x20014
200152f6:	22270713          	addi	a4,a4,546 # 20014222 <__metal_default_timer_handler>
200152fa:	08e7a823          	sw	a4,144(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
200152fe:	fe842683          	lw	a3,-24(s0)
20015302:	fd842703          	lw	a4,-40(s0)
20015306:	87ba                	mv	a5,a4
20015308:	0786                	slli	a5,a5,0x1
2001530a:	97ba                	add	a5,a5,a4
2001530c:	078e                	slli	a5,a5,0x3
2001530e:	97b6                	add	a5,a5,a3
20015310:	fd042703          	lw	a4,-48(s0)
20015314:	08e7aa23          	sw	a4,148(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20015318:	a085                	j	20015378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
2001531a:	fe842783          	lw	a5,-24(s0)
2001531e:	20014737          	lui	a4,0x20014
20015322:	20c70713          	addi	a4,a4,524 # 2001420c <__metal_default_beu_handler>
20015326:	38e7a823          	sw	a4,912(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
2001532a:	fe842783          	lw	a5,-24(s0)
2001532e:	fd042703          	lw	a4,-48(s0)
20015332:	38e7ac23          	sw	a4,920(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20015336:	a089                	j	20015378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20015338:	fe842683          	lw	a3,-24(s0)
2001533c:	fd842703          	lw	a4,-40(s0)
20015340:	87ba                	mv	a5,a4
20015342:	0786                	slli	a5,a5,0x1
20015344:	97ba                	add	a5,a5,a4
20015346:	078e                	slli	a5,a5,0x3
20015348:	97b6                	add	a5,a5,a3
2001534a:	20014737          	lui	a4,0x20014
2001534e:	03a70713          	addi	a4,a4,58 # 2001403a <__metal_default_interrupt_handler>
20015352:	08e7a823          	sw	a4,144(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20015356:	fe842683          	lw	a3,-24(s0)
2001535a:	fd842703          	lw	a4,-40(s0)
2001535e:	87ba                	mv	a5,a4
20015360:	0786                	slli	a5,a5,0x1
20015362:	97ba                	add	a5,a5,a4
20015364:	078e                	slli	a5,a5,0x3
20015366:	97b6                	add	a5,a5,a3
20015368:	fd042703          	lw	a4,-48(s0)
2001536c:	08e7aa23          	sw	a4,148(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20015370:	a021                	j	20015378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20015372:	57d1                	li	a5,-12
20015374:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20015378:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:549
}
2001537c:	853e                	mv	a0,a5
2001537e:	50b2                	lw	ra,44(sp)
20015380:	5422                	lw	s0,40(sp)
20015382:	6145                	addi	sp,sp,48
20015384:	8082                	ret

20015386 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20015386:	1101                	addi	sp,sp,-32
20015388:	ce06                	sw	ra,28(sp)
2001538a:	cc22                	sw	s0,24(sp)
2001538c:	1000                	addi	s0,sp,32
2001538e:	fea42623          	sw	a0,-20(s0)
20015392:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20015396:	fe842783          	lw	a5,-24(s0)
2001539a:	4605                	li	a2,1
2001539c:	85be                	mv	a1,a5
2001539e:	fec42503          	lw	a0,-20(s0)
200153a2:	3921                	jal	20014fba <__metal_local_interrupt_enable>
200153a4:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:554
}
200153a6:	853e                	mv	a0,a5
200153a8:	40f2                	lw	ra,28(sp)
200153aa:	4462                	lw	s0,24(sp)
200153ac:	6105                	addi	sp,sp,32
200153ae:	8082                	ret

200153b0 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
200153b0:	1101                	addi	sp,sp,-32
200153b2:	ce06                	sw	ra,28(sp)
200153b4:	cc22                	sw	s0,24(sp)
200153b6:	1000                	addi	s0,sp,32
200153b8:	fea42623          	sw	a0,-20(s0)
200153bc:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
200153c0:	fe842783          	lw	a5,-24(s0)
200153c4:	4601                	li	a2,0
200153c6:	85be                	mv	a1,a5
200153c8:	fec42503          	lw	a0,-20(s0)
200153cc:	36fd                	jal	20014fba <__metal_local_interrupt_enable>
200153ce:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:559
}
200153d0:	853e                	mv	a0,a5
200153d2:	40f2                	lw	ra,28(sp)
200153d4:	4462                	lw	s0,24(sp)
200153d6:	6105                	addi	sp,sp,32
200153d8:	8082                	ret

200153da <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
200153da:	1101                	addi	sp,sp,-32
200153dc:	ce06                	sw	ra,28(sp)
200153de:	cc22                	sw	s0,24(sp)
200153e0:	1000                	addi	s0,sp,32
200153e2:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
200153e6:	a73ff0ef          	jal	ra,20014e58 <__metal_controller_interrupt_vector_mode>
200153ea:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:593
}
200153ec:	853e                	mv	a0,a5
200153ee:	40f2                	lw	ra,28(sp)
200153f0:	4462                	lw	s0,24(sp)
200153f2:	6105                	addi	sp,sp,32
200153f4:	8082                	ret

200153f6 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
200153f6:	1101                	addi	sp,sp,-32
200153f8:	ce06                	sw	ra,28(sp)
200153fa:	cc22                	sw	s0,24(sp)
200153fc:	1000                	addi	s0,sp,32
200153fe:	fea42623          	sw	a0,-20(s0)
20015402:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20015406:	fe842783          	lw	a5,-24(s0)
2001540a:	eb99                	bnez	a5,20015420 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
2001540c:	200147b7          	lui	a5,0x20014
20015410:	30078593          	addi	a1,a5,768 # 20014300 <__metal_exception_handler>
20015414:	fe842503          	lw	a0,-24(s0)
20015418:	a99ff0ef          	jal	ra,20014eb0 <__metal_controller_interrupt_vector>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
2001541c:	4781                	li	a5,0
2001541e:	a00d                	j	20015440 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20015420:	fe842703          	lw	a4,-24(s0)
20015424:	4785                	li	a5,1
20015426:	00f71c63          	bne	a4,a5,2001543e <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
2001542a:	200187b7          	lui	a5,0x20018
2001542e:	e0078593          	addi	a1,a5,-512 # 20017e00 <__metal_vector_table>
20015432:	fe842503          	lw	a0,-24(s0)
20015436:	a7bff0ef          	jal	ra,20014eb0 <__metal_controller_interrupt_vector>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
2001543a:	4781                	li	a5,0
2001543c:	a011                	j	20015440 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
2001543e:	57fd                	li	a5,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:609
}
20015440:	853e                	mv	a0,a5
20015442:	40f2                	lw	ra,28(sp)
20015444:	4462                	lw	s0,24(sp)
20015446:	6105                	addi	sp,sp,32
20015448:	8082                	ret

2001544a <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
2001544a:	1101                	addi	sp,sp,-32
2001544c:	ce22                	sw	s0,28(sp)
2001544e:	1000                	addi	s0,sp,32
20015450:	fea42623          	sw	a0,-20(s0)
20015454:	feb42423          	sw	a1,-24(s0)
20015458:	fec42223          	sw	a2,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
2001545c:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:616
}
2001545e:	853e                	mv	a0,a5
20015460:	4472                	lw	s0,28(sp)
20015462:	6105                	addi	sp,sp,32
20015464:	8082                	ret

20015466 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20015466:	7139                	addi	sp,sp,-64
20015468:	de22                	sw	s0,60(sp)
2001546a:	0080                	addi	s0,sp,64
2001546c:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20015470:	4501                	li	a0,0
20015472:	4581                	li	a1,0
20015474:	fea42423          	sw	a0,-24(s0)
20015478:	feb42623          	sw	a1,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
2001547c:	b80025f3          	csrr	a1,mcycleh
20015480:	feb42223          	sw	a1,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20015484:	b00025f3          	csrr	a1,mcycle
20015488:	feb42023          	sw	a1,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
2001548c:	b80025f3          	csrr	a1,mcycleh
20015490:	fcb42e23          	sw	a1,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20015494:	fe442503          	lw	a0,-28(s0)
20015498:	fdc42583          	lw	a1,-36(s0)
2001549c:	feb510e3          	bne	a0,a1,2001547c <__metal_driver_cpu_mcycle_get+0x16>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
200154a0:	fe442583          	lw	a1,-28(s0)
200154a4:	882e                	mv	a6,a1
200154a6:	4881                	li	a7,0
200154a8:	00081793          	slli	a5,a6,0x0
200154ac:	4701                	li	a4,0
200154ae:	fe042583          	lw	a1,-32(s0)
200154b2:	862e                	mv	a2,a1
200154b4:	4681                	li	a3,0
200154b6:	00c765b3          	or	a1,a4,a2
200154ba:	feb42423          	sw	a1,-24(s0)
200154be:	8fd5                	or	a5,a5,a3
200154c0:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
200154c4:	fe842703          	lw	a4,-24(s0)
200154c8:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:640
}
200154cc:	853a                	mv	a0,a4
200154ce:	85be                	mv	a1,a5
200154d0:	5472                	lw	s0,60(sp)
200154d2:	6121                	addi	sp,sp,64
200154d4:	8082                	ret

200154d6 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
200154d6:	7179                	addi	sp,sp,-48
200154d8:	d606                	sw	ra,44(sp)
200154da:	d422                	sw	s0,40(sp)
200154dc:	d24a                	sw	s2,36(sp)
200154de:	d04e                	sw	s3,32(sp)
200154e0:	1800                	addi	s0,sp,48
200154e2:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
200154e6:	fdc42783          	lw	a5,-36(s0)
200154ea:	e781                	bnez	a5,200154f2 <__metal_driver_cpu_timebase_get+0x1c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
200154ec:	4901                	li	s2,0
200154ee:	4981                	li	s3,0
200154f0:	a821                	j	20015508 <__metal_driver_cpu_timebase_get+0x32>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
200154f2:	fdc42503          	lw	a0,-36(s0)
200154f6:	947fe0ef          	jal	ra,20013e3c <__metal_driver_cpu_timebase>
200154fa:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
200154fe:	fec42783          	lw	a5,-20(s0)
20015502:	893e                	mv	s2,a5
20015504:	87fd                	srai	a5,a5,0x1f
20015506:	89be                	mv	s3,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:650
}
20015508:	874a                	mv	a4,s2
2001550a:	87ce                	mv	a5,s3
2001550c:	853a                	mv	a0,a4
2001550e:	85be                	mv	a1,a5
20015510:	50b2                	lw	ra,44(sp)
20015512:	5422                	lw	s0,40(sp)
20015514:	5912                	lw	s2,36(sp)
20015516:	5982                	lw	s3,32(sp)
20015518:	6145                	addi	sp,sp,48
2001551a:	8082                	ret

2001551c <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
2001551c:	7179                	addi	sp,sp,-48
2001551e:	d606                	sw	ra,44(sp)
20015520:	d422                	sw	s0,40(sp)
20015522:	1800                	addi	s0,sp,48
20015524:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20015528:	4781                	li	a5,0
2001552a:	4801                	li	a6,0
2001552c:	fef42023          	sw	a5,-32(s0)
20015530:	ff042223          	sw	a6,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20015534:	fdc42503          	lw	a0,-36(s0)
20015538:	92ffe0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
2001553c:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20015540:	fec42783          	lw	a5,-20(s0)
20015544:	c78d                	beqz	a5,2001556e <__metal_driver_cpu_mtime_get+0x52>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20015546:	fec42783          	lw	a5,-20(s0)
2001554a:	13c7a783          	lw	a5,316(a5)
2001554e:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20015552:	fe842783          	lw	a5,-24(s0)
20015556:	cf81                	beqz	a5,2001556e <__metal_driver_cpu_mtime_get+0x52>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20015558:	fe842783          	lw	a5,-24(s0)
2001555c:	439c                	lw	a5,0(a5)
2001555e:	47f8                	lw	a4,76(a5)
20015560:	fe040793          	addi	a5,s0,-32
20015564:	863e                	mv	a2,a5
20015566:	4585                	li	a1,1
20015568:	fe842503          	lw	a0,-24(s0)
2001556c:	9702                	jalr	a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
2001556e:	fe042703          	lw	a4,-32(s0)
20015572:	fe442783          	lw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:667
}
20015576:	853a                	mv	a0,a4
20015578:	85be                	mv	a1,a5
2001557a:	50b2                	lw	ra,44(sp)
2001557c:	5422                	lw	s0,40(sp)
2001557e:	6145                	addi	sp,sp,48
20015580:	8082                	ret

20015582 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20015582:	7179                	addi	sp,sp,-48
20015584:	d606                	sw	ra,44(sp)
20015586:	d422                	sw	s0,40(sp)
20015588:	d226                	sw	s1,36(sp)
2001558a:	1800                	addi	s0,sp,48
2001558c:	fca42e23          	sw	a0,-36(s0)
20015590:	fcb42823          	sw	a1,-48(s0)
20015594:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20015598:	57fd                	li	a5,-1
2001559a:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001559e:	fdc42503          	lw	a0,-36(s0)
200155a2:	8c5fe0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
200155a6:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
200155aa:	fe842783          	lw	a5,-24(s0)
200155ae:	cf8d                	beqz	a5,200155e8 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
200155b0:	fe842783          	lw	a5,-24(s0)
200155b4:	13c7a783          	lw	a5,316(a5)
200155b8:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
200155bc:	fe442783          	lw	a5,-28(s0)
200155c0:	c785                	beqz	a5,200155e8 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
200155c2:	fe442783          	lw	a5,-28(s0)
200155c6:	439c                	lw	a5,0(a5)
200155c8:	4ba4                	lw	s1,80(a5)
200155ca:	fdc42503          	lw	a0,-36(s0)
200155ce:	84bfe0ef          	jal	ra,20013e18 <__metal_driver_cpu_hartid>
200155d2:	87aa                	mv	a5,a0
200155d4:	fd042603          	lw	a2,-48(s0)
200155d8:	fd442683          	lw	a3,-44(s0)
200155dc:	85be                	mv	a1,a5
200155de:	fe442503          	lw	a0,-28(s0)
200155e2:	9482                	jalr	s1
200155e4:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
200155e8:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:685
}
200155ec:	853e                	mv	a0,a5
200155ee:	50b2                	lw	ra,44(sp)
200155f0:	5422                	lw	s0,40(sp)
200155f2:	5492                	lw	s1,36(sp)
200155f4:	6145                	addi	sp,sp,48
200155f6:	8082                	ret

200155f8 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
200155f8:	1101                	addi	sp,sp,-32
200155fa:	ce22                	sw	s0,28(sp)
200155fc:	1000                	addi	s0,sp,32
200155fe:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20015602:	800027b7          	lui	a5,0x80002
20015606:	aac78793          	addi	a5,a5,-1364 # 80001aac <metal_segment_heap_target_end+0xfffff33c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
2001560a:	853e                	mv	a0,a5
2001560c:	4472                	lw	s0,28(sp)
2001560e:	6105                	addi	sp,sp,32
20015610:	8082                	ret

20015612 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20015612:	1101                	addi	sp,sp,-32
20015614:	ce22                	sw	s0,28(sp)
20015616:	1000                	addi	s0,sp,32
20015618:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
2001561c:	479d                	li	a5,7
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:703
}
2001561e:	853e                	mv	a0,a5
20015620:	4472                	lw	s0,28(sp)
20015622:	6105                	addi	sp,sp,32
20015624:	8082                	ret

20015626 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20015626:	1101                	addi	sp,sp,-32
20015628:	ce22                	sw	s0,28(sp)
2001562a:	1000                	addi	s0,sp,32
2001562c:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20015630:	800027b7          	lui	a5,0x80002
20015634:	aac78793          	addi	a5,a5,-1364 # 80001aac <metal_segment_heap_target_end+0xfffff33c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20015638:	853e                	mv	a0,a5
2001563a:	4472                	lw	s0,28(sp)
2001563c:	6105                	addi	sp,sp,32
2001563e:	8082                	ret

20015640 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20015640:	1101                	addi	sp,sp,-32
20015642:	ce22                	sw	s0,28(sp)
20015644:	1000                	addi	s0,sp,32
20015646:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
2001564a:	478d                	li	a5,3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:721
}
2001564c:	853e                	mv	a0,a5
2001564e:	4472                	lw	s0,28(sp)
20015650:	6105                	addi	sp,sp,32
20015652:	8082                	ret

20015654 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20015654:	7179                	addi	sp,sp,-48
20015656:	d606                	sw	ra,44(sp)
20015658:	d422                	sw	s0,40(sp)
2001565a:	1800                	addi	s0,sp,48
2001565c:	fca42e23          	sw	a0,-36(s0)
20015660:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20015664:	57fd                	li	a5,-1
20015666:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001566a:	fdc42503          	lw	a0,-36(s0)
2001566e:	ff8fe0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20015672:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20015676:	fe842783          	lw	a5,-24(s0)
2001567a:	c79d                	beqz	a5,200156a8 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2001567c:	fe842783          	lw	a5,-24(s0)
20015680:	0dc7a783          	lw	a5,220(a5)
20015684:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20015688:	fe442783          	lw	a5,-28(s0)
2001568c:	cf91                	beqz	a5,200156a8 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
2001568e:	fe442783          	lw	a5,-28(s0)
20015692:	439c                	lw	a5,0(a5)
20015694:	47f8                	lw	a4,76(a5)
20015696:	fd840793          	addi	a5,s0,-40
2001569a:	863e                	mv	a2,a5
2001569c:	458d                	li	a1,3
2001569e:	fe442503          	lw	a0,-28(s0)
200156a2:	9702                	jalr	a4
200156a4:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
200156a8:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:738
}
200156ac:	853e                	mv	a0,a5
200156ae:	50b2                	lw	ra,44(sp)
200156b0:	5422                	lw	s0,40(sp)
200156b2:	6145                	addi	sp,sp,48
200156b4:	8082                	ret

200156b6 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
200156b6:	7179                	addi	sp,sp,-48
200156b8:	d606                	sw	ra,44(sp)
200156ba:	d422                	sw	s0,40(sp)
200156bc:	1800                	addi	s0,sp,48
200156be:	fca42e23          	sw	a0,-36(s0)
200156c2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
200156c6:	57fd                	li	a5,-1
200156c8:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200156cc:	fdc42503          	lw	a0,-36(s0)
200156d0:	f96fe0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
200156d4:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
200156d8:	fe842783          	lw	a5,-24(s0)
200156dc:	c79d                	beqz	a5,2001570a <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200156de:	fe842783          	lw	a5,-24(s0)
200156e2:	0dc7a783          	lw	a5,220(a5)
200156e6:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
200156ea:	fe442783          	lw	a5,-28(s0)
200156ee:	cf91                	beqz	a5,2001570a <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
200156f0:	fe442783          	lw	a5,-28(s0)
200156f4:	439c                	lw	a5,0(a5)
200156f6:	47f8                	lw	a4,76(a5)
200156f8:	fd840793          	addi	a5,s0,-40
200156fc:	863e                	mv	a2,a5
200156fe:	4589                	li	a1,2
20015700:	fe442503          	lw	a0,-28(s0)
20015704:	9702                	jalr	a4
20015706:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
2001570a:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:755
}
2001570e:	853e                	mv	a0,a5
20015710:	50b2                	lw	ra,44(sp)
20015712:	5422                	lw	s0,40(sp)
20015714:	6145                	addi	sp,sp,48
20015716:	8082                	ret

20015718 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20015718:	7179                	addi	sp,sp,-48
2001571a:	d606                	sw	ra,44(sp)
2001571c:	d422                	sw	s0,40(sp)
2001571e:	1800                	addi	s0,sp,48
20015720:	fca42e23          	sw	a0,-36(s0)
20015724:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20015728:	fe042623          	sw	zero,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001572c:	fdc42503          	lw	a0,-36(s0)
20015730:	f36fe0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
20015734:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20015738:	fe842783          	lw	a5,-24(s0)
2001573c:	c79d                	beqz	a5,2001576a <__metal_driver_cpu_get_msip+0x52>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2001573e:	fe842783          	lw	a5,-24(s0)
20015742:	0dc7a783          	lw	a5,220(a5)
20015746:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
2001574a:	fe442783          	lw	a5,-28(s0)
2001574e:	cf91                	beqz	a5,2001576a <__metal_driver_cpu_get_msip+0x52>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20015750:	fe442783          	lw	a5,-28(s0)
20015754:	439c                	lw	a5,0(a5)
20015756:	47f8                	lw	a4,76(a5)
20015758:	fd840793          	addi	a5,s0,-40
2001575c:	863e                	mv	a2,a5
2001575e:	4591                	li	a1,4
20015760:	fe442503          	lw	a0,-28(s0)
20015764:	9702                	jalr	a4
20015766:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
2001576a:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:772
}
2001576e:	853e                	mv	a0,a5
20015770:	50b2                	lw	ra,44(sp)
20015772:	5422                	lw	s0,40(sp)
20015774:	6145                	addi	sp,sp,48
20015776:	8082                	ret

20015778 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20015778:	1101                	addi	sp,sp,-32
2001577a:	ce06                	sw	ra,28(sp)
2001577c:	cc22                	sw	s0,24(sp)
2001577e:	1000                	addi	s0,sp,32
20015780:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20015784:	fec42503          	lw	a0,-20(s0)
20015788:	edefe0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
2001578c:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:777
}
2001578e:	853e                	mv	a0,a5
20015790:	40f2                	lw	ra,28(sp)
20015792:	4462                	lw	s0,24(sp)
20015794:	6105                	addi	sp,sp,32
20015796:	8082                	ret

20015798 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20015798:	7179                	addi	sp,sp,-48
2001579a:	d606                	sw	ra,44(sp)
2001579c:	d422                	sw	s0,40(sp)
2001579e:	1800                	addi	s0,sp,48
200157a0:	fca42e23          	sw	a0,-36(s0)
200157a4:	fcb42c23          	sw	a1,-40(s0)
200157a8:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200157ac:	fdc42503          	lw	a0,-36(s0)
200157b0:	eb6fe0ef          	jal	ra,20013e66 <__metal_driver_cpu_interrupt_controller>
200157b4:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
200157b8:	fec42783          	lw	a5,-20(s0)
200157bc:	cb99                	beqz	a5,200157d2 <__metal_driver_cpu_exception_register+0x3a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
200157be:	fd442603          	lw	a2,-44(s0)
200157c2:	fd842583          	lw	a1,-40(s0)
200157c6:	fec42503          	lw	a0,-20(s0)
200157ca:	8adff0ef          	jal	ra,20015076 <__metal_exception_register>
200157ce:	87aa                	mv	a5,a0
200157d0:	a011                	j	200157d4 <__metal_driver_cpu_exception_register+0x3c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
200157d2:	57fd                	li	a5,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:808
}
200157d4:	853e                	mv	a0,a5
200157d6:	50b2                	lw	ra,44(sp)
200157d8:	5422                	lw	s0,40(sp)
200157da:	6145                	addi	sp,sp,48
200157dc:	8082                	ret

200157de <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
200157de:	1101                	addi	sp,sp,-32
200157e0:	ce22                	sw	s0,28(sp)
200157e2:	1000                	addi	s0,sp,32
200157e4:	fea42623          	sw	a0,-20(s0)
200157e8:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
200157ec:	fe842783          	lw	a5,-24(s0)
200157f0:	0007d783          	lhu	a5,0(a5)
200157f4:	0037f713          	andi	a4,a5,3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
200157f8:	478d                	li	a5,3
200157fa:	00f71463          	bne	a4,a5,20015802 <__metal_driver_cpu_get_instruction_length+0x24>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
200157fe:	4791                	li	a5,4
20015800:	a011                	j	20015804 <__metal_driver_cpu_get_instruction_length+0x26>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20015802:	4789                	li	a5,2
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20015804:	853e                	mv	a0,a5
20015806:	4472                	lw	s0,28(sp)
20015808:	6105                	addi	sp,sp,32
2001580a:	8082                	ret

2001580c <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
2001580c:	7179                	addi	sp,sp,-48
2001580e:	d622                	sw	s0,44(sp)
20015810:	1800                	addi	s0,sp,48
20015812:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20015816:	341027f3          	csrr	a5,mepc
2001581a:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
2001581e:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:827
}
20015822:	853e                	mv	a0,a5
20015824:	5432                	lw	s0,44(sp)
20015826:	6145                	addi	sp,sp,48
20015828:	8082                	ret

2001582a <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
2001582a:	1101                	addi	sp,sp,-32
2001582c:	ce22                	sw	s0,28(sp)
2001582e:	1000                	addi	s0,sp,32
20015830:	fea42623          	sw	a0,-20(s0)
20015834:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20015838:	fe842783          	lw	a5,-24(s0)
2001583c:	34179073          	csrw	mepc,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20015840:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:832
}
20015842:	853e                	mv	a0,a5
20015844:	4472                	lw	s0,28(sp)
20015846:	6105                	addi	sp,sp,32
20015848:	8082                	ret

2001584a <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
2001584a:	1101                	addi	sp,sp,-32
2001584c:	ce06                	sw	ra,28(sp)
2001584e:	cc22                	sw	s0,24(sp)
20015850:	1000                	addi	s0,sp,32
20015852:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20015856:	fec42503          	lw	a0,-20(s0)
2001585a:	e36fe0ef          	jal	ra,20013e90 <__metal_driver_cpu_buserror>
2001585e:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_cpu.c:836
}
20015860:	853e                	mv	a0,a5
20015862:	40f2                	lw	ra,28(sp)
20015864:	4462                	lw	s0,24(sp)
20015866:	6105                	addi	sp,sp,32
20015868:	8082                	ret

2001586a <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
2001586a:	1101                	addi	sp,sp,-32
2001586c:	ce22                	sw	s0,28(sp)
2001586e:	1000                	addi	s0,sp,32
20015870:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20015874:	fec42703          	lw	a4,-20(s0)
20015878:	800017b7          	lui	a5,0x80001
2001587c:	46078793          	addi	a5,a5,1120 # 80001460 <metal_segment_heap_target_end+0xffffecf0>
20015880:	00f71563          	bne	a4,a5,2001588a <__metal_driver_sifive_plic0_control_base+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20015884:	0c0007b7          	lui	a5,0xc000
20015888:	a011                	j	2001588c <__metal_driver_sifive_plic0_control_base+0x22>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:350
	}
	else {
		return 0;
2001588a:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:352
	}
}
2001588c:	853e                	mv	a0,a5
2001588e:	4472                	lw	s0,28(sp)
20015890:	6105                	addi	sp,sp,32
20015892:	8082                	ret

20015894 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20015894:	1101                	addi	sp,sp,-32
20015896:	ce22                	sw	s0,28(sp)
20015898:	1000                	addi	s0,sp,32
2001589a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2001589e:	fec42703          	lw	a4,-20(s0)
200158a2:	800017b7          	lui	a5,0x80001
200158a6:	46078793          	addi	a5,a5,1120 # 80001460 <metal_segment_heap_target_end+0xffffecf0>
200158aa:	00f71563          	bne	a4,a5,200158b4 <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
200158ae:	03500793          	li	a5,53
200158b2:	a011                	j	200158b6 <__metal_driver_sifive_plic0_num_interrupts+0x22>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:370
	}
	else {
		return 0;
200158b4:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:372
	}
}
200158b6:	853e                	mv	a0,a5
200158b8:	4472                	lw	s0,28(sp)
200158ba:	6105                	addi	sp,sp,32
200158bc:	8082                	ret

200158be <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
200158be:	1101                	addi	sp,sp,-32
200158c0:	ce22                	sw	s0,28(sp)
200158c2:	1000                	addi	s0,sp,32
200158c4:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200158c8:	fec42703          	lw	a4,-20(s0)
200158cc:	800017b7          	lui	a5,0x80001
200158d0:	46078793          	addi	a5,a5,1120 # 80001460 <metal_segment_heap_target_end+0xffffecf0>
200158d4:	00f71463          	bne	a4,a5,200158dc <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
200158d8:	479d                	li	a5,7
200158da:	a011                	j	200158de <__metal_driver_sifive_plic0_max_priority+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:380
	}
	else {
		return 0;
200158dc:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:382
	}
}
200158de:	853e                	mv	a0,a5
200158e0:	4472                	lw	s0,28(sp)
200158e2:	6105                	addi	sp,sp,32
200158e4:	8082                	ret

200158e6 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200158e6:	1101                	addi	sp,sp,-32
200158e8:	ce22                	sw	s0,28(sp)
200158ea:	1000                	addi	s0,sp,32
200158ec:	fea42623          	sw	a0,-20(s0)
200158f0:	feb42423          	sw	a1,-24(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:386
	if (idx == 0) {
200158f4:	fe842783          	lw	a5,-24(s0)
200158f8:	e791                	bnez	a5,20015904 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200158fa:	800017b7          	lui	a5,0x80001
200158fe:	09078793          	addi	a5,a5,144 # 80001090 <metal_segment_heap_target_end+0xffffe920>
20015902:	a011                	j	20015906 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:390
	}
	else {
		return NULL;
20015904:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:392
	}
}
20015906:	853e                	mv	a0,a5
20015908:	4472                	lw	s0,28(sp)
2001590a:	6105                	addi	sp,sp,32
2001590c:	8082                	ret

2001590e <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2001590e:	1101                	addi	sp,sp,-32
20015910:	ce22                	sw	s0,28(sp)
20015912:	1000                	addi	s0,sp,32
20015914:	fea42623          	sw	a0,-20(s0)
20015918:	feb42423          	sw	a1,-24(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:396
	if (idx == 0) {
2001591c:	fe842783          	lw	a5,-24(s0)
20015920:	e399                	bnez	a5,20015926 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:397
		return 11;
20015922:	47ad                	li	a5,11
20015924:	a011                	j	20015928 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:400
	}
	else {
		return 0;
20015926:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:402
	}
}
20015928:	853e                	mv	a0,a5
2001592a:	4472                	lw	s0,28(sp)
2001592c:	6105                	addi	sp,sp,32
2001592e:	8082                	ret

20015930 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20015930:	1101                	addi	sp,sp,-32
20015932:	ce22                	sw	s0,28(sp)
20015934:	1000                	addi	s0,sp,32
20015936:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:406
	if (hartid == 0) {
2001593a:	fec42783          	lw	a5,-20(s0)
2001593e:	e399                	bnez	a5,20015944 <__metal_driver_sifive_plic0_context_ids+0x14>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:407
		return 0;
20015940:	4781                	li	a5,0
20015942:	a011                	j	20015946 <__metal_driver_sifive_plic0_context_ids+0x16>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:410
	}
	else {
		return -1;
20015944:	57fd                	li	a5,-1
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:412
	}
}
20015946:	853e                	mv	a0,a5
20015948:	4472                	lw	s0,28(sp)
2001594a:	6105                	addi	sp,sp,32
2001594c:	8082                	ret

2001594e <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
2001594e:	7179                	addi	sp,sp,-48
20015950:	d606                	sw	ra,44(sp)
20015952:	d422                	sw	s0,40(sp)
20015954:	1800                	addi	s0,sp,48
20015956:	fca42e23          	sw	a0,-36(s0)
2001595a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2001595e:	fdc42503          	lw	a0,-36(s0)
20015962:	3721                	jal	2001586a <__metal_driver_sifive_plic0_control_base>
20015964:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20015968:	fd842783          	lw	a5,-40(s0)
2001596c:	00c79713          	slli	a4,a5,0xc
20015970:	fec42783          	lw	a5,-20(s0)
20015974:	973e                	add	a4,a4,a5
20015976:	002007b7          	lui	a5,0x200
2001597a:	0791                	addi	a5,a5,4
2001597c:	97ba                	add	a5,a5,a4
2001597e:	439c                	lw	a5,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20015980:	853e                	mv	a0,a5
20015982:	50b2                	lw	ra,44(sp)
20015984:	5422                	lw	s0,40(sp)
20015986:	6145                	addi	sp,sp,48
20015988:	8082                	ret

2001598a <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
2001598a:	7179                	addi	sp,sp,-48
2001598c:	d606                	sw	ra,44(sp)
2001598e:	d422                	sw	s0,40(sp)
20015990:	1800                	addi	s0,sp,48
20015992:	fca42e23          	sw	a0,-36(s0)
20015996:	fcb42c23          	sw	a1,-40(s0)
2001599a:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2001599e:	fdc42503          	lw	a0,-36(s0)
200159a2:	35e1                	jal	2001586a <__metal_driver_sifive_plic0_control_base>
200159a4:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
200159a8:	fd842783          	lw	a5,-40(s0)
200159ac:	00c79713          	slli	a4,a5,0xc
200159b0:	fec42783          	lw	a5,-20(s0)
200159b4:	973e                	add	a4,a4,a5
200159b6:	002007b7          	lui	a5,0x200
200159ba:	0791                	addi	a5,a5,4
200159bc:	97ba                	add	a5,a5,a4
200159be:	873e                	mv	a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
200159c0:	fd442783          	lw	a5,-44(s0)
200159c4:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:35
}
200159c6:	0001                	nop
200159c8:	50b2                	lw	ra,44(sp)
200159ca:	5422                	lw	s0,40(sp)
200159cc:	6145                	addi	sp,sp,48
200159ce:	8082                	ret

200159d0 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
200159d0:	7179                	addi	sp,sp,-48
200159d2:	d606                	sw	ra,44(sp)
200159d4:	d422                	sw	s0,40(sp)
200159d6:	1800                	addi	s0,sp,48
200159d8:	fca42e23          	sw	a0,-36(s0)
200159dc:	fcb42c23          	sw	a1,-40(s0)
200159e0:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
200159e4:	fdc42503          	lw	a0,-36(s0)
200159e8:	3549                	jal	2001586a <__metal_driver_sifive_plic0_control_base>
200159ea:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
200159ee:	fd842783          	lw	a5,-40(s0)
200159f2:	00c79713          	slli	a4,a5,0xc
200159f6:	fec42783          	lw	a5,-20(s0)
200159fa:	973e                	add	a4,a4,a5
200159fc:	002007b7          	lui	a5,0x200
20015a00:	97ba                	add	a5,a5,a4
20015a02:	873e                	mv	a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20015a04:	fd442783          	lw	a5,-44(s0)
20015a08:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20015a0a:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:46
}
20015a0c:	853e                	mv	a0,a5
20015a0e:	50b2                	lw	ra,44(sp)
20015a10:	5422                	lw	s0,40(sp)
20015a12:	6145                	addi	sp,sp,48
20015a14:	8082                	ret

20015a16 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20015a16:	7179                	addi	sp,sp,-48
20015a18:	d606                	sw	ra,44(sp)
20015a1a:	d422                	sw	s0,40(sp)
20015a1c:	1800                	addi	s0,sp,48
20015a1e:	fca42e23          	sw	a0,-36(s0)
20015a22:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20015a26:	fdc42503          	lw	a0,-36(s0)
20015a2a:	3581                	jal	2001586a <__metal_driver_sifive_plic0_control_base>
20015a2c:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20015a30:	fd842783          	lw	a5,-40(s0)
20015a34:	00c79713          	slli	a4,a5,0xc
20015a38:	fec42783          	lw	a5,-20(s0)
20015a3c:	973e                	add	a4,a4,a5
20015a3e:	002007b7          	lui	a5,0x200
20015a42:	97ba                	add	a5,a5,a4
20015a44:	439c                	lw	a5,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20015a46:	853e                	mv	a0,a5
20015a48:	50b2                	lw	ra,44(sp)
20015a4a:	5422                	lw	s0,40(sp)
20015a4c:	6145                	addi	sp,sp,48
20015a4e:	8082                	ret

20015a50 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20015a50:	7179                	addi	sp,sp,-48
20015a52:	d606                	sw	ra,44(sp)
20015a54:	d422                	sw	s0,40(sp)
20015a56:	1800                	addi	s0,sp,48
20015a58:	fca42e23          	sw	a0,-36(s0)
20015a5c:	fcb42c23          	sw	a1,-40(s0)
20015a60:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20015a64:	fdc42503          	lw	a0,-36(s0)
20015a68:	3509                	jal	2001586a <__metal_driver_sifive_plic0_control_base>
20015a6a:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20015a6e:	fdc42503          	lw	a0,-36(s0)
20015a72:	35b1                	jal	200158be <__metal_driver_sifive_plic0_max_priority>
20015a74:	87aa                	mv	a5,a0
20015a76:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20015a7a:	fe842783          	lw	a5,-24(s0)
20015a7e:	c785                	beqz	a5,20015aa6 <__metal_driver_riscv_plic0_set_priority+0x56>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20015a80:	fd442703          	lw	a4,-44(s0)
20015a84:	fe842783          	lw	a5,-24(s0)
20015a88:	00f77f63          	bgeu	a4,a5,20015aa6 <__metal_driver_riscv_plic0_set_priority+0x56>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20015a8c:	fd842783          	lw	a5,-40(s0)
20015a90:	078a                	slli	a5,a5,0x2
20015a92:	873e                	mv	a4,a5
20015a94:	fec42783          	lw	a5,-20(s0)
20015a98:	97ba                	add	a5,a5,a4
20015a9a:	873e                	mv	a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20015a9c:	fd442783          	lw	a5,-44(s0)
20015aa0:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20015aa2:	4781                	li	a5,0
20015aa4:	a011                	j	20015aa8 <__metal_driver_riscv_plic0_set_priority+0x58>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20015aa6:	57fd                	li	a5,-1
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:72
}
20015aa8:	853e                	mv	a0,a5
20015aaa:	50b2                	lw	ra,44(sp)
20015aac:	5422                	lw	s0,40(sp)
20015aae:	6145                	addi	sp,sp,48
20015ab0:	8082                	ret

20015ab2 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20015ab2:	7179                	addi	sp,sp,-48
20015ab4:	d606                	sw	ra,44(sp)
20015ab6:	d422                	sw	s0,40(sp)
20015ab8:	1800                	addi	s0,sp,48
20015aba:	fca42e23          	sw	a0,-36(s0)
20015abe:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20015ac2:	fdc42503          	lw	a0,-36(s0)
20015ac6:	3355                	jal	2001586a <__metal_driver_sifive_plic0_control_base>
20015ac8:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20015acc:	fd842783          	lw	a5,-40(s0)
20015ad0:	078a                	slli	a5,a5,0x2
20015ad2:	873e                	mv	a4,a5
20015ad4:	fec42783          	lw	a5,-20(s0)
20015ad8:	97ba                	add	a5,a5,a4
20015ada:	439c                	lw	a5,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20015adc:	853e                	mv	a0,a5
20015ade:	50b2                	lw	ra,44(sp)
20015ae0:	5422                	lw	s0,40(sp)
20015ae2:	6145                	addi	sp,sp,48
20015ae4:	8082                	ret

20015ae6 <__metal_plic0_enable>:
__metal_plic0_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20015ae6:	7179                	addi	sp,sp,-48
20015ae8:	d606                	sw	ra,44(sp)
20015aea:	d422                	sw	s0,40(sp)
20015aec:	1800                	addi	s0,sp,48
20015aee:	fca42e23          	sw	a0,-36(s0)
20015af2:	fcb42c23          	sw	a1,-40(s0)
20015af6:	fcc42a23          	sw	a2,-44(s0)
20015afa:	fcd42823          	sw	a3,-48(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20015afe:	fdc42503          	lw	a0,-36(s0)
20015b02:	33a5                	jal	2001586a <__metal_driver_sifive_plic0_control_base>
20015b04:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20015b08:	fd842783          	lw	a5,-40(s0)
20015b0c:	00779713          	slli	a4,a5,0x7
20015b10:	fec42783          	lw	a5,-20(s0)
20015b14:	97ba                	add	a5,a5,a4
20015b16:	fd442703          	lw	a4,-44(s0)
20015b1a:	8715                	srai	a4,a4,0x5
20015b1c:	070a                	slli	a4,a4,0x2
20015b1e:	973e                	add	a4,a4,a5
20015b20:	6789                	lui	a5,0x2
20015b22:	97ba                	add	a5,a5,a4
20015b24:	439c                	lw	a5,0(a5)
20015b26:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20015b2a:	fd042783          	lw	a5,-48(s0)
20015b2e:	cf81                	beqz	a5,20015b46 <__metal_plic0_enable+0x60>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20015b30:	fd442783          	lw	a5,-44(s0)
20015b34:	8bfd                	andi	a5,a5,31
20015b36:	4705                	li	a4,1
20015b38:	00f717b3          	sll	a5,a4,a5
20015b3c:	873e                	mv	a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20015b3e:	fe842783          	lw	a5,-24(s0)
20015b42:	8fd9                	or	a5,a5,a4
20015b44:	a829                	j	20015b5e <__metal_plic0_enable+0x78>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20015b46:	fd442783          	lw	a5,-44(s0)
20015b4a:	8bfd                	andi	a5,a5,31
20015b4c:	4705                	li	a4,1
20015b4e:	00f717b3          	sll	a5,a4,a5
20015b52:	fff7c793          	not	a5,a5
20015b56:	873e                	mv	a4,a5
20015b58:	fe842783          	lw	a5,-24(s0)
20015b5c:	8ff9                	and	a5,a5,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20015b5e:	fd842703          	lw	a4,-40(s0)
20015b62:	00771693          	slli	a3,a4,0x7
20015b66:	fec42703          	lw	a4,-20(s0)
20015b6a:	9736                	add	a4,a4,a3
20015b6c:	fd442683          	lw	a3,-44(s0)
20015b70:	8695                	srai	a3,a3,0x5
20015b72:	068a                	slli	a3,a3,0x2
20015b74:	96ba                	add	a3,a3,a4
20015b76:	6709                	lui	a4,0x2
20015b78:	9736                	add	a4,a4,a3
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20015b7a:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20015b7c:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:103
}
20015b7e:	853e                	mv	a0,a5
20015b80:	50b2                	lw	ra,44(sp)
20015b82:	5422                	lw	s0,40(sp)
20015b84:	6145                	addi	sp,sp,48
20015b86:	8082                	ret

20015b88 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20015b88:	1101                	addi	sp,sp,-32
20015b8a:	ce06                	sw	ra,28(sp)
20015b8c:	cc22                	sw	s0,24(sp)
20015b8e:	1000                	addi	s0,sp,32
20015b90:	fea42623          	sw	a0,-20(s0)
20015b94:	feb42423          	sw	a1,-24(s0)
20015b98:	12c00513          	li	a0,300
20015b9c:	244020ef          	jal	ra,20017de0 <metal_shutdown>

20015ba0 <__metal_plic0_handler>:
__metal_plic0_handler():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20015ba0:	7179                	addi	sp,sp,-48
20015ba2:	d606                	sw	ra,44(sp)
20015ba4:	d422                	sw	s0,40(sp)
20015ba6:	1800                	addi	s0,sp,48
20015ba8:	fca42e23          	sw	a0,-36(s0)
20015bac:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20015bb0:	fd842783          	lw	a5,-40(s0)
20015bb4:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20015bb8:	b2cfe0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20015bbc:	87aa                	mv	a5,a0
20015bbe:	853e                	mv	a0,a5
20015bc0:	3b85                	jal	20015930 <__metal_driver_sifive_plic0_context_ids>
20015bc2:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20015bc6:	fe842583          	lw	a1,-24(s0)
20015bca:	fec42503          	lw	a0,-20(s0)
20015bce:	3341                	jal	2001594e <__metal_plic0_claim_interrupt>
20015bd0:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20015bd4:	fec42503          	lw	a0,-20(s0)
20015bd8:	3975                	jal	20015894 <__metal_driver_sifive_plic0_num_interrupts>
20015bda:	87aa                	mv	a5,a0
20015bdc:	fef42023          	sw	a5,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20015be0:	fe442703          	lw	a4,-28(s0)
20015be4:	fe042783          	lw	a5,-32(s0)
20015be8:	04f77263          	bgeu	a4,a5,20015c2c <__metal_plic0_handler+0x8c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20015bec:	fec42703          	lw	a4,-20(s0)
20015bf0:	fe442783          	lw	a5,-28(s0)
20015bf4:	078a                	slli	a5,a5,0x2
20015bf6:	97ba                	add	a5,a5,a4
20015bf8:	479c                	lw	a5,8(a5)
20015bfa:	cb8d                	beqz	a5,20015c2c <__metal_plic0_handler+0x8c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20015bfc:	fec42703          	lw	a4,-20(s0)
20015c00:	fe442783          	lw	a5,-28(s0)
20015c04:	078a                	slli	a5,a5,0x2
20015c06:	97ba                	add	a5,a5,a4
20015c08:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20015c0c:	fe442603          	lw	a2,-28(s0)
20015c10:	fec42683          	lw	a3,-20(s0)
20015c14:	fe442703          	lw	a4,-28(s0)
20015c18:	87ba                	mv	a5,a4
20015c1a:	0786                	slli	a5,a5,0x1
20015c1c:	97ba                	add	a5,a5,a4
20015c1e:	078e                	slli	a5,a5,0x3
20015c20:	97b6                	add	a5,a5,a3
20015c22:	0f07a783          	lw	a5,240(a5)
20015c26:	85be                	mv	a1,a5
20015c28:	8532                	mv	a0,a2
20015c2a:	9802                	jalr	a6
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20015c2c:	fe442603          	lw	a2,-28(s0)
20015c30:	fe842583          	lw	a1,-24(s0)
20015c34:	fec42503          	lw	a0,-20(s0)
20015c38:	3b89                	jal	2001598a <__metal_plic0_complete_interrupt>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:121
}
20015c3a:	0001                	nop
20015c3c:	50b2                	lw	ra,44(sp)
20015c3e:	5422                	lw	s0,40(sp)
20015c40:	6145                	addi	sp,sp,48
20015c42:	8082                	ret

20015c44 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20015c44:	7139                	addi	sp,sp,-64
20015c46:	de06                	sw	ra,60(sp)
20015c48:	dc22                	sw	s0,56(sp)
20015c4a:	0080                	addi	s0,sp,64
20015c4c:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015c50:	fcc42783          	lw	a5,-52(s0)
20015c54:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20015c58:	fe442783          	lw	a5,-28(s0)
20015c5c:	43dc                	lw	a5,4(a5)
20015c5e:	12079763          	bnez	a5,20015d8c <__metal_driver_riscv_plic0_init+0x148>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20015c62:	fe042623          	sw	zero,-20(s0)
20015c66:	aa19                	j	20015d7c <__metal_driver_riscv_plic0_init+0x138>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20015c68:	fcc42503          	lw	a0,-52(s0)
20015c6c:	c29ff0ef          	jal	ra,20015894 <__metal_driver_sifive_plic0_num_interrupts>
20015c70:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20015c74:	fec42583          	lw	a1,-20(s0)
20015c78:	fcc42503          	lw	a0,-52(s0)
20015c7c:	31ad                	jal	200158e6 <__metal_driver_sifive_plic0_interrupt_parents>
20015c7e:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20015c82:	fec42583          	lw	a1,-20(s0)
20015c86:	fcc42503          	lw	a0,-52(s0)
20015c8a:	3151                	jal	2001590e <__metal_driver_sifive_plic0_interrupt_lines>
20015c8c:	fca42c23          	sw	a0,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20015c90:	fdc42783          	lw	a5,-36(s0)
20015c94:	439c                	lw	a5,0(a5)
20015c96:	439c                	lw	a5,0(a5)
20015c98:	fdc42503          	lw	a0,-36(s0)
20015c9c:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20015c9e:	fe042423          	sw	zero,-24(s0)
20015ca2:	a885                	j	20015d12 <__metal_driver_riscv_plic0_init+0xce>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20015ca4:	4681                	li	a3,0
20015ca6:	fe842603          	lw	a2,-24(s0)
20015caa:	fec42583          	lw	a1,-20(s0)
20015cae:	fe442503          	lw	a0,-28(s0)
20015cb2:	3d15                	jal	20015ae6 <__metal_plic0_enable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20015cb4:	fe842703          	lw	a4,-24(s0)
20015cb8:	fe042783          	lw	a5,-32(s0)
20015cbc:	04f75663          	bge	a4,a5,20015d08 <__metal_driver_riscv_plic0_init+0xc4>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20015cc0:	4601                	li	a2,0
20015cc2:	fe842583          	lw	a1,-24(s0)
20015cc6:	fcc42503          	lw	a0,-52(s0)
20015cca:	3359                	jal	20015a50 <__metal_driver_riscv_plic0_set_priority>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20015ccc:	fe442703          	lw	a4,-28(s0)
20015cd0:	fe842783          	lw	a5,-24(s0)
20015cd4:	078a                	slli	a5,a5,0x2
20015cd6:	97ba                	add	a5,a5,a4
20015cd8:	0007a423          	sw	zero,8(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20015cdc:	fe442683          	lw	a3,-28(s0)
20015ce0:	fe842703          	lw	a4,-24(s0)
20015ce4:	87ba                	mv	a5,a4
20015ce6:	0786                	slli	a5,a5,0x1
20015ce8:	97ba                	add	a5,a5,a4
20015cea:	078e                	slli	a5,a5,0x3
20015cec:	97b6                	add	a5,a5,a3
20015cee:	0e07a623          	sw	zero,236(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20015cf2:	fe442683          	lw	a3,-28(s0)
20015cf6:	fe842703          	lw	a4,-24(s0)
20015cfa:	87ba                	mv	a5,a4
20015cfc:	0786                	slli	a5,a5,0x1
20015cfe:	97ba                	add	a5,a5,a4
20015d00:	078e                	slli	a5,a5,0x3
20015d02:	97b6                	add	a5,a5,a3
20015d04:	0e07a823          	sw	zero,240(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20015d08:	fe842783          	lw	a5,-24(s0)
20015d0c:	0785                	addi	a5,a5,1
20015d0e:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20015d12:	fe842703          	lw	a4,-24(s0)
20015d16:	3ff00793          	li	a5,1023
20015d1a:	f8e7d5e3          	bge	a5,a4,20015ca4 <__metal_driver_riscv_plic0_init+0x60>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20015d1e:	4601                	li	a2,0
20015d20:	fec42583          	lw	a1,-20(s0)
20015d24:	fcc42503          	lw	a0,-52(s0)
20015d28:	3165                	jal	200159d0 <__metal_plic0_set_threshold>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20015d2a:	fdc42783          	lw	a5,-36(s0)
20015d2e:	439c                	lw	a5,0(a5)
20015d30:	4fdc                	lw	a5,28(a5)
20015d32:	fe442683          	lw	a3,-28(s0)
20015d36:	4601                	li	a2,0
20015d38:	fd842583          	lw	a1,-40(s0)
20015d3c:	fdc42503          	lw	a0,-36(s0)
20015d40:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20015d42:	fdc42783          	lw	a5,-36(s0)
20015d46:	439c                	lw	a5,0(a5)
20015d48:	4fd8                	lw	a4,28(a5)
20015d4a:	fe442683          	lw	a3,-28(s0)
20015d4e:	200167b7          	lui	a5,0x20016
20015d52:	ba078613          	addi	a2,a5,-1120 # 20015ba0 <__metal_plic0_handler>
20015d56:	fd842583          	lw	a1,-40(s0)
20015d5a:	fdc42503          	lw	a0,-36(s0)
20015d5e:	9702                	jalr	a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20015d60:	fdc42783          	lw	a5,-36(s0)
20015d64:	439c                	lw	a5,0(a5)
20015d66:	53dc                	lw	a5,36(a5)
20015d68:	fd842583          	lw	a1,-40(s0)
20015d6c:	fdc42503          	lw	a0,-36(s0)
20015d70:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20015d72:	fec42783          	lw	a5,-20(s0)
20015d76:	0785                	addi	a5,a5,1
20015d78:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20015d7c:	fec42783          	lw	a5,-20(s0)
20015d80:	eef054e3          	blez	a5,20015c68 <__metal_driver_riscv_plic0_init+0x24>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20015d84:	fe442783          	lw	a5,-28(s0)
20015d88:	4705                	li	a4,1
20015d8a:	c3d8                	sw	a4,4(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20015d8c:	0001                	nop
20015d8e:	50f2                	lw	ra,60(sp)
20015d90:	5462                	lw	s0,56(sp)
20015d92:	6121                	addi	sp,sp,64
20015d94:	8082                	ret

20015d96 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20015d96:	7179                	addi	sp,sp,-48
20015d98:	d606                	sw	ra,44(sp)
20015d9a:	d422                	sw	s0,40(sp)
20015d9c:	1800                	addi	s0,sp,48
20015d9e:	fca42e23          	sw	a0,-36(s0)
20015da2:	fcb42c23          	sw	a1,-40(s0)
20015da6:	fcc42a23          	sw	a2,-44(s0)
20015daa:	fcd42823          	sw	a3,-48(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015dae:	fdc42783          	lw	a5,-36(s0)
20015db2:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015db6:	fdc42503          	lw	a0,-36(s0)
20015dba:	adbff0ef          	jal	ra,20015894 <__metal_driver_sifive_plic0_num_interrupts>
20015dbe:	872a                	mv	a4,a0
20015dc0:	fd842783          	lw	a5,-40(s0)
20015dc4:	00e7c463          	blt	a5,a4,20015dcc <__metal_driver_riscv_plic0_register+0x36>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20015dc8:	57fd                	li	a5,-1
20015dca:	a051                	j	20015e4e <__metal_driver_riscv_plic0_register+0xb8>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20015dcc:	fd442783          	lw	a5,-44(s0)
20015dd0:	cf9d                	beqz	a5,20015e0e <__metal_driver_riscv_plic0_register+0x78>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20015dd2:	4609                	li	a2,2
20015dd4:	fd842583          	lw	a1,-40(s0)
20015dd8:	fdc42503          	lw	a0,-36(s0)
20015ddc:	c75ff0ef          	jal	ra,20015a50 <__metal_driver_riscv_plic0_set_priority>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20015de0:	fec42703          	lw	a4,-20(s0)
20015de4:	fd842783          	lw	a5,-40(s0)
20015de8:	078a                	slli	a5,a5,0x2
20015dea:	97ba                	add	a5,a5,a4
20015dec:	fd442703          	lw	a4,-44(s0)
20015df0:	c798                	sw	a4,8(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20015df2:	fec42683          	lw	a3,-20(s0)
20015df6:	fd842703          	lw	a4,-40(s0)
20015dfa:	87ba                	mv	a5,a4
20015dfc:	0786                	slli	a5,a5,0x1
20015dfe:	97ba                	add	a5,a5,a4
20015e00:	078e                	slli	a5,a5,0x3
20015e02:	97b6                	add	a5,a5,a3
20015e04:	fd042703          	lw	a4,-48(s0)
20015e08:	0ee7a823          	sw	a4,240(a5)
20015e0c:	a081                	j	20015e4c <__metal_driver_riscv_plic0_register+0xb6>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20015e0e:	4605                	li	a2,1
20015e10:	fd842583          	lw	a1,-40(s0)
20015e14:	fdc42503          	lw	a0,-36(s0)
20015e18:	c39ff0ef          	jal	ra,20015a50 <__metal_driver_riscv_plic0_set_priority>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20015e1c:	fec42703          	lw	a4,-20(s0)
20015e20:	fd842783          	lw	a5,-40(s0)
20015e24:	078a                	slli	a5,a5,0x2
20015e26:	97ba                	add	a5,a5,a4
20015e28:	20016737          	lui	a4,0x20016
20015e2c:	b8870713          	addi	a4,a4,-1144 # 20015b88 <__metal_plic0_default_handler>
20015e30:	c798                	sw	a4,8(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20015e32:	fec42683          	lw	a3,-20(s0)
20015e36:	fd842703          	lw	a4,-40(s0)
20015e3a:	87ba                	mv	a5,a4
20015e3c:	0786                	slli	a5,a5,0x1
20015e3e:	97ba                	add	a5,a5,a4
20015e40:	078e                	slli	a5,a5,0x3
20015e42:	97b6                	add	a5,a5,a3
20015e44:	fd042703          	lw	a4,-48(s0)
20015e48:	0ee7a623          	sw	a4,236(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20015e4c:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:185
}
20015e4e:	853e                	mv	a0,a5
20015e50:	50b2                	lw	ra,44(sp)
20015e52:	5422                	lw	s0,40(sp)
20015e54:	6145                	addi	sp,sp,48
20015e56:	8082                	ret

20015e58 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20015e58:	7179                	addi	sp,sp,-48
20015e5a:	d606                	sw	ra,44(sp)
20015e5c:	d422                	sw	s0,40(sp)
20015e5e:	1800                	addi	s0,sp,48
20015e60:	fca42e23          	sw	a0,-36(s0)
20015e64:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015e68:	fdc42783          	lw	a5,-36(s0)
20015e6c:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015e70:	fdc42503          	lw	a0,-36(s0)
20015e74:	a21ff0ef          	jal	ra,20015894 <__metal_driver_sifive_plic0_num_interrupts>
20015e78:	872a                	mv	a4,a0
20015e7a:	fd842783          	lw	a5,-40(s0)
20015e7e:	00e7c463          	blt	a5,a4,20015e86 <__metal_driver_riscv_plic0_enable+0x2e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20015e82:	57fd                	li	a5,-1
20015e84:	a829                	j	20015e9e <__metal_driver_riscv_plic0_enable+0x46>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20015e86:	85efe0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20015e8a:	87aa                	mv	a5,a0
20015e8c:	4685                	li	a3,1
20015e8e:	fd842603          	lw	a2,-40(s0)
20015e92:	85be                	mv	a1,a5
20015e94:	fec42503          	lw	a0,-20(s0)
20015e98:	c4fff0ef          	jal	ra,20015ae6 <__metal_plic0_enable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20015e9c:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:197
}
20015e9e:	853e                	mv	a0,a5
20015ea0:	50b2                	lw	ra,44(sp)
20015ea2:	5422                	lw	s0,40(sp)
20015ea4:	6145                	addi	sp,sp,48
20015ea6:	8082                	ret

20015ea8 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20015ea8:	7179                	addi	sp,sp,-48
20015eaa:	d606                	sw	ra,44(sp)
20015eac:	d422                	sw	s0,40(sp)
20015eae:	1800                	addi	s0,sp,48
20015eb0:	fca42e23          	sw	a0,-36(s0)
20015eb4:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015eb8:	fdc42783          	lw	a5,-36(s0)
20015ebc:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015ec0:	fdc42503          	lw	a0,-36(s0)
20015ec4:	9d1ff0ef          	jal	ra,20015894 <__metal_driver_sifive_plic0_num_interrupts>
20015ec8:	872a                	mv	a4,a0
20015eca:	fd842783          	lw	a5,-40(s0)
20015ece:	00e7c463          	blt	a5,a4,20015ed6 <__metal_driver_riscv_plic0_disable+0x2e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20015ed2:	57fd                	li	a5,-1
20015ed4:	a829                	j	20015eee <__metal_driver_riscv_plic0_disable+0x46>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20015ed6:	80efe0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20015eda:	87aa                	mv	a5,a0
20015edc:	4681                	li	a3,0
20015ede:	fd842603          	lw	a2,-40(s0)
20015ee2:	85be                	mv	a1,a5
20015ee4:	fec42503          	lw	a0,-20(s0)
20015ee8:	bffff0ef          	jal	ra,20015ae6 <__metal_plic0_enable>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20015eec:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:208
}
20015eee:	853e                	mv	a0,a5
20015ef0:	50b2                	lw	ra,44(sp)
20015ef2:	5422                	lw	s0,40(sp)
20015ef4:	6145                	addi	sp,sp,48
20015ef6:	8082                	ret

20015ef8 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20015ef8:	1101                	addi	sp,sp,-32
20015efa:	ce06                	sw	ra,28(sp)
20015efc:	cc22                	sw	s0,24(sp)
20015efe:	1000                	addi	s0,sp,32
20015f00:	fea42623          	sw	a0,-20(s0)
20015f04:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20015f08:	fddfd0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20015f0c:	87aa                	mv	a5,a0
20015f0e:	fe842603          	lw	a2,-24(s0)
20015f12:	85be                	mv	a1,a5
20015f14:	fec42503          	lw	a0,-20(s0)
20015f18:	ab9ff0ef          	jal	ra,200159d0 <__metal_plic0_set_threshold>
20015f1c:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20015f1e:	853e                	mv	a0,a5
20015f20:	40f2                	lw	ra,28(sp)
20015f22:	4462                	lw	s0,24(sp)
20015f24:	6105                	addi	sp,sp,32
20015f26:	8082                	ret

20015f28 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20015f28:	1101                	addi	sp,sp,-32
20015f2a:	ce06                	sw	ra,28(sp)
20015f2c:	cc22                	sw	s0,24(sp)
20015f2e:	1000                	addi	s0,sp,32
20015f30:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20015f34:	fb1fd0ef          	jal	ra,20013ee4 <__metal_myhart_id>
20015f38:	87aa                	mv	a5,a0
20015f3a:	85be                	mv	a1,a5
20015f3c:	fec42503          	lw	a0,-20(s0)
20015f40:	ad7ff0ef          	jal	ra,20015a16 <__metal_plic0_get_threshold>
20015f44:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:219
}
20015f46:	853e                	mv	a0,a5
20015f48:	40f2                	lw	ra,28(sp)
20015f4a:	4462                	lw	s0,24(sp)
20015f4c:	6105                	addi	sp,sp,32
20015f4e:	8082                	ret

20015f50 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20015f50:	7179                	addi	sp,sp,-48
20015f52:	d606                	sw	ra,44(sp)
20015f54:	d422                	sw	s0,40(sp)
20015f56:	1800                	addi	s0,sp,48
20015f58:	fca42e23          	sw	a0,-36(s0)
20015f5c:	fcb42c23          	sw	a1,-40(s0)
20015f60:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20015f64:	fe042223          	sw	zero,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015f68:	fdc42783          	lw	a5,-36(s0)
20015f6c:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015f70:	fdc42503          	lw	a0,-36(s0)
20015f74:	921ff0ef          	jal	ra,20015894 <__metal_driver_sifive_plic0_num_interrupts>
20015f78:	872a                	mv	a4,a0
20015f7a:	fd442783          	lw	a5,-44(s0)
20015f7e:	00e7c863          	blt	a5,a4,20015f8e <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20015f82:	57fd                	li	a5,-1
20015f84:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20015f88:	fe442783          	lw	a5,-28(s0)
20015f8c:	a899                	j	20015fe2 <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20015f8e:	fe042623          	sw	zero,-20(s0)
20015f92:	a099                	j	20015fd8 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20015f94:	fec42783          	lw	a5,-20(s0)
20015f98:	c795                	beqz	a5,20015fc4 <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20015f9a:	4685                	li	a3,1
20015f9c:	fd442603          	lw	a2,-44(s0)
20015fa0:	fec42583          	lw	a1,-20(s0)
20015fa4:	fe842503          	lw	a0,-24(s0)
20015fa8:	b3fff0ef          	jal	ra,20015ae6 <__metal_plic0_enable>
20015fac:	87aa                	mv	a5,a0
20015fae:	0017f713          	andi	a4,a5,1
20015fb2:	fec42783          	lw	a5,-20(s0)
20015fb6:	00f71733          	sll	a4,a4,a5
20015fba:	fe442783          	lw	a5,-28(s0)
20015fbe:	8fd9                	or	a5,a5,a4
20015fc0:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20015fc4:	fec42783          	lw	a5,-20(s0)
20015fc8:	0785                	addi	a5,a5,1
20015fca:	fef42623          	sw	a5,-20(s0)
20015fce:	fd842783          	lw	a5,-40(s0)
20015fd2:	8385                	srli	a5,a5,0x1
20015fd4:	fcf42c23          	sw	a5,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20015fd8:	fd842783          	lw	a5,-40(s0)
20015fdc:	ffc5                	bnez	a5,20015f94 <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20015fde:	fe442783          	lw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20015fe2:	853e                	mv	a0,a5
20015fe4:	50b2                	lw	ra,44(sp)
20015fe6:	5422                	lw	s0,40(sp)
20015fe8:	6145                	addi	sp,sp,48
20015fea:	8082                	ret

20015fec <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20015fec:	7179                	addi	sp,sp,-48
20015fee:	d606                	sw	ra,44(sp)
20015ff0:	d422                	sw	s0,40(sp)
20015ff2:	1800                	addi	s0,sp,48
20015ff4:	fca42e23          	sw	a0,-36(s0)
20015ff8:	fcb42c23          	sw	a1,-40(s0)
20015ffc:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20016000:	fe042223          	sw	zero,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20016004:	fdc42783          	lw	a5,-36(s0)
20016008:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2001600c:	fdc42503          	lw	a0,-36(s0)
20016010:	885ff0ef          	jal	ra,20015894 <__metal_driver_sifive_plic0_num_interrupts>
20016014:	872a                	mv	a4,a0
20016016:	fd442783          	lw	a5,-44(s0)
2001601a:	00e7c863          	blt	a5,a4,2001602a <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
2001601e:	57fd                	li	a5,-1
20016020:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20016024:	fe442783          	lw	a5,-28(s0)
20016028:	a899                	j	2001607e <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
2001602a:	fe042623          	sw	zero,-20(s0)
2001602e:	a099                	j	20016074 <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20016030:	fec42783          	lw	a5,-20(s0)
20016034:	c795                	beqz	a5,20016060 <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20016036:	4681                	li	a3,0
20016038:	fd442603          	lw	a2,-44(s0)
2001603c:	fec42583          	lw	a1,-20(s0)
20016040:	fe842503          	lw	a0,-24(s0)
20016044:	aa3ff0ef          	jal	ra,20015ae6 <__metal_plic0_enable>
20016048:	87aa                	mv	a5,a0
2001604a:	0017f713          	andi	a4,a5,1
2001604e:	fec42783          	lw	a5,-20(s0)
20016052:	00f71733          	sll	a4,a4,a5
20016056:	fe442783          	lw	a5,-28(s0)
2001605a:	8fd9                	or	a5,a5,a4
2001605c:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20016060:	fec42783          	lw	a5,-20(s0)
20016064:	0785                	addi	a5,a5,1
20016066:	fef42623          	sw	a5,-20(s0)
2001606a:	fd842783          	lw	a5,-40(s0)
2001606e:	8385                	srli	a5,a5,0x1
20016070:	fcf42c23          	sw	a5,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20016074:	fd842783          	lw	a5,-40(s0)
20016078:	ffc5                	bnez	a5,20016030 <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
2001607a:	fe442783          	lw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
2001607e:	853e                	mv	a0,a5
20016080:	50b2                	lw	ra,44(sp)
20016082:	5422                	lw	s0,40(sp)
20016084:	6145                	addi	sp,sp,48
20016086:	8082                	ret

20016088 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20016088:	7179                	addi	sp,sp,-48
2001608a:	d606                	sw	ra,44(sp)
2001608c:	d422                	sw	s0,40(sp)
2001608e:	1800                	addi	s0,sp,48
20016090:	fca42e23          	sw	a0,-36(s0)
20016094:	fcb42c23          	sw	a1,-40(s0)
20016098:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
2001609c:	fe042423          	sw	zero,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
200160a0:	fe042623          	sw	zero,-20(s0)
200160a4:	a091                	j	200160e8 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
200160a6:	fec42783          	lw	a5,-20(s0)
200160aa:	c78d                	beqz	a5,200160d4 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
200160ac:	fd442603          	lw	a2,-44(s0)
200160b0:	fec42583          	lw	a1,-20(s0)
200160b4:	fdc42503          	lw	a0,-36(s0)
200160b8:	919ff0ef          	jal	ra,200159d0 <__metal_plic0_set_threshold>
200160bc:	87aa                	mv	a5,a0
200160be:	0017f713          	andi	a4,a5,1
200160c2:	fec42783          	lw	a5,-20(s0)
200160c6:	00f71733          	sll	a4,a4,a5
200160ca:	fe842783          	lw	a5,-24(s0)
200160ce:	8fd9                	or	a5,a5,a4
200160d0:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
200160d4:	fec42783          	lw	a5,-20(s0)
200160d8:	0785                	addi	a5,a5,1
200160da:	fef42623          	sw	a5,-20(s0)
200160de:	fd842783          	lw	a5,-40(s0)
200160e2:	8385                	srli	a5,a5,0x1
200160e4:	fcf42c23          	sw	a5,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
200160e8:	fd842783          	lw	a5,-40(s0)
200160ec:	ffcd                	bnez	a5,200160a6 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
200160ee:	fe842783          	lw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:281
}
200160f2:	853e                	mv	a0,a5
200160f4:	50b2                	lw	ra,44(sp)
200160f6:	5422                	lw	s0,40(sp)
200160f8:	6145                	addi	sp,sp,48
200160fa:	8082                	ret

200160fc <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
200160fc:	1101                	addi	sp,sp,-32
200160fe:	ce06                	sw	ra,28(sp)
20016100:	cc22                	sw	s0,24(sp)
20016102:	1000                	addi	s0,sp,32
20016104:	fea42623          	sw	a0,-20(s0)
20016108:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
2001610c:	fe842583          	lw	a1,-24(s0)
20016110:	fec42503          	lw	a0,-20(s0)
20016114:	903ff0ef          	jal	ra,20015a16 <__metal_plic0_get_threshold>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20016118:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/riscv_plic0.c:287
}
2001611a:	853e                	mv	a0,a5
2001611c:	40f2                	lw	ra,28(sp)
2001611e:	4462                	lw	s0,24(sp)
20016120:	6105                	addi	sp,sp,32
20016122:	8082                	ret

20016124 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1242



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20016124:	1101                	addi	sp,sp,-32
20016126:	ce22                	sw	s0,28(sp)
20016128:	1000                	addi	s0,sp,32
2001612a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1243
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
2001612e:	800017b7          	lui	a5,0x80001
20016132:	06c78793          	addi	a5,a5,108 # 8000106c <metal_segment_heap_target_end+0xffffe8fc>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1244
}
20016136:	853e                	mv	a0,a5
20016138:	4472                	lw	s0,28(sp)
2001613a:	6105                	addi	sp,sp,32
2001613c:	8082                	ret

2001613e <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1247

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
2001613e:	1101                	addi	sp,sp,-32
20016140:	ce22                	sw	s0,28(sp)
20016142:	1000                	addi	s0,sp,32
20016144:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1248
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20016148:	82018793          	addi	a5,gp,-2016 # 80001ac0 <__metal_dt_prci_10008000>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1249
}
2001614c:	853e                	mv	a0,a5
2001614e:	4472                	lw	s0,28(sp)
20016150:	6105                	addi	sp,sp,32
20016152:	8082                	ret

20016154 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1257
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20016154:	1101                	addi	sp,sp,-32
20016156:	ce22                	sw	s0,28(sp)
20016158:	1000                	addi	s0,sp,32
2001615a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1258
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
2001615e:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1259
}
20016160:	853e                	mv	a0,a5
20016162:	4472                	lw	s0,28(sp)
20016164:	6105                	addi	sp,sp,32
20016166:	8082                	ret

20016168 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1374
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20016168:	1141                	addi	sp,sp,-16
2001616a:	c622                	sw	s0,12(sp)
2001616c:	0800                	addi	s0,sp,16
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2001616e:	200117b7          	lui	a5,0x20011
20016172:	02c78793          	addi	a5,a5,44 # 2001102c <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1376
}
20016176:	853e                	mv	a0,a5
20016178:	4432                	lw	s0,12(sp)
2001617a:	0141                	addi	sp,sp,16
2001617c:	8082                	ret

2001617e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
2001617e:	7139                	addi	sp,sp,-64
20016180:	de06                	sw	ra,60(sp)
20016182:	dc22                	sw	s0,56(sp)
20016184:	0080                	addi	s0,sp,64
20016186:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
2001618a:	fcc42503          	lw	a0,-52(s0)
2001618e:	3f59                	jal	20016124 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20016190:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20016194:	fcc42503          	lw	a0,-52(s0)
20016198:	3f75                	jal	20016154 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
2001619a:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
2001619e:	fcc42503          	lw	a0,-52(s0)
200161a2:	3f71                	jal	2001613e <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
200161a4:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
200161a8:	37c1                	jal	20016168 <__metal_driver_sifive_fe310_g000_prci_vtable>
200161aa:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
200161ae:	fe042783          	lw	a5,-32(s0)
200161b2:	439c                	lw	a5,0(a5)
200161b4:	fe842583          	lw	a1,-24(s0)
200161b8:	fe442503          	lw	a0,-28(s0)
200161bc:	9782                	jalr	a5
200161be:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
200161c2:	fdc42703          	lw	a4,-36(s0)
200161c6:	400007b7          	lui	a5,0x40000
200161ca:	8ff9                	and	a5,a5,a4
200161cc:	e399                	bnez	a5,200161d2 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
200161ce:	57fd                	li	a5,-1
200161d0:	a025                	j	200161f8 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
200161d2:	fdc42783          	lw	a5,-36(s0)
200161d6:	0007c463          	bltz	a5,200161de <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
200161da:	57fd                	li	a5,-1
200161dc:	a831                	j	200161f8 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
200161de:	fec42503          	lw	a0,-20(s0)
200161e2:	2c1010ef          	jal	ra,20017ca2 <metal_clock_get_rate_hz>
200161e6:	87aa                	mv	a5,a0
200161e8:	873e                	mv	a4,a5
200161ea:	fdc42783          	lw	a5,-36(s0)
200161ee:	03f7f793          	andi	a5,a5,63
200161f2:	0785                	addi	a5,a5,1
200161f4:	02f757b3          	divu	a5,a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
200161f8:	853e                	mv	a0,a5
200161fa:	50f2                	lw	ra,60(sp)
200161fc:	5462                	lw	s0,56(sp)
200161fe:	6121                	addi	sp,sp,64
20016200:	8082                	ret

20016202 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20016202:	1101                	addi	sp,sp,-32
20016204:	ce06                	sw	ra,28(sp)
20016206:	cc22                	sw	s0,24(sp)
20016208:	1000                	addi	s0,sp,32
2001620a:	fea42623          	sw	a0,-20(s0)
2001620e:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20016212:	fec42503          	lw	a0,-20(s0)
20016216:	37a5                	jal	2001617e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20016218:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
2001621a:	853e                	mv	a0,a5
2001621c:	40f2                	lw	ra,28(sp)
2001621e:	4462                	lw	s0,24(sp)
20016220:	6105                	addi	sp,sp,32
20016222:	8082                	ret

20016224 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1265
{
20016224:	1101                	addi	sp,sp,-32
20016226:	ce22                	sw	s0,28(sp)
20016228:	1000                	addi	s0,sp,32
2001622a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1266
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
2001622e:	800017b7          	lui	a5,0x80001
20016232:	06078793          	addi	a5,a5,96 # 80001060 <metal_segment_heap_target_end+0xffffe8f0>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1267
}
20016236:	853e                	mv	a0,a5
20016238:	4472                	lw	s0,28(sp)
2001623a:	6105                	addi	sp,sp,32
2001623c:	8082                	ret

2001623e <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1270
{
2001623e:	1101                	addi	sp,sp,-32
20016240:	ce22                	sw	s0,28(sp)
20016242:	1000                	addi	s0,sp,32
20016244:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1271
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20016248:	82018793          	addi	a5,gp,-2016 # 80001ac0 <__metal_dt_prci_10008000>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1272
}
2001624c:	853e                	mv	a0,a5
2001624e:	4472                	lw	s0,28(sp)
20016250:	6105                	addi	sp,sp,32
20016252:	8082                	ret

20016254 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1275
{
20016254:	1101                	addi	sp,sp,-32
20016256:	ce22                	sw	s0,28(sp)
20016258:	1000                	addi	s0,sp,32
2001625a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1276
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
2001625e:	4791                	li	a5,4
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1277
}
20016260:	853e                	mv	a0,a5
20016262:	4472                	lw	s0,28(sp)
20016264:	6105                	addi	sp,sp,32
20016266:	8082                	ret

20016268 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1374
{
20016268:	1141                	addi	sp,sp,-16
2001626a:	c622                	sw	s0,12(sp)
2001626c:	0800                	addi	s0,sp,16
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2001626e:	200117b7          	lui	a5,0x20011
20016272:	02c78793          	addi	a5,a5,44 # 2001102c <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1376
}
20016276:	853e                	mv	a0,a5
20016278:	4432                	lw	s0,12(sp)
2001627a:	0141                	addi	sp,sp,16
2001627c:	8082                	ret

2001627e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
2001627e:	7139                	addi	sp,sp,-64
20016280:	de06                	sw	ra,60(sp)
20016282:	dc22                	sw	s0,56(sp)
20016284:	0080                	addi	s0,sp,64
20016286:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
2001628a:	fcc42503          	lw	a0,-52(s0)
2001628e:	3f59                	jal	20016224 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20016290:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20016294:	fcc42503          	lw	a0,-52(s0)
20016298:	3f75                	jal	20016254 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
2001629a:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
2001629e:	fcc42503          	lw	a0,-52(s0)
200162a2:	3f71                	jal	2001623e <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
200162a4:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
200162a8:	37c1                	jal	20016268 <__metal_driver_sifive_fe310_g000_prci_vtable>
200162aa:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
200162ae:	fe042783          	lw	a5,-32(s0)
200162b2:	439c                	lw	a5,0(a5)
200162b4:	fe842583          	lw	a1,-24(s0)
200162b8:	fe442503          	lw	a0,-28(s0)
200162bc:	9782                	jalr	a5
200162be:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
200162c2:	fdc42703          	lw	a4,-36(s0)
200162c6:	400007b7          	lui	a5,0x40000
200162ca:	8ff9                	and	a5,a5,a4
200162cc:	e399                	bnez	a5,200162d2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
200162ce:	57fd                	li	a5,-1
200162d0:	a821                	j	200162e8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
200162d2:	fdc42783          	lw	a5,-36(s0)
200162d6:	0007c463          	bltz	a5,200162de <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
200162da:	57fd                	li	a5,-1
200162dc:	a031                	j	200162e8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
200162de:	fec42503          	lw	a0,-20(s0)
200162e2:	1c1010ef          	jal	ra,20017ca2 <metal_clock_get_rate_hz>
200162e6:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
200162e8:	853e                	mv	a0,a5
200162ea:	50f2                	lw	ra,60(sp)
200162ec:	5462                	lw	s0,56(sp)
200162ee:	6121                	addi	sp,sp,64
200162f0:	8082                	ret

200162f2 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
200162f2:	1101                	addi	sp,sp,-32
200162f4:	ce06                	sw	ra,28(sp)
200162f6:	cc22                	sw	s0,24(sp)
200162f8:	1000                	addi	s0,sp,32
200162fa:	fea42623          	sw	a0,-20(s0)
200162fe:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20016302:	fec42503          	lw	a0,-20(s0)
20016306:	3fa5                	jal	2001627e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20016308:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
2001630a:	853e                	mv	a0,a5
2001630c:	40f2                	lw	ra,28(sp)
2001630e:	4462                	lw	s0,24(sp)
20016310:	6105                	addi	sp,sp,32
20016312:	8082                	ret

20016314 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1326
{
20016314:	1101                	addi	sp,sp,-32
20016316:	ce22                	sw	s0,28(sp)
20016318:	1000                	addi	s0,sp,32
2001631a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1327
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
2001631e:	800027b7          	lui	a5,0x80002
20016322:	a7878793          	addi	a5,a5,-1416 # 80001a78 <metal_segment_heap_target_end+0xfffff308>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1328
}
20016326:	853e                	mv	a0,a5
20016328:	4472                	lw	s0,28(sp)
2001632a:	6105                	addi	sp,sp,32
2001632c:	8082                	ret

2001632e <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1331
{
2001632e:	1101                	addi	sp,sp,-32
20016330:	ce22                	sw	s0,28(sp)
20016332:	1000                	addi	s0,sp,32
20016334:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1332
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20016338:	800027b7          	lui	a5,0x80002
2001633c:	a8478793          	addi	a5,a5,-1404 # 80001a84 <metal_segment_heap_target_end+0xfffff314>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1333
}
20016340:	853e                	mv	a0,a5
20016342:	4472                	lw	s0,28(sp)
20016344:	6105                	addi	sp,sp,32
20016346:	8082                	ret

20016348 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1336
{
20016348:	1101                	addi	sp,sp,-32
2001634a:	ce22                	sw	s0,28(sp)
2001634c:	1000                	addi	s0,sp,32
2001634e:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1337
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20016352:	82018793          	addi	a5,gp,-2016 # 80001ac0 <__metal_dt_prci_10008000>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1338
}
20016356:	853e                	mv	a0,a5
20016358:	4472                	lw	s0,28(sp)
2001635a:	6105                	addi	sp,sp,32
2001635c:	8082                	ret

2001635e <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1341
{
2001635e:	1101                	addi	sp,sp,-32
20016360:	ce22                	sw	s0,28(sp)
20016362:	1000                	addi	s0,sp,32
20016364:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1342
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20016368:	47b1                	li	a5,12
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1343
}
2001636a:	853e                	mv	a0,a5
2001636c:	4472                	lw	s0,28(sp)
2001636e:	6105                	addi	sp,sp,32
20016370:	8082                	ret

20016372 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1346
{
20016372:	1141                	addi	sp,sp,-16
20016374:	c622                	sw	s0,12(sp)
20016376:	0800                	addi	s0,sp,16
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1347
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20016378:	82018793          	addi	a5,gp,-2016 # 80001ac0 <__metal_dt_prci_10008000>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1348
}
2001637c:	853e                	mv	a0,a5
2001637e:	4432                	lw	s0,12(sp)
20016380:	0141                	addi	sp,sp,16
20016382:	8082                	ret

20016384 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1351
{
20016384:	1141                	addi	sp,sp,-16
20016386:	c622                	sw	s0,12(sp)
20016388:	0800                	addi	s0,sp,16
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1352
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
2001638a:	47a1                	li	a5,8
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1353
}
2001638c:	853e                	mv	a0,a5
2001638e:	4432                	lw	s0,12(sp)
20016390:	0141                	addi	sp,sp,16
20016392:	8082                	ret

20016394 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1356
{
20016394:	1141                	addi	sp,sp,-16
20016396:	c622                	sw	s0,12(sp)
20016398:	0800                	addi	s0,sp,16
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1357
		return 16000000;
2001639a:	00f427b7          	lui	a5,0xf42
2001639e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1358
}
200163a2:	853e                	mv	a0,a5
200163a4:	4432                	lw	s0,12(sp)
200163a6:	0141                	addi	sp,sp,16
200163a8:	8082                	ret

200163aa <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1364
{
200163aa:	1141                	addi	sp,sp,-16
200163ac:	c622                	sw	s0,12(sp)
200163ae:	0800                	addi	s0,sp,16
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
200163b0:	100087b7          	lui	a5,0x10008
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1366
}
200163b4:	853e                	mv	a0,a5
200163b6:	4432                	lw	s0,12(sp)
200163b8:	0141                	addi	sp,sp,16
200163ba:	8082                	ret

200163bc <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1374
{
200163bc:	1141                	addi	sp,sp,-16
200163be:	c622                	sw	s0,12(sp)
200163c0:	0800                	addi	s0,sp,16
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
200163c2:	200117b7          	lui	a5,0x20011
200163c6:	02c78793          	addi	a5,a5,44 # 2001102c <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1376
}
200163ca:	853e                	mv	a0,a5
200163cc:	4432                	lw	s0,12(sp)
200163ce:	0141                	addi	sp,sp,16
200163d0:	8082                	ret

200163d2 <get_pll_config_freq>:
get_pll_config_freq():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
200163d2:	1101                	addi	sp,sp,-32
200163d4:	ce22                	sw	s0,28(sp)
200163d6:	1000                	addi	s0,sp,32
200163d8:	fea42623          	sw	a0,-20(s0)
200163dc:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
200163e0:	fe842783          	lw	a5,-24(s0)
200163e4:	479c                	lw	a5,8(a5)
200163e6:	fec42703          	lw	a4,-20(s0)
200163ea:	00f76963          	bltu	a4,a5,200163fc <get_pll_config_freq+0x2a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
200163ee:	fe842783          	lw	a5,-24(s0)
200163f2:	47dc                	lw	a5,12(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
200163f4:	fec42703          	lw	a4,-20(s0)
200163f8:	00e7f463          	bgeu	a5,a4,20016400 <get_pll_config_freq+0x2e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
200163fc:	57fd                	li	a5,-1
200163fe:	a829                	j	20016418 <get_pll_config_freq+0x46>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20016400:	fe842783          	lw	a5,-24(s0)
20016404:	4398                	lw	a4,0(a5)
20016406:	fec42783          	lw	a5,-20(s0)
2001640a:	02f70733          	mul	a4,a4,a5
2001640e:	fe842783          	lw	a5,-24(s0)
20016412:	43dc                	lw	a5,4(a5)
20016414:	02f757b3          	divu	a5,a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20016418:	853e                	mv	a0,a5
2001641a:	4472                	lw	s0,28(sp)
2001641c:	6105                	addi	sp,sp,32
2001641e:	8082                	ret

20016420 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20016420:	7139                	addi	sp,sp,-64
20016422:	de06                	sw	ra,60(sp)
20016424:	dc22                	sw	s0,56(sp)
20016426:	0080                	addi	s0,sp,64
20016428:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
2001642c:	fcc42783          	lw	a5,-52(s0)
20016430:	853e                	mv	a0,a5
20016432:	3df5                	jal	2001632e <__metal_driver_sifive_fe310_g000_pll_pllref>
20016434:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20016438:	3fb1                	jal	20016394 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001643a:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
2001643e:	3799                	jal	20016384 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20016440:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20016444:	379d                	jal	200163aa <__metal_driver_sifive_fe310_g000_prci_base>
20016446:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2001644a:	fe042703          	lw	a4,-32(s0)
2001644e:	fe442783          	lw	a5,-28(s0)
20016452:	97ba                	add	a5,a5,a4
20016454:	fcf42e23          	sw	a5,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20016458:	fcc42783          	lw	a5,-52(s0)
2001645c:	43dc                	lw	a5,4(a5)
2001645e:	853e                	mv	a0,a5
20016460:	7ac010ef          	jal	ra,20017c0c <_metal_clock_call_all_callbacks>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20016464:	fdc42783          	lw	a5,-36(s0)
20016468:	4398                	lw	a4,0(a5)
2001646a:	67c1                	lui	a5,0x10
2001646c:	8ff9                	and	a5,a5,a4
2001646e:	cb91                	beqz	a5,20016482 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20016470:	fdc42783          	lw	a5,-36(s0)
20016474:	4398                	lw	a4,0(a5)
20016476:	77c1                	lui	a5,0xffff0
20016478:	17fd                	addi	a5,a5,-1
2001647a:	8f7d                	and	a4,a4,a5
2001647c:	fdc42783          	lw	a5,-36(s0)
20016480:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20016482:	fec42783          	lw	a5,-20(s0)
20016486:	cb91                	beqz	a5,2001649a <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20016488:	fdc42783          	lw	a5,-36(s0)
2001648c:	4398                	lw	a4,0(a5)
2001648e:	000207b7          	lui	a5,0x20
20016492:	8f5d                	or	a4,a4,a5
20016494:	fdc42783          	lw	a5,-36(s0)
20016498:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
2001649a:	fcc42783          	lw	a5,-52(s0)
2001649e:	439c                	lw	a5,0(a5)
200164a0:	43d8                	lw	a4,4(a5)
200164a2:	fcc42783          	lw	a5,-52(s0)
200164a6:	fe842583          	lw	a1,-24(s0)
200164aa:	853e                	mv	a0,a5
200164ac:	9702                	jalr	a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
200164ae:	fcc42783          	lw	a5,-52(s0)
200164b2:	479c                	lw	a5,8(a5)
200164b4:	853e                	mv	a0,a5
200164b6:	756010ef          	jal	ra,20017c0c <_metal_clock_call_all_callbacks>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
200164ba:	0001                	nop
200164bc:	50f2                	lw	ra,60(sp)
200164be:	5462                	lw	s0,56(sp)
200164c0:	6121                	addi	sp,sp,64
200164c2:	8082                	ret

200164c4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
200164c4:	711d                	addi	sp,sp,-96
200164c6:	ce86                	sw	ra,92(sp)
200164c8:	cca2                	sw	s0,88(sp)
200164ca:	1080                	addi	s0,sp,96
200164cc:	faa42623          	sw	a0,-84(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200164d0:	fac42503          	lw	a0,-84(s0)
200164d4:	3da9                	jal	2001632e <__metal_driver_sifive_fe310_g000_pll_pllref>
200164d6:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200164da:	fac42503          	lw	a0,-84(s0)
200164de:	3d1d                	jal	20016314 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200164e0:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200164e4:	fac42503          	lw	a0,-84(s0)
200164e8:	3d71                	jal	20016384 <__metal_driver_sifive_fe310_g000_pll_config_offset>
200164ea:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
200164ee:	fac42503          	lw	a0,-84(s0)
200164f2:	3541                	jal	20016372 <__metal_driver_sifive_fe310_g000_pll_config_base>
200164f4:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
200164f8:	fac42503          	lw	a0,-84(s0)
200164fc:	358d                	jal	2001635e <__metal_driver_sifive_fe310_g000_pll_divider_offset>
200164fe:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20016502:	fac42503          	lw	a0,-84(s0)
20016506:	3589                	jal	20016348 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20016508:	fca42c23          	sw	a0,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
2001650c:	3d45                	jal	200163bc <__metal_driver_sifive_fe310_g000_prci_vtable>
2001650e:	fca42a23          	sw	a0,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20016512:	fd442783          	lw	a5,-44(s0)
20016516:	439c                	lw	a5,0(a5)
20016518:	fe442583          	lw	a1,-28(s0)
2001651c:	fe042503          	lw	a0,-32(s0)
20016520:	9782                	jalr	a5
20016522:	fca42823          	sw	a0,-48(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20016526:	fd442783          	lw	a5,-44(s0)
2001652a:	439c                	lw	a5,0(a5)
2001652c:	fdc42583          	lw	a1,-36(s0)
20016530:	fd842503          	lw	a0,-40(s0)
20016534:	9782                	jalr	a5
20016536:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
2001653a:	fd042703          	lw	a4,-48(s0)
2001653e:	67c1                	lui	a5,0x10
20016540:	8f7d                	and	a4,a4,a5
20016542:	67c1                	lui	a5,0x10
20016544:	00f77863          	bgeu	a4,a5,20016554 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20016548:	fe842503          	lw	a0,-24(s0)
2001654c:	756010ef          	jal	ra,20017ca2 <metal_clock_get_rate_hz>
20016550:	87aa                	mv	a5,a0
20016552:	a8e1                	j	2001662a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20016554:	fd042703          	lw	a4,-48(s0)
20016558:	000207b7          	lui	a5,0x20
2001655c:	8f7d                	and	a4,a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
2001655e:	000207b7          	lui	a5,0x20
20016562:	00f76563          	bltu	a4,a5,2001656c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20016566:	fec42783          	lw	a5,-20(s0)
2001656a:	a019                	j	20016570 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
2001656c:	fe842783          	lw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20016570:	853e                	mv	a0,a5
20016572:	730010ef          	jal	ra,20017ca2 <metal_clock_get_rate_hz>
20016576:	fca42423          	sw	a0,-56(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
2001657a:	fd042703          	lw	a4,-48(s0)
2001657e:	000407b7          	lui	a5,0x40
20016582:	8f7d                	and	a4,a4,a5
20016584:	000407b7          	lui	a5,0x40
20016588:	00f76563          	bltu	a4,a5,20016592 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
2001658c:	fc842783          	lw	a5,-56(s0)
20016590:	a869                	j	2001662a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20016592:	fd042783          	lw	a5,-48(s0)
20016596:	8b9d                	andi	a5,a5,7
20016598:	0785                	addi	a5,a5,1
2001659a:	fcf42223          	sw	a5,-60(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
2001659e:	fd042783          	lw	a5,-48(s0)
200165a2:	3f07f793          	andi	a5,a5,1008
200165a6:	8391                	srli	a5,a5,0x4
200165a8:	0785                	addi	a5,a5,1
200165aa:	0786                	slli	a5,a5,0x1
200165ac:	fcf42023          	sw	a5,-64(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
200165b0:	fd042703          	lw	a4,-48(s0)
200165b4:	6785                	lui	a5,0x1
200165b6:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200165ba:	8f7d                	and	a4,a4,a5
200165bc:	3ff00793          	li	a5,1023
200165c0:	00e7e463          	bltu	a5,a4,200165c8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
200165c4:	57fd                	li	a5,-1
200165c6:	a095                	j	2001662a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
200165c8:	fd042703          	lw	a4,-48(s0)
200165cc:	6785                	lui	a5,0x1
200165ce:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200165d2:	8ff9                	and	a5,a5,a4
200165d4:	83a9                	srli	a5,a5,0xa
200165d6:	4705                	li	a4,1
200165d8:	00f717b3          	sll	a5,a4,a5
200165dc:	faf42e23          	sw	a5,-68(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
200165e0:	fc842703          	lw	a4,-56(s0)
200165e4:	fc442783          	lw	a5,-60(s0)
200165e8:	02f74733          	div	a4,a4,a5
200165ec:	fc042783          	lw	a5,-64(s0)
200165f0:	02f70733          	mul	a4,a4,a5
200165f4:	fbc42783          	lw	a5,-68(s0)
200165f8:	02f747b3          	div	a5,a4,a5
200165fc:	faf42c23          	sw	a5,-72(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20016600:	fcc42783          	lw	a5,-52(s0)
20016604:	1007f713          	andi	a4,a5,256
20016608:	0ff00793          	li	a5,255
2001660c:	00e7f563          	bgeu	a5,a4,20016616 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20016610:	fb842783          	lw	a5,-72(s0)
20016614:	a819                	j	2001662a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20016616:	fb842703          	lw	a4,-72(s0)
2001661a:	fcc42783          	lw	a5,-52(s0)
2001661e:	03f7f793          	andi	a5,a5,63
20016622:	0785                	addi	a5,a5,1
20016624:	0786                	slli	a5,a5,0x1
20016626:	02f757b3          	divu	a5,a4,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
2001662a:	853e                	mv	a0,a5
2001662c:	40f6                	lw	ra,92(sp)
2001662e:	4466                	lw	s0,88(sp)
20016630:	6125                	addi	sp,sp,96
20016632:	8082                	ret

20016634 <find_closest_config>:
find_closest_config():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20016634:	7139                	addi	sp,sp,-64
20016636:	de06                	sw	ra,60(sp)
20016638:	dc22                	sw	s0,56(sp)
2001663a:	0080                	addi	s0,sp,64
2001663c:	fca42623          	sw	a0,-52(s0)
20016640:	fcb42423          	sw	a1,-56(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20016644:	57fd                	li	a5,-1
20016646:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
2001664a:	800007b7          	lui	a5,0x80000
2001664e:	fff7c793          	not	a5,a5
20016652:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20016656:	04300793          	li	a5,67
2001665a:	fef42223          	sw	a5,-28(s0)
2001665e:	a0b5                	j	200166ca <find_closest_config+0x96>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20016660:	fcc42683          	lw	a3,-52(s0)
20016664:	fe442783          	lw	a5,-28(s0)
20016668:	00579713          	slli	a4,a5,0x5
2001666c:	200107b7          	lui	a5,0x20010
20016670:	6cc78793          	addi	a5,a5,1740 # 200106cc <pll_configs>
20016674:	97ba                	add	a5,a5,a4
20016676:	85be                	mv	a1,a5
20016678:	8536                	mv	a0,a3
2001667a:	d59ff0ef          	jal	ra,200163d2 <get_pll_config_freq>
2001667e:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20016682:	fe042703          	lw	a4,-32(s0)
20016686:	57fd                	li	a5,-1
20016688:	02f70c63          	beq	a4,a5,200166c0 <find_closest_config+0x8c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
2001668c:	fe042703          	lw	a4,-32(s0)
20016690:	fc842783          	lw	a5,-56(s0)
20016694:	8f1d                	sub	a4,a4,a5
20016696:	41f75793          	srai	a5,a4,0x1f
2001669a:	8f3d                	xor	a4,a4,a5
2001669c:	40f707b3          	sub	a5,a4,a5
200166a0:	fcf42e23          	sw	a5,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
200166a4:	fdc42703          	lw	a4,-36(s0)
200166a8:	fe842783          	lw	a5,-24(s0)
200166ac:	00f75a63          	bge	a4,a5,200166c0 <find_closest_config+0x8c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
200166b0:	fe442783          	lw	a5,-28(s0)
200166b4:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
200166b8:	fdc42783          	lw	a5,-36(s0)
200166bc:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
200166c0:	fe442783          	lw	a5,-28(s0)
200166c4:	17fd                	addi	a5,a5,-1
200166c6:	fef42223          	sw	a5,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
200166ca:	fe442783          	lw	a5,-28(s0)
200166ce:	f807d9e3          	bgez	a5,20016660 <find_closest_config+0x2c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
200166d2:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
200166d6:	853e                	mv	a0,a5
200166d8:	50f2                	lw	ra,60(sp)
200166da:	5462                	lw	s0,56(sp)
200166dc:	6121                	addi	sp,sp,64
200166de:	8082                	ret

200166e0 <configure_pll>:
configure_pll():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
200166e0:	7179                	addi	sp,sp,-48
200166e2:	d606                	sw	ra,44(sp)
200166e4:	d422                	sw	s0,40(sp)
200166e6:	1800                	addi	s0,sp,48
200166e8:	fca42e23          	sw	a0,-36(s0)
200166ec:	fcb42c23          	sw	a1,-40(s0)
200166f0:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
200166f4:	fdc42783          	lw	a5,-36(s0)
200166f8:	439c                	lw	a5,0(a5)
200166fa:	ff87f713          	andi	a4,a5,-8
200166fe:	fdc42783          	lw	a5,-36(s0)
20016702:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20016704:	fdc42783          	lw	a5,-36(s0)
20016708:	4398                	lw	a4,0(a5)
2001670a:	fd442783          	lw	a5,-44(s0)
2001670e:	4b9c                	lw	a5,16(a5)
20016710:	8b9d                	andi	a5,a5,7
20016712:	8f5d                	or	a4,a4,a5
20016714:	fdc42783          	lw	a5,-36(s0)
20016718:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
2001671a:	fdc42783          	lw	a5,-36(s0)
2001671e:	439c                	lw	a5,0(a5)
20016720:	c0f7f713          	andi	a4,a5,-1009
20016724:	fdc42783          	lw	a5,-36(s0)
20016728:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
2001672a:	fdc42783          	lw	a5,-36(s0)
2001672e:	4398                	lw	a4,0(a5)
20016730:	fd442783          	lw	a5,-44(s0)
20016734:	4bdc                	lw	a5,20(a5)
20016736:	0792                	slli	a5,a5,0x4
20016738:	3f07f793          	andi	a5,a5,1008
2001673c:	8f5d                	or	a4,a4,a5
2001673e:	fdc42783          	lw	a5,-36(s0)
20016742:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20016744:	fdc42783          	lw	a5,-36(s0)
20016748:	4398                	lw	a4,0(a5)
2001674a:	77fd                	lui	a5,0xfffff
2001674c:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffcc8f>
20016750:	8f7d                	and	a4,a4,a5
20016752:	fdc42783          	lw	a5,-36(s0)
20016756:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20016758:	fdc42783          	lw	a5,-36(s0)
2001675c:	4398                	lw	a4,0(a5)
2001675e:	fd442783          	lw	a5,-44(s0)
20016762:	4f9c                	lw	a5,24(a5)
20016764:	00a79693          	slli	a3,a5,0xa
20016768:	6785                	lui	a5,0x1
2001676a:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
2001676e:	8ff5                	and	a5,a5,a3
20016770:	8f5d                	or	a4,a4,a5
20016772:	fdc42783          	lw	a5,-36(s0)
20016776:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20016778:	fd442783          	lw	a5,-44(s0)
2001677c:	4fdc                	lw	a5,28(a5)
2001677e:	0207db63          	bgez	a5,200167b4 <configure_pll+0xd4>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20016782:	fd842783          	lw	a5,-40(s0)
20016786:	439c                	lw	a5,0(a5)
20016788:	1007e713          	ori	a4,a5,256
2001678c:	fd842783          	lw	a5,-40(s0)
20016790:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20016792:	fd842783          	lw	a5,-40(s0)
20016796:	439c                	lw	a5,0(a5)
20016798:	fc07f713          	andi	a4,a5,-64
2001679c:	fd842783          	lw	a5,-40(s0)
200167a0:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
200167a2:	fd842783          	lw	a5,-40(s0)
200167a6:	439c                	lw	a5,0(a5)
200167a8:	0017e713          	ori	a4,a5,1
200167ac:	fd842783          	lw	a5,-40(s0)
200167b0:	c398                	sw	a4,0(a5)
200167b2:	a82d                	j	200167ec <configure_pll+0x10c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
200167b4:	fd842783          	lw	a5,-40(s0)
200167b8:	439c                	lw	a5,0(a5)
200167ba:	eff7f713          	andi	a4,a5,-257
200167be:	fd842783          	lw	a5,-40(s0)
200167c2:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200167c4:	fd842783          	lw	a5,-40(s0)
200167c8:	439c                	lw	a5,0(a5)
200167ca:	fc07f713          	andi	a4,a5,-64
200167ce:	fd842783          	lw	a5,-40(s0)
200167d2:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
200167d4:	fd842783          	lw	a5,-40(s0)
200167d8:	4398                	lw	a4,0(a5)
200167da:	fd442783          	lw	a5,-44(s0)
200167de:	4fdc                	lw	a5,28(a5)
200167e0:	03f7f793          	andi	a5,a5,63
200167e4:	8f5d                	or	a4,a4,a5
200167e6:	fd842783          	lw	a5,-40(s0)
200167ea:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
200167ec:	fdc42783          	lw	a5,-36(s0)
200167f0:	4398                	lw	a4,0(a5)
200167f2:	fffc07b7          	lui	a5,0xfffc0
200167f6:	17fd                	addi	a5,a5,-1
200167f8:	8f7d                	and	a4,a4,a5
200167fa:	fdc42783          	lw	a5,-36(s0)
200167fe:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20016800:	fe040793          	addi	a5,s0,-32
20016804:	863e                	mv	a2,a5
20016806:	4585                	li	a1,1
20016808:	800027b7          	lui	a5,0x80002
2001680c:	aac78513          	addi	a0,a5,-1364 # 80001aac <metal_segment_heap_target_end+0xfffff33c>
20016810:	c60fd0ef          	jal	ra,20013c70 <__metal_driver_riscv_clint0_command_request>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
20016814:	fe042603          	lw	a2,-32(s0)
20016818:	fe442683          	lw	a3,-28(s0)
2001681c:	4511                	li	a0,4
2001681e:	4581                	li	a1,0
20016820:	00a60733          	add	a4,a2,a0
20016824:	883a                	mv	a6,a4
20016826:	00c83833          	sltu	a6,a6,a2
2001682a:	00b687b3          	add	a5,a3,a1
2001682e:	00f806b3          	add	a3,a6,a5
20016832:	87b6                	mv	a5,a3
20016834:	fee42423          	sw	a4,-24(s0)
20016838:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2001683c:	a819                	j	20016852 <configure_pll+0x172>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
2001683e:	fe040793          	addi	a5,s0,-32
20016842:	863e                	mv	a2,a5
20016844:	4585                	li	a1,1
20016846:	800027b7          	lui	a5,0x80002
2001684a:	aac78513          	addi	a0,a5,-1364 # 80001aac <metal_segment_heap_target_end+0xfffff33c>
2001684e:	c22fd0ef          	jal	ra,20013c70 <__metal_driver_riscv_clint0_command_request>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20016852:	fe042703          	lw	a4,-32(s0)
20016856:	fe442783          	lw	a5,-28(s0)
2001685a:	fec42683          	lw	a3,-20(s0)
2001685e:	863e                	mv	a2,a5
20016860:	00c6ec63          	bltu	a3,a2,20016878 <configure_pll+0x198>
20016864:	fec42683          	lw	a3,-20(s0)
20016868:	863e                	mv	a2,a5
2001686a:	fcc69ae3          	bne	a3,a2,2001683e <configure_pll+0x15e>
2001686e:	fe842683          	lw	a3,-24(s0)
20016872:	87ba                	mv	a5,a4
20016874:	fcf6f5e3          	bgeu	a3,a5,2001683e <configure_pll+0x15e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20016878:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
2001687a:	fdc42783          	lw	a5,-36(s0)
2001687e:	439c                	lw	a5,0(a5)
20016880:	fe07dde3          	bgez	a5,2001687a <configure_pll+0x19a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20016884:	0001                	nop
20016886:	0001                	nop
20016888:	50b2                	lw	ra,44(sp)
2001688a:	5422                	lw	s0,40(sp)
2001688c:	6145                	addi	sp,sp,48
2001688e:	8082                	ret

20016890 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20016890:	715d                	addi	sp,sp,-80
20016892:	c686                	sw	ra,76(sp)
20016894:	c4a2                	sw	s0,72(sp)
20016896:	0880                	addi	s0,sp,80
20016898:	faa42e23          	sw	a0,-68(s0)
2001689c:	fab42c23          	sw	a1,-72(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200168a0:	fbc42503          	lw	a0,-68(s0)
200168a4:	a8bff0ef          	jal	ra,2001632e <__metal_driver_sifive_fe310_g000_pll_pllref>
200168a8:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200168ac:	fbc42503          	lw	a0,-68(s0)
200168b0:	a65ff0ef          	jal	ra,20016314 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200168b4:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200168b8:	fbc42503          	lw	a0,-68(s0)
200168bc:	ac9ff0ef          	jal	ra,20016384 <__metal_driver_sifive_fe310_g000_pll_config_offset>
200168c0:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
200168c4:	fbc42503          	lw	a0,-68(s0)
200168c8:	a97ff0ef          	jal	ra,2001635e <__metal_driver_sifive_fe310_g000_pll_divider_offset>
200168cc:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
200168d0:	adbff0ef          	jal	ra,200163aa <__metal_driver_sifive_fe310_g000_prci_base>
200168d4:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
200168d8:	fdc42703          	lw	a4,-36(s0)
200168dc:	fe442783          	lw	a5,-28(s0)
200168e0:	97ba                	add	a5,a5,a4
200168e2:	fcf42c23          	sw	a5,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
200168e6:	fdc42703          	lw	a4,-36(s0)
200168ea:	fe042783          	lw	a5,-32(s0)
200168ee:	97ba                	add	a5,a5,a4
200168f0:	fcf42a23          	sw	a5,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
200168f4:	fd842783          	lw	a5,-40(s0)
200168f8:	4398                	lw	a4,0(a5)
200168fa:	67c1                	lui	a5,0x10
200168fc:	8ff9                	and	a5,a5,a4
200168fe:	cb91                	beqz	a5,20016912 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20016900:	fd842783          	lw	a5,-40(s0)
20016904:	4398                	lw	a4,0(a5)
20016906:	77c1                	lui	a5,0xffff0
20016908:	17fd                	addi	a5,a5,-1
2001690a:	8f7d                	and	a4,a4,a5
2001690c:	fd842783          	lw	a5,-40(s0)
20016910:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20016912:	fd842783          	lw	a5,-40(s0)
20016916:	4398                	lw	a4,0(a5)
20016918:	000207b7          	lui	a5,0x20
2001691c:	8ff9                	and	a5,a5,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
2001691e:	c781                	beqz	a5,20016926 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20016920:	fec42783          	lw	a5,-20(s0)
20016924:	a019                	j	2001692a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20016926:	fe842783          	lw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
2001692a:	853e                	mv	a0,a5
2001692c:	376010ef          	jal	ra,20017ca2 <metal_clock_get_rate_hz>
20016930:	fca42823          	sw	a0,-48(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20016934:	fd042703          	lw	a4,-48(s0)
20016938:	87ba                	mv	a5,a4
2001693a:	0786                	slli	a5,a5,0x1
2001693c:	97ba                	add	a5,a5,a4
2001693e:	41f7d713          	srai	a4,a5,0x1f
20016942:	8b0d                	andi	a4,a4,3
20016944:	97ba                	add	a5,a5,a4
20016946:	8789                	srai	a5,a5,0x2
20016948:	873e                	mv	a4,a5
2001694a:	fb842783          	lw	a5,-72(s0)
2001694e:	02e7cb63          	blt	a5,a4,20016984 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20016952:	fd042703          	lw	a4,-48(s0)
20016956:	87ba                	mv	a5,a4
20016958:	078a                	slli	a5,a5,0x2
2001695a:	97ba                	add	a5,a5,a4
2001695c:	41f7d713          	srai	a4,a5,0x1f
20016960:	8b0d                	andi	a4,a4,3
20016962:	97ba                	add	a5,a5,a4
20016964:	8789                	srai	a5,a5,0x2
20016966:	873e                	mv	a4,a5
20016968:	fb842783          	lw	a5,-72(s0)
2001696c:	00f74c63          	blt	a4,a5,20016984 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20016970:	fd842783          	lw	a5,-40(s0)
20016974:	4398                	lw	a4,0(a5)
20016976:	000407b7          	lui	a5,0x40
2001697a:	8f5d                	or	a4,a4,a5
2001697c:	fd842783          	lw	a5,-40(s0)
20016980:	c398                	sw	a4,0(a5)
20016982:	a881                	j	200169d2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20016984:	fb842583          	lw	a1,-72(s0)
20016988:	fd042503          	lw	a0,-48(s0)
2001698c:	ca9ff0ef          	jal	ra,20016634 <find_closest_config>
20016990:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
20016994:	fcc42703          	lw	a4,-52(s0)
20016998:	57fd                	li	a5,-1
2001699a:	02f70363          	beq	a4,a5,200169c0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
2001699e:	fcc42783          	lw	a5,-52(s0)
200169a2:	00579713          	slli	a4,a5,0x5
200169a6:	200107b7          	lui	a5,0x20010
200169aa:	6cc78793          	addi	a5,a5,1740 # 200106cc <pll_configs>
200169ae:	97ba                	add	a5,a5,a4
200169b0:	863e                	mv	a2,a5
200169b2:	fd442583          	lw	a1,-44(s0)
200169b6:	fd842503          	lw	a0,-40(s0)
200169ba:	d27ff0ef          	jal	ra,200166e0 <configure_pll>
200169be:	a811                	j	200169d2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200169c0:	fd842783          	lw	a5,-40(s0)
200169c4:	4398                	lw	a4,0(a5)
200169c6:	000407b7          	lui	a5,0x40
200169ca:	8f5d                	or	a4,a4,a5
200169cc:	fd842783          	lw	a5,-40(s0)
200169d0:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
200169d2:	fd842783          	lw	a5,-40(s0)
200169d6:	4398                	lw	a4,0(a5)
200169d8:	67c1                	lui	a5,0x10
200169da:	8f5d                	or	a4,a4,a5
200169dc:	fd842783          	lw	a5,-40(s0)
200169e0:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
200169e2:	fbc42503          	lw	a0,-68(s0)
200169e6:	adfff0ef          	jal	ra,200164c4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
200169ea:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
200169ec:	853e                	mv	a0,a5
200169ee:	40b6                	lw	ra,76(sp)
200169f0:	4426                	lw	s0,72(sp)
200169f2:	6161                	addi	sp,sp,80
200169f4:	8082                	ret

200169f6 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1364
{
200169f6:	1141                	addi	sp,sp,-16
200169f8:	c622                	sw	s0,12(sp)
200169fa:	0800                	addi	s0,sp,16
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
200169fc:	100087b7          	lui	a5,0x10008
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1366
}
20016a00:	853e                	mv	a0,a5
20016a02:	4432                	lw	s0,12(sp)
20016a04:	0141                	addi	sp,sp,16
20016a06:	8082                	ret

20016a08 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20016a08:	7179                	addi	sp,sp,-48
20016a0a:	d606                	sw	ra,44(sp)
20016a0c:	d422                	sw	s0,40(sp)
20016a0e:	1800                	addi	s0,sp,48
20016a10:	fca42e23          	sw	a0,-36(s0)
20016a14:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20016a18:	3ff9                	jal	200169f6 <__metal_driver_sifive_fe310_g000_prci_base>
20016a1a:	87aa                	mv	a5,a0
20016a1c:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20016a20:	fd842703          	lw	a4,-40(s0)
20016a24:	fec42783          	lw	a5,-20(s0)
20016a28:	97ba                	add	a5,a5,a4
20016a2a:	439c                	lw	a5,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20016a2c:	853e                	mv	a0,a5
20016a2e:	50b2                	lw	ra,44(sp)
20016a30:	5422                	lw	s0,40(sp)
20016a32:	6145                	addi	sp,sp,48
20016a34:	8082                	ret

20016a36 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20016a36:	7179                	addi	sp,sp,-48
20016a38:	d606                	sw	ra,44(sp)
20016a3a:	d422                	sw	s0,40(sp)
20016a3c:	1800                	addi	s0,sp,48
20016a3e:	fca42e23          	sw	a0,-36(s0)
20016a42:	fcb42c23          	sw	a1,-40(s0)
20016a46:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20016a4a:	3775                	jal	200169f6 <__metal_driver_sifive_fe310_g000_prci_base>
20016a4c:	87aa                	mv	a5,a0
20016a4e:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20016a52:	fd842703          	lw	a4,-40(s0)
20016a56:	fec42783          	lw	a5,-20(s0)
20016a5a:	97ba                	add	a5,a5,a4
20016a5c:	873e                	mv	a4,a5
20016a5e:	fd442783          	lw	a5,-44(s0)
20016a62:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20016a64:	853e                	mv	a0,a5
20016a66:	50b2                	lw	ra,44(sp)
20016a68:	5422                	lw	s0,40(sp)
20016a6a:	6145                	addi	sp,sp,48
20016a6c:	8082                	ret

20016a6e <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:430
{
20016a6e:	1101                	addi	sp,sp,-32
20016a70:	ce22                	sw	s0,28(sp)
20016a72:	1000                	addi	s0,sp,32
20016a74:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20016a78:	fec42703          	lw	a4,-20(s0)
20016a7c:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016a80:	00f71563          	bne	a4,a5,20016a8a <__metal_driver_sifive_gpio0_base+0x1c>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20016a84:	100127b7          	lui	a5,0x10012
20016a88:	a011                	j	20016a8c <__metal_driver_sifive_gpio0_base+0x1e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:435
		return 0;
20016a8a:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:437
}
20016a8c:	853e                	mv	a0,a5
20016a8e:	4472                	lw	s0,28(sp)
20016a90:	6105                	addi	sp,sp,32
20016a92:	8082                	ret

20016a94 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:460
{
20016a94:	1101                	addi	sp,sp,-32
20016a96:	ce22                	sw	s0,28(sp)
20016a98:	1000                	addi	s0,sp,32
20016a9a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20016a9e:	fec42703          	lw	a4,-20(s0)
20016aa2:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016aa6:	00f71763          	bne	a4,a5,20016ab4 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016aaa:	800017b7          	lui	a5,0x80001
20016aae:	46078793          	addi	a5,a5,1120 # 80001460 <metal_segment_heap_target_end+0xffffecf0>
20016ab2:	a011                	j	20016ab6 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:465
		return 0;
20016ab4:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:467
}
20016ab6:	853e                	mv	a0,a5
20016ab8:	4472                	lw	s0,28(sp)
20016aba:	6105                	addi	sp,sp,32
20016abc:	8082                	ret

20016abe <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:470
{
20016abe:	1101                	addi	sp,sp,-32
20016ac0:	ce22                	sw	s0,28(sp)
20016ac2:	1000                	addi	s0,sp,32
20016ac4:	fea42623          	sw	a0,-20(s0)
20016ac8:	feb42423          	sw	a1,-24(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20016acc:	fec42703          	lw	a4,-20(s0)
20016ad0:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016ad4:	00f71763          	bne	a4,a5,20016ae2 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:471 (discriminator 1)
20016ad8:	fe842783          	lw	a5,-24(s0)
20016adc:	e399                	bnez	a5,20016ae2 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:472
		return 8;
20016ade:	47a1                	li	a5,8
20016ae0:	ae15                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20016ae2:	fec42703          	lw	a4,-20(s0)
20016ae6:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016aea:	00f71963          	bne	a4,a5,20016afc <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:474 (discriminator 1)
20016aee:	fe842703          	lw	a4,-24(s0)
20016af2:	4785                	li	a5,1
20016af4:	00f71463          	bne	a4,a5,20016afc <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:475
		return 9;
20016af8:	47a5                	li	a5,9
20016afa:	ae29                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20016afc:	fec42703          	lw	a4,-20(s0)
20016b00:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016b04:	00f71963          	bne	a4,a5,20016b16 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:477 (discriminator 1)
20016b08:	fe842703          	lw	a4,-24(s0)
20016b0c:	4789                	li	a5,2
20016b0e:	00f71463          	bne	a4,a5,20016b16 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:478
		return 10;
20016b12:	47a9                	li	a5,10
20016b14:	a601                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20016b16:	fec42703          	lw	a4,-20(s0)
20016b1a:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016b1e:	00f71963          	bne	a4,a5,20016b30 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:480 (discriminator 1)
20016b22:	fe842703          	lw	a4,-24(s0)
20016b26:	478d                	li	a5,3
20016b28:	00f71463          	bne	a4,a5,20016b30 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:481
		return 11;
20016b2c:	47ad                	li	a5,11
20016b2e:	a4dd                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20016b30:	fec42703          	lw	a4,-20(s0)
20016b34:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016b38:	00f71963          	bne	a4,a5,20016b4a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:483 (discriminator 1)
20016b3c:	fe842703          	lw	a4,-24(s0)
20016b40:	4791                	li	a5,4
20016b42:	00f71463          	bne	a4,a5,20016b4a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:484
		return 12;
20016b46:	47b1                	li	a5,12
20016b48:	a4f1                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20016b4a:	fec42703          	lw	a4,-20(s0)
20016b4e:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016b52:	00f71963          	bne	a4,a5,20016b64 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:486 (discriminator 1)
20016b56:	fe842703          	lw	a4,-24(s0)
20016b5a:	4795                	li	a5,5
20016b5c:	00f71463          	bne	a4,a5,20016b64 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:487
		return 13;
20016b60:	47b5                	li	a5,13
20016b62:	ac4d                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20016b64:	fec42703          	lw	a4,-20(s0)
20016b68:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016b6c:	00f71963          	bne	a4,a5,20016b7e <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:489 (discriminator 1)
20016b70:	fe842703          	lw	a4,-24(s0)
20016b74:	4799                	li	a5,6
20016b76:	00f71463          	bne	a4,a5,20016b7e <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:490
		return 14;
20016b7a:	47b9                	li	a5,14
20016b7c:	ac61                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20016b7e:	fec42703          	lw	a4,-20(s0)
20016b82:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016b86:	00f71963          	bne	a4,a5,20016b98 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:492 (discriminator 1)
20016b8a:	fe842703          	lw	a4,-24(s0)
20016b8e:	479d                	li	a5,7
20016b90:	00f71463          	bne	a4,a5,20016b98 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:493
		return 15;
20016b94:	47bd                	li	a5,15
20016b96:	acbd                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20016b98:	fec42703          	lw	a4,-20(s0)
20016b9c:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016ba0:	00f71963          	bne	a4,a5,20016bb2 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:495 (discriminator 1)
20016ba4:	fe842703          	lw	a4,-24(s0)
20016ba8:	47a1                	li	a5,8
20016baa:	00f71463          	bne	a4,a5,20016bb2 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:496
		return 16;
20016bae:	47c1                	li	a5,16
20016bb0:	a495                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20016bb2:	fec42703          	lw	a4,-20(s0)
20016bb6:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016bba:	00f71963          	bne	a4,a5,20016bcc <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:498 (discriminator 1)
20016bbe:	fe842703          	lw	a4,-24(s0)
20016bc2:	47a5                	li	a5,9
20016bc4:	00f71463          	bne	a4,a5,20016bcc <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:499
		return 17;
20016bc8:	47c5                	li	a5,17
20016bca:	a4a9                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20016bcc:	fec42703          	lw	a4,-20(s0)
20016bd0:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016bd4:	00f71963          	bne	a4,a5,20016be6 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:501 (discriminator 1)
20016bd8:	fe842703          	lw	a4,-24(s0)
20016bdc:	47a9                	li	a5,10
20016bde:	00f71463          	bne	a4,a5,20016be6 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:502
		return 18;
20016be2:	47c9                	li	a5,18
20016be4:	ac05                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20016be6:	fec42703          	lw	a4,-20(s0)
20016bea:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016bee:	00f71963          	bne	a4,a5,20016c00 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:504 (discriminator 1)
20016bf2:	fe842703          	lw	a4,-24(s0)
20016bf6:	47ad                	li	a5,11
20016bf8:	00f71463          	bne	a4,a5,20016c00 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:505
		return 19;
20016bfc:	47cd                	li	a5,19
20016bfe:	ac19                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20016c00:	fec42703          	lw	a4,-20(s0)
20016c04:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016c08:	00f71963          	bne	a4,a5,20016c1a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:507 (discriminator 1)
20016c0c:	fe842703          	lw	a4,-24(s0)
20016c10:	47b1                	li	a5,12
20016c12:	00f71463          	bne	a4,a5,20016c1a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:508
		return 20;
20016c16:	47d1                	li	a5,20
20016c18:	aaf5                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20016c1a:	fec42703          	lw	a4,-20(s0)
20016c1e:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016c22:	00f71963          	bne	a4,a5,20016c34 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:510 (discriminator 1)
20016c26:	fe842703          	lw	a4,-24(s0)
20016c2a:	47b5                	li	a5,13
20016c2c:	00f71463          	bne	a4,a5,20016c34 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:511
		return 21;
20016c30:	47d5                	li	a5,21
20016c32:	a2cd                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20016c34:	fec42703          	lw	a4,-20(s0)
20016c38:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016c3c:	00f71963          	bne	a4,a5,20016c4e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:513 (discriminator 1)
20016c40:	fe842703          	lw	a4,-24(s0)
20016c44:	47b9                	li	a5,14
20016c46:	00f71463          	bne	a4,a5,20016c4e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:514
		return 22;
20016c4a:	47d9                	li	a5,22
20016c4c:	a2e1                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20016c4e:	fec42703          	lw	a4,-20(s0)
20016c52:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016c56:	00f71963          	bne	a4,a5,20016c68 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:516 (discriminator 1)
20016c5a:	fe842703          	lw	a4,-24(s0)
20016c5e:	47bd                	li	a5,15
20016c60:	00f71463          	bne	a4,a5,20016c68 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:517
		return 23;
20016c64:	47dd                	li	a5,23
20016c66:	a27d                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
20016c68:	fec42703          	lw	a4,-20(s0)
20016c6c:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016c70:	00f71963          	bne	a4,a5,20016c82 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:519 (discriminator 1)
20016c74:	fe842703          	lw	a4,-24(s0)
20016c78:	47c1                	li	a5,16
20016c7a:	00f71463          	bne	a4,a5,20016c82 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:520
		return 24;
20016c7e:	47e1                	li	a5,24
20016c80:	aa51                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
20016c82:	fec42703          	lw	a4,-20(s0)
20016c86:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016c8a:	00f71963          	bne	a4,a5,20016c9c <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:522 (discriminator 1)
20016c8e:	fe842703          	lw	a4,-24(s0)
20016c92:	47c5                	li	a5,17
20016c94:	00f71463          	bne	a4,a5,20016c9c <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:523
		return 25;
20016c98:	47e5                	li	a5,25
20016c9a:	aaad                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
20016c9c:	fec42703          	lw	a4,-20(s0)
20016ca0:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016ca4:	00f71963          	bne	a4,a5,20016cb6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:525 (discriminator 1)
20016ca8:	fe842703          	lw	a4,-24(s0)
20016cac:	47c9                	li	a5,18
20016cae:	00f71463          	bne	a4,a5,20016cb6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:526
		return 26;
20016cb2:	47e9                	li	a5,26
20016cb4:	a285                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
20016cb6:	fec42703          	lw	a4,-20(s0)
20016cba:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016cbe:	00f71963          	bne	a4,a5,20016cd0 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:528 (discriminator 1)
20016cc2:	fe842703          	lw	a4,-24(s0)
20016cc6:	47cd                	li	a5,19
20016cc8:	00f71463          	bne	a4,a5,20016cd0 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:529
		return 27;
20016ccc:	47ed                	li	a5,27
20016cce:	a299                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20016cd0:	fec42703          	lw	a4,-20(s0)
20016cd4:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016cd8:	00f71963          	bne	a4,a5,20016cea <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:531 (discriminator 1)
20016cdc:	fe842703          	lw	a4,-24(s0)
20016ce0:	47d1                	li	a5,20
20016ce2:	00f71463          	bne	a4,a5,20016cea <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:532
		return 28;
20016ce6:	47f1                	li	a5,28
20016ce8:	a235                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
20016cea:	fec42703          	lw	a4,-20(s0)
20016cee:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016cf2:	00f71963          	bne	a4,a5,20016d04 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:534 (discriminator 1)
20016cf6:	fe842703          	lw	a4,-24(s0)
20016cfa:	47d5                	li	a5,21
20016cfc:	00f71463          	bne	a4,a5,20016d04 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:535
		return 29;
20016d00:	47f5                	li	a5,29
20016d02:	aa09                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
20016d04:	fec42703          	lw	a4,-20(s0)
20016d08:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016d0c:	00f71963          	bne	a4,a5,20016d1e <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:537 (discriminator 1)
20016d10:	fe842703          	lw	a4,-24(s0)
20016d14:	47d9                	li	a5,22
20016d16:	00f71463          	bne	a4,a5,20016d1e <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:538
		return 30;
20016d1a:	47f9                	li	a5,30
20016d1c:	a8e5                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20016d1e:	fec42703          	lw	a4,-20(s0)
20016d22:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016d26:	00f71963          	bne	a4,a5,20016d38 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:540 (discriminator 1)
20016d2a:	fe842703          	lw	a4,-24(s0)
20016d2e:	47dd                	li	a5,23
20016d30:	00f71463          	bne	a4,a5,20016d38 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:541
		return 31;
20016d34:	47fd                	li	a5,31
20016d36:	a8f9                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20016d38:	fec42703          	lw	a4,-20(s0)
20016d3c:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016d40:	00f71a63          	bne	a4,a5,20016d54 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:543 (discriminator 1)
20016d44:	fe842703          	lw	a4,-24(s0)
20016d48:	47e1                	li	a5,24
20016d4a:	00f71563          	bne	a4,a5,20016d54 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:544
		return 32;
20016d4e:	02000793          	li	a5,32
20016d52:	a0c9                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
20016d54:	fec42703          	lw	a4,-20(s0)
20016d58:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016d5c:	00f71a63          	bne	a4,a5,20016d70 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:546 (discriminator 1)
20016d60:	fe842703          	lw	a4,-24(s0)
20016d64:	47e5                	li	a5,25
20016d66:	00f71563          	bne	a4,a5,20016d70 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:547
		return 33;
20016d6a:	02100793          	li	a5,33
20016d6e:	a05d                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
20016d70:	fec42703          	lw	a4,-20(s0)
20016d74:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016d78:	00f71a63          	bne	a4,a5,20016d8c <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:549 (discriminator 1)
20016d7c:	fe842703          	lw	a4,-24(s0)
20016d80:	47e9                	li	a5,26
20016d82:	00f71563          	bne	a4,a5,20016d8c <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:550
		return 34;
20016d86:	02200793          	li	a5,34
20016d8a:	a069                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
20016d8c:	fec42703          	lw	a4,-20(s0)
20016d90:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016d94:	00f71a63          	bne	a4,a5,20016da8 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:552 (discriminator 1)
20016d98:	fe842703          	lw	a4,-24(s0)
20016d9c:	47ed                	li	a5,27
20016d9e:	00f71563          	bne	a4,a5,20016da8 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:553
		return 35;
20016da2:	02300793          	li	a5,35
20016da6:	a0bd                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
20016da8:	fec42703          	lw	a4,-20(s0)
20016dac:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016db0:	00f71a63          	bne	a4,a5,20016dc4 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:555 (discriminator 1)
20016db4:	fe842703          	lw	a4,-24(s0)
20016db8:	47f1                	li	a5,28
20016dba:	00f71563          	bne	a4,a5,20016dc4 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:556
		return 36;
20016dbe:	02400793          	li	a5,36
20016dc2:	a889                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
20016dc4:	fec42703          	lw	a4,-20(s0)
20016dc8:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016dcc:	00f71963          	bne	a4,a5,20016dde <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:558 (discriminator 1)
20016dd0:	fe842703          	lw	a4,-24(s0)
20016dd4:	47f5                	li	a5,29
20016dd6:	00f71463          	bne	a4,a5,20016dde <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:559
		return 27;
20016dda:	47ed                	li	a5,27
20016ddc:	a825                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20016dde:	fec42703          	lw	a4,-20(s0)
20016de2:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016de6:	00f71963          	bne	a4,a5,20016df8 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:561 (discriminator 1)
20016dea:	fe842703          	lw	a4,-24(s0)
20016dee:	47f9                	li	a5,30
20016df0:	00f71463          	bne	a4,a5,20016df8 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:562
		return 28;
20016df4:	47f1                	li	a5,28
20016df6:	a839                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
20016df8:	fec42703          	lw	a4,-20(s0)
20016dfc:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
20016e00:	00f71963          	bne	a4,a5,20016e12 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:564 (discriminator 1)
20016e04:	fe842703          	lw	a4,-24(s0)
20016e08:	47fd                	li	a5,31
20016e0a:	00f71463          	bne	a4,a5,20016e12 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:565
		return 29;
20016e0e:	47f5                	li	a5,29
20016e10:	a011                	j	20016e14 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:568
		return 0;
20016e12:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:570
}
20016e14:	853e                	mv	a0,a5
20016e16:	4472                	lw	s0,28(sp)
20016e18:	6105                	addi	sp,sp,32
20016e1a:	8082                	ret

20016e1c <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20016e1c:	7179                	addi	sp,sp,-48
20016e1e:	d606                	sw	ra,44(sp)
20016e20:	d422                	sw	s0,40(sp)
20016e22:	1800                	addi	s0,sp,48
20016e24:	fca42e23          	sw	a0,-36(s0)
20016e28:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016e2c:	fdc42503          	lw	a0,-36(s0)
20016e30:	c3fff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20016e34:	87aa                	mv	a5,a0
20016e36:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20016e3a:	fec42783          	lw	a5,-20(s0)
20016e3e:	0791                	addi	a5,a5,4
20016e40:	4398                	lw	a4,0(a5)
20016e42:	fd842783          	lw	a5,-40(s0)
20016e46:	fec42683          	lw	a3,-20(s0)
20016e4a:	0691                	addi	a3,a3,4
20016e4c:	8fd9                	or	a5,a5,a4
20016e4e:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20016e50:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20016e52:	853e                	mv	a0,a5
20016e54:	50b2                	lw	ra,44(sp)
20016e56:	5422                	lw	s0,40(sp)
20016e58:	6145                	addi	sp,sp,48
20016e5a:	8082                	ret

20016e5c <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20016e5c:	7179                	addi	sp,sp,-48
20016e5e:	d606                	sw	ra,44(sp)
20016e60:	d422                	sw	s0,40(sp)
20016e62:	1800                	addi	s0,sp,48
20016e64:	fca42e23          	sw	a0,-36(s0)
20016e68:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016e6c:	fdc42503          	lw	a0,-36(s0)
20016e70:	bffff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20016e74:	87aa                	mv	a5,a0
20016e76:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20016e7a:	fec42783          	lw	a5,-20(s0)
20016e7e:	0791                	addi	a5,a5,4
20016e80:	439c                	lw	a5,0(a5)
20016e82:	fd842703          	lw	a4,-40(s0)
20016e86:	fff74713          	not	a4,a4
20016e8a:	86ba                	mv	a3,a4
20016e8c:	fec42703          	lw	a4,-20(s0)
20016e90:	0711                	addi	a4,a4,4
20016e92:	8ff5                	and	a5,a5,a3
20016e94:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20016e96:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20016e98:	853e                	mv	a0,a5
20016e9a:	50b2                	lw	ra,44(sp)
20016e9c:	5422                	lw	s0,40(sp)
20016e9e:	6145                	addi	sp,sp,48
20016ea0:	8082                	ret

20016ea2 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20016ea2:	7179                	addi	sp,sp,-48
20016ea4:	d606                	sw	ra,44(sp)
20016ea6:	d422                	sw	s0,40(sp)
20016ea8:	1800                	addi	s0,sp,48
20016eaa:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016eae:	fdc42503          	lw	a0,-36(s0)
20016eb2:	bbdff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20016eb6:	87aa                	mv	a5,a0
20016eb8:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20016ebc:	fec42783          	lw	a5,-20(s0)
20016ec0:	439c                	lw	a5,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20016ec2:	853e                	mv	a0,a5
20016ec4:	50b2                	lw	ra,44(sp)
20016ec6:	5422                	lw	s0,40(sp)
20016ec8:	6145                	addi	sp,sp,48
20016eca:	8082                	ret

20016ecc <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20016ecc:	7179                	addi	sp,sp,-48
20016ece:	d606                	sw	ra,44(sp)
20016ed0:	d422                	sw	s0,40(sp)
20016ed2:	1800                	addi	s0,sp,48
20016ed4:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016ed8:	fdc42503          	lw	a0,-36(s0)
20016edc:	b93ff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20016ee0:	87aa                	mv	a5,a0
20016ee2:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20016ee6:	fec42783          	lw	a5,-20(s0)
20016eea:	07b1                	addi	a5,a5,12
20016eec:	439c                	lw	a5,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20016eee:	853e                	mv	a0,a5
20016ef0:	50b2                	lw	ra,44(sp)
20016ef2:	5422                	lw	s0,40(sp)
20016ef4:	6145                	addi	sp,sp,48
20016ef6:	8082                	ret

20016ef8 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20016ef8:	7179                	addi	sp,sp,-48
20016efa:	d606                	sw	ra,44(sp)
20016efc:	d422                	sw	s0,40(sp)
20016efe:	1800                	addi	s0,sp,48
20016f00:	fca42e23          	sw	a0,-36(s0)
20016f04:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016f08:	fdc42503          	lw	a0,-36(s0)
20016f0c:	b63ff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20016f10:	87aa                	mv	a5,a0
20016f12:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20016f16:	fec42783          	lw	a5,-20(s0)
20016f1a:	07a1                	addi	a5,a5,8
20016f1c:	439c                	lw	a5,0(a5)
20016f1e:	fd842703          	lw	a4,-40(s0)
20016f22:	fff74713          	not	a4,a4
20016f26:	86ba                	mv	a3,a4
20016f28:	fec42703          	lw	a4,-20(s0)
20016f2c:	0721                	addi	a4,a4,8
20016f2e:	8ff5                	and	a5,a5,a3
20016f30:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20016f32:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20016f34:	853e                	mv	a0,a5
20016f36:	50b2                	lw	ra,44(sp)
20016f38:	5422                	lw	s0,40(sp)
20016f3a:	6145                	addi	sp,sp,48
20016f3c:	8082                	ret

20016f3e <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20016f3e:	7179                	addi	sp,sp,-48
20016f40:	d606                	sw	ra,44(sp)
20016f42:	d422                	sw	s0,40(sp)
20016f44:	1800                	addi	s0,sp,48
20016f46:	fca42e23          	sw	a0,-36(s0)
20016f4a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016f4e:	fdc42503          	lw	a0,-36(s0)
20016f52:	b1dff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20016f56:	87aa                	mv	a5,a0
20016f58:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20016f5c:	fec42783          	lw	a5,-20(s0)
20016f60:	07a1                	addi	a5,a5,8
20016f62:	4398                	lw	a4,0(a5)
20016f64:	fd842783          	lw	a5,-40(s0)
20016f68:	fec42683          	lw	a3,-20(s0)
20016f6c:	06a1                	addi	a3,a3,8
20016f6e:	8fd9                	or	a5,a5,a4
20016f70:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20016f72:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20016f74:	853e                	mv	a0,a5
20016f76:	50b2                	lw	ra,44(sp)
20016f78:	5422                	lw	s0,40(sp)
20016f7a:	6145                	addi	sp,sp,48
20016f7c:	8082                	ret

20016f7e <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20016f7e:	7179                	addi	sp,sp,-48
20016f80:	d606                	sw	ra,44(sp)
20016f82:	d422                	sw	s0,40(sp)
20016f84:	1800                	addi	s0,sp,48
20016f86:	fca42e23          	sw	a0,-36(s0)
20016f8a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016f8e:	fdc42503          	lw	a0,-36(s0)
20016f92:	addff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20016f96:	87aa                	mv	a5,a0
20016f98:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20016f9c:	fec42783          	lw	a5,-20(s0)
20016fa0:	07b1                	addi	a5,a5,12
20016fa2:	4398                	lw	a4,0(a5)
20016fa4:	fd842783          	lw	a5,-40(s0)
20016fa8:	fec42683          	lw	a3,-20(s0)
20016fac:	06b1                	addi	a3,a3,12
20016fae:	8fd9                	or	a5,a5,a4
20016fb0:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20016fb2:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20016fb4:	853e                	mv	a0,a5
20016fb6:	50b2                	lw	ra,44(sp)
20016fb8:	5422                	lw	s0,40(sp)
20016fba:	6145                	addi	sp,sp,48
20016fbc:	8082                	ret

20016fbe <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20016fbe:	7179                	addi	sp,sp,-48
20016fc0:	d606                	sw	ra,44(sp)
20016fc2:	d422                	sw	s0,40(sp)
20016fc4:	1800                	addi	s0,sp,48
20016fc6:	fca42e23          	sw	a0,-36(s0)
20016fca:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016fce:	fdc42503          	lw	a0,-36(s0)
20016fd2:	a9dff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20016fd6:	87aa                	mv	a5,a0
20016fd8:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20016fdc:	fec42783          	lw	a5,-20(s0)
20016fe0:	07b1                	addi	a5,a5,12
20016fe2:	439c                	lw	a5,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20016fe4:	fd842703          	lw	a4,-40(s0)
20016fe8:	fff74713          	not	a4,a4
20016fec:	86ba                	mv	a3,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20016fee:	fec42703          	lw	a4,-20(s0)
20016ff2:	0731                	addi	a4,a4,12
20016ff4:	8ff5                	and	a5,a5,a3
20016ff6:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20016ff8:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20016ffa:	853e                	mv	a0,a5
20016ffc:	50b2                	lw	ra,44(sp)
20016ffe:	5422                	lw	s0,40(sp)
20017000:	6145                	addi	sp,sp,48
20017002:	8082                	ret

20017004 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20017004:	7179                	addi	sp,sp,-48
20017006:	d606                	sw	ra,44(sp)
20017008:	d422                	sw	s0,40(sp)
2001700a:	1800                	addi	s0,sp,48
2001700c:	fca42e23          	sw	a0,-36(s0)
20017010:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20017014:	fdc42503          	lw	a0,-36(s0)
20017018:	a57ff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
2001701c:	87aa                	mv	a5,a0
2001701e:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20017022:	fec42783          	lw	a5,-20(s0)
20017026:	07b1                	addi	a5,a5,12
20017028:	4398                	lw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2001702a:	fd842783          	lw	a5,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2001702e:	fec42683          	lw	a3,-20(s0)
20017032:	06b1                	addi	a3,a3,12
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20017034:	8fb9                	xor	a5,a5,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20017036:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20017038:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:96
}
2001703a:	853e                	mv	a0,a5
2001703c:	50b2                	lw	ra,44(sp)
2001703e:	5422                	lw	s0,40(sp)
20017040:	6145                	addi	sp,sp,48
20017042:	8082                	ret

20017044 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20017044:	7179                	addi	sp,sp,-48
20017046:	d606                	sw	ra,44(sp)
20017048:	d422                	sw	s0,40(sp)
2001704a:	1800                	addi	s0,sp,48
2001704c:	fca42e23          	sw	a0,-36(s0)
20017050:	fcb42c23          	sw	a1,-40(s0)
20017054:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20017058:	fdc42503          	lw	a0,-36(s0)
2001705c:	a13ff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20017060:	87aa                	mv	a5,a0
20017062:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20017066:	fec42783          	lw	a5,-20(s0)
2001706a:	03c78793          	addi	a5,a5,60
2001706e:	4398                	lw	a4,0(a5)
20017070:	fd842783          	lw	a5,-40(s0)
20017074:	fec42683          	lw	a3,-20(s0)
20017078:	03c68693          	addi	a3,a3,60
2001707c:	8fd9                	or	a5,a5,a4
2001707e:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20017080:	fec42783          	lw	a5,-20(s0)
20017084:	03878793          	addi	a5,a5,56
20017088:	4398                	lw	a4,0(a5)
2001708a:	fd442783          	lw	a5,-44(s0)
2001708e:	fec42683          	lw	a3,-20(s0)
20017092:	03868693          	addi	a3,a3,56
20017096:	8fd9                	or	a5,a5,a4
20017098:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
2001709a:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:108
}
2001709c:	853e                	mv	a0,a5
2001709e:	50b2                	lw	ra,44(sp)
200170a0:	5422                	lw	s0,40(sp)
200170a2:	6145                	addi	sp,sp,48
200170a4:	8082                	ret

200170a6 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
200170a6:	7179                	addi	sp,sp,-48
200170a8:	d606                	sw	ra,44(sp)
200170aa:	d422                	sw	s0,40(sp)
200170ac:	1800                	addi	s0,sp,48
200170ae:	fca42e23          	sw	a0,-36(s0)
200170b2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200170b6:	fdc42503          	lw	a0,-36(s0)
200170ba:	9b5ff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
200170be:	87aa                	mv	a5,a0
200170c0:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
200170c4:	fec42783          	lw	a5,-20(s0)
200170c8:	03878793          	addi	a5,a5,56
200170cc:	439c                	lw	a5,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
200170ce:	fd842703          	lw	a4,-40(s0)
200170d2:	fff74713          	not	a4,a4
200170d6:	86ba                	mv	a3,a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
200170d8:	fec42703          	lw	a4,-20(s0)
200170dc:	03870713          	addi	a4,a4,56
200170e0:	8ff5                	and	a5,a5,a3
200170e2:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
200170e4:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:118
}
200170e6:	853e                	mv	a0,a5
200170e8:	50b2                	lw	ra,44(sp)
200170ea:	5422                	lw	s0,40(sp)
200170ec:	6145                	addi	sp,sp,48
200170ee:	8082                	ret

200170f0 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
200170f0:	7179                	addi	sp,sp,-48
200170f2:	d606                	sw	ra,44(sp)
200170f4:	d422                	sw	s0,40(sp)
200170f6:	1800                	addi	s0,sp,48
200170f8:	fca42e23          	sw	a0,-36(s0)
200170fc:	fcb42c23          	sw	a1,-40(s0)
20017100:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20017104:	fdc42503          	lw	a0,-36(s0)
20017108:	967ff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
2001710c:	87aa                	mv	a5,a0
2001710e:	fef42623          	sw	a5,-20(s0)
20017112:	fd442703          	lw	a4,-44(s0)
20017116:	479d                	li	a5,7
20017118:	1ce7e963          	bltu	a5,a4,200172ea <__metal_driver_sifive_gpio0_config_int+0x1fa>
2001711c:	fd442783          	lw	a5,-44(s0)
20017120:	00279713          	slli	a4,a5,0x2
20017124:	200117b7          	lui	a5,0x20011
20017128:	f5878793          	addi	a5,a5,-168 # 20010f58 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
2001712c:	97ba                	add	a5,a5,a4
2001712e:	439c                	lw	a5,0(a5)
20017130:	8782                	jr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20017132:	fec42783          	lw	a5,-20(s0)
20017136:	07e1                	addi	a5,a5,24
20017138:	439c                	lw	a5,0(a5)
2001713a:	fd842703          	lw	a4,-40(s0)
2001713e:	fff74713          	not	a4,a4
20017142:	86ba                	mv	a3,a4
20017144:	fec42703          	lw	a4,-20(s0)
20017148:	0761                	addi	a4,a4,24
2001714a:	8ff5                	and	a5,a5,a3
2001714c:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
2001714e:	fec42783          	lw	a5,-20(s0)
20017152:	02078793          	addi	a5,a5,32
20017156:	439c                	lw	a5,0(a5)
20017158:	fd842703          	lw	a4,-40(s0)
2001715c:	fff74713          	not	a4,a4
20017160:	86ba                	mv	a3,a4
20017162:	fec42703          	lw	a4,-20(s0)
20017166:	02070713          	addi	a4,a4,32
2001716a:	8ff5                	and	a5,a5,a3
2001716c:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
2001716e:	fec42783          	lw	a5,-20(s0)
20017172:	02878793          	addi	a5,a5,40
20017176:	439c                	lw	a5,0(a5)
20017178:	fd842703          	lw	a4,-40(s0)
2001717c:	fff74713          	not	a4,a4
20017180:	86ba                	mv	a3,a4
20017182:	fec42703          	lw	a4,-20(s0)
20017186:	02870713          	addi	a4,a4,40
2001718a:	8ff5                	and	a5,a5,a3
2001718c:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
2001718e:	fec42783          	lw	a5,-20(s0)
20017192:	03078793          	addi	a5,a5,48
20017196:	439c                	lw	a5,0(a5)
20017198:	fd842703          	lw	a4,-40(s0)
2001719c:	fff74713          	not	a4,a4
200171a0:	86ba                	mv	a3,a4
200171a2:	fec42703          	lw	a4,-20(s0)
200171a6:	03070713          	addi	a4,a4,48
200171aa:	8ff5                	and	a5,a5,a3
200171ac:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
200171ae:	aa35                	j	200172ea <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
200171b0:	fec42783          	lw	a5,-20(s0)
200171b4:	07e1                	addi	a5,a5,24
200171b6:	4398                	lw	a4,0(a5)
200171b8:	fd842783          	lw	a5,-40(s0)
200171bc:	fec42683          	lw	a3,-20(s0)
200171c0:	06e1                	addi	a3,a3,24
200171c2:	8fd9                	or	a5,a5,a4
200171c4:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
200171c6:	a215                	j	200172ea <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
200171c8:	fec42783          	lw	a5,-20(s0)
200171cc:	02078793          	addi	a5,a5,32
200171d0:	4398                	lw	a4,0(a5)
200171d2:	fd842783          	lw	a5,-40(s0)
200171d6:	fec42683          	lw	a3,-20(s0)
200171da:	02068693          	addi	a3,a3,32
200171de:	8fd9                	or	a5,a5,a4
200171e0:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
200171e2:	a221                	j	200172ea <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
200171e4:	fec42783          	lw	a5,-20(s0)
200171e8:	07e1                	addi	a5,a5,24
200171ea:	4398                	lw	a4,0(a5)
200171ec:	fd842783          	lw	a5,-40(s0)
200171f0:	fec42683          	lw	a3,-20(s0)
200171f4:	06e1                	addi	a3,a3,24
200171f6:	8fd9                	or	a5,a5,a4
200171f8:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
200171fa:	fec42783          	lw	a5,-20(s0)
200171fe:	02078793          	addi	a5,a5,32
20017202:	4398                	lw	a4,0(a5)
20017204:	fd842783          	lw	a5,-40(s0)
20017208:	fec42683          	lw	a3,-20(s0)
2001720c:	02068693          	addi	a3,a3,32
20017210:	8fd9                	or	a5,a5,a4
20017212:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20017214:	a8d9                	j	200172ea <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20017216:	fec42783          	lw	a5,-20(s0)
2001721a:	02878793          	addi	a5,a5,40
2001721e:	4398                	lw	a4,0(a5)
20017220:	fd842783          	lw	a5,-40(s0)
20017224:	fec42683          	lw	a3,-20(s0)
20017228:	02868693          	addi	a3,a3,40
2001722c:	8fd9                	or	a5,a5,a4
2001722e:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20017230:	a86d                	j	200172ea <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20017232:	fec42783          	lw	a5,-20(s0)
20017236:	03078793          	addi	a5,a5,48
2001723a:	4398                	lw	a4,0(a5)
2001723c:	fd842783          	lw	a5,-40(s0)
20017240:	fec42683          	lw	a3,-20(s0)
20017244:	03068693          	addi	a3,a3,48
20017248:	8fd9                	or	a5,a5,a4
2001724a:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
2001724c:	a879                	j	200172ea <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2001724e:	fec42783          	lw	a5,-20(s0)
20017252:	02878793          	addi	a5,a5,40
20017256:	4398                	lw	a4,0(a5)
20017258:	fd842783          	lw	a5,-40(s0)
2001725c:	fec42683          	lw	a3,-20(s0)
20017260:	02868693          	addi	a3,a3,40
20017264:	8fd9                	or	a5,a5,a4
20017266:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20017268:	fec42783          	lw	a5,-20(s0)
2001726c:	03078793          	addi	a5,a5,48
20017270:	4398                	lw	a4,0(a5)
20017272:	fd842783          	lw	a5,-40(s0)
20017276:	fec42683          	lw	a3,-20(s0)
2001727a:	03068693          	addi	a3,a3,48
2001727e:	8fd9                	or	a5,a5,a4
20017280:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20017282:	a0a5                	j	200172ea <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20017284:	fec42783          	lw	a5,-20(s0)
20017288:	07e1                	addi	a5,a5,24
2001728a:	4398                	lw	a4,0(a5)
2001728c:	fd842783          	lw	a5,-40(s0)
20017290:	fec42683          	lw	a3,-20(s0)
20017294:	06e1                	addi	a3,a3,24
20017296:	8fd9                	or	a5,a5,a4
20017298:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2001729a:	fec42783          	lw	a5,-20(s0)
2001729e:	02078793          	addi	a5,a5,32
200172a2:	4398                	lw	a4,0(a5)
200172a4:	fd842783          	lw	a5,-40(s0)
200172a8:	fec42683          	lw	a3,-20(s0)
200172ac:	02068693          	addi	a3,a3,32
200172b0:	8fd9                	or	a5,a5,a4
200172b2:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
200172b4:	fec42783          	lw	a5,-20(s0)
200172b8:	02878793          	addi	a5,a5,40
200172bc:	4398                	lw	a4,0(a5)
200172be:	fd842783          	lw	a5,-40(s0)
200172c2:	fec42683          	lw	a3,-20(s0)
200172c6:	02868693          	addi	a3,a3,40
200172ca:	8fd9                	or	a5,a5,a4
200172cc:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
200172ce:	fec42783          	lw	a5,-20(s0)
200172d2:	03078793          	addi	a5,a5,48
200172d6:	4398                	lw	a4,0(a5)
200172d8:	fd842783          	lw	a5,-40(s0)
200172dc:	fec42683          	lw	a3,-20(s0)
200172e0:	03068693          	addi	a3,a3,48
200172e4:	8fd9                	or	a5,a5,a4
200172e6:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
200172e8:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
200172ea:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:175
}
200172ec:	853e                	mv	a0,a5
200172ee:	50b2                	lw	ra,44(sp)
200172f0:	5422                	lw	s0,40(sp)
200172f2:	6145                	addi	sp,sp,48
200172f4:	8082                	ret

200172f6 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
200172f6:	7179                	addi	sp,sp,-48
200172f8:	d606                	sw	ra,44(sp)
200172fa:	d422                	sw	s0,40(sp)
200172fc:	1800                	addi	s0,sp,48
200172fe:	fca42e23          	sw	a0,-36(s0)
20017302:	fcb42c23          	sw	a1,-40(s0)
20017306:	fcc42a23          	sw	a2,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001730a:	fdc42503          	lw	a0,-36(s0)
2001730e:	f60ff0ef          	jal	ra,20016a6e <__metal_driver_sifive_gpio0_base>
20017312:	87aa                	mv	a5,a0
20017314:	fef42623          	sw	a5,-20(s0)
20017318:	fd442703          	lw	a4,-44(s0)
2001731c:	479d                	li	a5,7
2001731e:	14e7ea63          	bltu	a5,a4,20017472 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20017322:	fd442783          	lw	a5,-44(s0)
20017326:	00279713          	slli	a4,a5,0x2
2001732a:	200117b7          	lui	a5,0x20011
2001732e:	f7878793          	addi	a5,a5,-136 # 20010f78 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20017332:	97ba                	add	a5,a5,a4
20017334:	439c                	lw	a5,0(a5)
20017336:	8782                	jr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20017338:	fec42783          	lw	a5,-20(s0)
2001733c:	07f1                	addi	a5,a5,28
2001733e:	4398                	lw	a4,0(a5)
20017340:	fd842783          	lw	a5,-40(s0)
20017344:	fec42683          	lw	a3,-20(s0)
20017348:	06f1                	addi	a3,a3,28
2001734a:	8fd9                	or	a5,a5,a4
2001734c:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
2001734e:	a215                	j	20017472 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20017350:	fec42783          	lw	a5,-20(s0)
20017354:	02478793          	addi	a5,a5,36
20017358:	4398                	lw	a4,0(a5)
2001735a:	fd842783          	lw	a5,-40(s0)
2001735e:	fec42683          	lw	a3,-20(s0)
20017362:	02468693          	addi	a3,a3,36
20017366:	8fd9                	or	a5,a5,a4
20017368:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
2001736a:	a221                	j	20017472 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2001736c:	fec42783          	lw	a5,-20(s0)
20017370:	07f1                	addi	a5,a5,28
20017372:	4398                	lw	a4,0(a5)
20017374:	fd842783          	lw	a5,-40(s0)
20017378:	fec42683          	lw	a3,-20(s0)
2001737c:	06f1                	addi	a3,a3,28
2001737e:	8fd9                	or	a5,a5,a4
20017380:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20017382:	fec42783          	lw	a5,-20(s0)
20017386:	02478793          	addi	a5,a5,36
2001738a:	4398                	lw	a4,0(a5)
2001738c:	fd842783          	lw	a5,-40(s0)
20017390:	fec42683          	lw	a3,-20(s0)
20017394:	02468693          	addi	a3,a3,36
20017398:	8fd9                	or	a5,a5,a4
2001739a:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
2001739c:	a8d9                	j	20017472 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2001739e:	fec42783          	lw	a5,-20(s0)
200173a2:	02c78793          	addi	a5,a5,44
200173a6:	4398                	lw	a4,0(a5)
200173a8:	fd842783          	lw	a5,-40(s0)
200173ac:	fec42683          	lw	a3,-20(s0)
200173b0:	02c68693          	addi	a3,a3,44
200173b4:	8fd9                	or	a5,a5,a4
200173b6:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
200173b8:	a86d                	j	20017472 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
200173ba:	fec42783          	lw	a5,-20(s0)
200173be:	03478793          	addi	a5,a5,52
200173c2:	4398                	lw	a4,0(a5)
200173c4:	fd842783          	lw	a5,-40(s0)
200173c8:	fec42683          	lw	a3,-20(s0)
200173cc:	03468693          	addi	a3,a3,52
200173d0:	8fd9                	or	a5,a5,a4
200173d2:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
200173d4:	a879                	j	20017472 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
200173d6:	fec42783          	lw	a5,-20(s0)
200173da:	02c78793          	addi	a5,a5,44
200173de:	4398                	lw	a4,0(a5)
200173e0:	fd842783          	lw	a5,-40(s0)
200173e4:	fec42683          	lw	a3,-20(s0)
200173e8:	02c68693          	addi	a3,a3,44
200173ec:	8fd9                	or	a5,a5,a4
200173ee:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
200173f0:	fec42783          	lw	a5,-20(s0)
200173f4:	03478793          	addi	a5,a5,52
200173f8:	4398                	lw	a4,0(a5)
200173fa:	fd842783          	lw	a5,-40(s0)
200173fe:	fec42683          	lw	a3,-20(s0)
20017402:	03468693          	addi	a3,a3,52
20017406:	8fd9                	or	a5,a5,a4
20017408:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
2001740a:	a0a5                	j	20017472 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2001740c:	fec42783          	lw	a5,-20(s0)
20017410:	07f1                	addi	a5,a5,28
20017412:	4398                	lw	a4,0(a5)
20017414:	fd842783          	lw	a5,-40(s0)
20017418:	fec42683          	lw	a3,-20(s0)
2001741c:	06f1                	addi	a3,a3,28
2001741e:	8fd9                	or	a5,a5,a4
20017420:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20017422:	fec42783          	lw	a5,-20(s0)
20017426:	02478793          	addi	a5,a5,36
2001742a:	4398                	lw	a4,0(a5)
2001742c:	fd842783          	lw	a5,-40(s0)
20017430:	fec42683          	lw	a3,-20(s0)
20017434:	02468693          	addi	a3,a3,36
20017438:	8fd9                	or	a5,a5,a4
2001743a:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2001743c:	fec42783          	lw	a5,-20(s0)
20017440:	02c78793          	addi	a5,a5,44
20017444:	4398                	lw	a4,0(a5)
20017446:	fd842783          	lw	a5,-40(s0)
2001744a:	fec42683          	lw	a3,-20(s0)
2001744e:	02c68693          	addi	a3,a3,44
20017452:	8fd9                	or	a5,a5,a4
20017454:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20017456:	fec42783          	lw	a5,-20(s0)
2001745a:	03478793          	addi	a5,a5,52
2001745e:	4398                	lw	a4,0(a5)
20017460:	fd842783          	lw	a5,-40(s0)
20017464:	fec42683          	lw	a3,-20(s0)
20017468:	03468693          	addi	a3,a3,52
2001746c:	8fd9                	or	a5,a5,a4
2001746e:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20017470:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20017472:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20017474:	853e                	mv	a0,a5
20017476:	50b2                	lw	ra,44(sp)
20017478:	5422                	lw	s0,40(sp)
2001747a:	6145                	addi	sp,sp,48
2001747c:	8082                	ret

2001747e <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
2001747e:	1101                	addi	sp,sp,-32
20017480:	ce06                	sw	ra,28(sp)
20017482:	cc22                	sw	s0,24(sp)
20017484:	1000                	addi	s0,sp,32
20017486:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
2001748a:	fec42503          	lw	a0,-20(s0)
2001748e:	e06ff0ef          	jal	ra,20016a94 <__metal_driver_sifive_gpio0_interrupt_parent>
20017492:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20017494:	853e                	mv	a0,a5
20017496:	40f2                	lw	ra,28(sp)
20017498:	4462                	lw	s0,24(sp)
2001749a:	6105                	addi	sp,sp,32
2001749c:	8082                	ret

2001749e <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
2001749e:	7179                	addi	sp,sp,-48
200174a0:	d606                	sw	ra,44(sp)
200174a2:	d422                	sw	s0,40(sp)
200174a4:	1800                	addi	s0,sp,48
200174a6:	fca42e23          	sw	a0,-36(s0)
200174aa:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
200174ae:	fd842583          	lw	a1,-40(s0)
200174b2:	fdc42503          	lw	a0,-36(s0)
200174b6:	e08ff0ef          	jal	ra,20016abe <__metal_driver_sifive_gpio0_interrupt_lines>
200174ba:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
200174be:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_gpio0.c:233
}
200174c2:	853e                	mv	a0,a5
200174c4:	50b2                	lw	ra,44(sp)
200174c6:	5422                	lw	s0,40(sp)
200174c8:	6145                	addi	sp,sp,48
200174ca:	8082                	ret

200174cc <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1066
{
200174cc:	1101                	addi	sp,sp,-32
200174ce:	ce22                	sw	s0,28(sp)
200174d0:	1000                	addi	s0,sp,32
200174d2:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1067
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
200174d6:	fec42703          	lw	a4,-20(s0)
200174da:	800027b7          	lui	a5,0x80002
200174de:	a3878793          	addi	a5,a5,-1480 # 80001a38 <metal_segment_heap_target_end+0xfffff2c8>
200174e2:	00f71563          	bne	a4,a5,200174ec <__metal_driver_sifive_uart0_control_base+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1068
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
200174e6:	100137b7          	lui	a5,0x10013
200174ea:	a829                	j	20017504 <__metal_driver_sifive_uart0_control_base+0x38>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1070
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
200174ec:	fec42703          	lw	a4,-20(s0)
200174f0:	800027b7          	lui	a5,0x80002
200174f4:	a5878793          	addi	a5,a5,-1448 # 80001a58 <metal_segment_heap_target_end+0xfffff2e8>
200174f8:	00f71563          	bne	a4,a5,20017502 <__metal_driver_sifive_uart0_control_base+0x36>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1071
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
200174fc:	100237b7          	lui	a5,0x10023
20017500:	a011                	j	20017504 <__metal_driver_sifive_uart0_control_base+0x38>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1074
		return 0;
20017502:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1076
}
20017504:	853e                	mv	a0,a5
20017506:	4472                	lw	s0,28(sp)
20017508:	6105                	addi	sp,sp,32
2001750a:	8082                	ret

2001750c <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1105
{
2001750c:	1101                	addi	sp,sp,-32
2001750e:	ce22                	sw	s0,28(sp)
20017510:	1000                	addi	s0,sp,32
20017512:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1106
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017516:	fec42703          	lw	a4,-20(s0)
2001751a:	800027b7          	lui	a5,0x80002
2001751e:	a3878793          	addi	a5,a5,-1480 # 80001a38 <metal_segment_heap_target_end+0xfffff2c8>
20017522:	00f71763          	bne	a4,a5,20017530 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1107
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20017526:	800017b7          	lui	a5,0x80001
2001752a:	46078793          	addi	a5,a5,1120 # 80001460 <metal_segment_heap_target_end+0xffffecf0>
2001752e:	a839                	j	2001754c <__metal_driver_sifive_uart0_interrupt_parent+0x40>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1109
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017530:	fec42703          	lw	a4,-20(s0)
20017534:	800027b7          	lui	a5,0x80002
20017538:	a5878793          	addi	a5,a5,-1448 # 80001a58 <metal_segment_heap_target_end+0xfffff2e8>
2001753c:	00f71763          	bne	a4,a5,2001754a <__metal_driver_sifive_uart0_interrupt_parent+0x3e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1110
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20017540:	800017b7          	lui	a5,0x80001
20017544:	46078793          	addi	a5,a5,1120 # 80001460 <metal_segment_heap_target_end+0xffffecf0>
20017548:	a011                	j	2001754c <__metal_driver_sifive_uart0_interrupt_parent+0x40>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1113
		return 0;
2001754a:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1115
}
2001754c:	853e                	mv	a0,a5
2001754e:	4472                	lw	s0,28(sp)
20017550:	6105                	addi	sp,sp,32
20017552:	8082                	ret

20017554 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1118
{
20017554:	1101                	addi	sp,sp,-32
20017556:	ce22                	sw	s0,28(sp)
20017558:	1000                	addi	s0,sp,32
2001755a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1119
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2001755e:	fec42703          	lw	a4,-20(s0)
20017562:	800027b7          	lui	a5,0x80002
20017566:	a3878793          	addi	a5,a5,-1480 # 80001a38 <metal_segment_heap_target_end+0xfffff2c8>
2001756a:	00f71463          	bne	a4,a5,20017572 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1120
		return 3;
2001756e:	478d                	li	a5,3
20017570:	a821                	j	20017588 <__metal_driver_sifive_uart0_interrupt_line+0x34>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1122
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017572:	fec42703          	lw	a4,-20(s0)
20017576:	800027b7          	lui	a5,0x80002
2001757a:	a5878793          	addi	a5,a5,-1448 # 80001a58 <metal_segment_heap_target_end+0xfffff2e8>
2001757e:	00f71463          	bne	a4,a5,20017586 <__metal_driver_sifive_uart0_interrupt_line+0x32>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1123
		return 4;
20017582:	4791                	li	a5,4
20017584:	a011                	j	20017588 <__metal_driver_sifive_uart0_interrupt_line+0x34>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1126
		return 0;
20017586:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1128
}
20017588:	853e                	mv	a0,a5
2001758a:	4472                	lw	s0,28(sp)
2001758c:	6105                	addi	sp,sp,32
2001758e:	8082                	ret

20017590 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1131
{
20017590:	1101                	addi	sp,sp,-32
20017592:	ce22                	sw	s0,28(sp)
20017594:	1000                	addi	s0,sp,32
20017596:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1132
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2001759a:	fec42703          	lw	a4,-20(s0)
2001759e:	800027b7          	lui	a5,0x80002
200175a2:	a3878793          	addi	a5,a5,-1480 # 80001a38 <metal_segment_heap_target_end+0xfffff2c8>
200175a6:	00f71763          	bne	a4,a5,200175b4 <__metal_driver_sifive_uart0_clock+0x24>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1133
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
200175aa:	800027b7          	lui	a5,0x80002
200175ae:	a9078793          	addi	a5,a5,-1392 # 80001a90 <metal_segment_heap_target_end+0xfffff320>
200175b2:	a839                	j	200175d0 <__metal_driver_sifive_uart0_clock+0x40>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1135
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
200175b4:	fec42703          	lw	a4,-20(s0)
200175b8:	800027b7          	lui	a5,0x80002
200175bc:	a5878793          	addi	a5,a5,-1448 # 80001a58 <metal_segment_heap_target_end+0xfffff2e8>
200175c0:	00f71763          	bne	a4,a5,200175ce <__metal_driver_sifive_uart0_clock+0x3e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1136
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
200175c4:	800027b7          	lui	a5,0x80002
200175c8:	a9078793          	addi	a5,a5,-1392 # 80001a90 <metal_segment_heap_target_end+0xfffff320>
200175cc:	a011                	j	200175d0 <__metal_driver_sifive_uart0_clock+0x40>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1139
		return 0;
200175ce:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1141
}
200175d0:	853e                	mv	a0,a5
200175d2:	4472                	lw	s0,28(sp)
200175d4:	6105                	addi	sp,sp,32
200175d6:	8082                	ret

200175d8 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1144
{
200175d8:	1101                	addi	sp,sp,-32
200175da:	ce22                	sw	s0,28(sp)
200175dc:	1000                	addi	s0,sp,32
200175de:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1145
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
200175e2:	fec42703          	lw	a4,-20(s0)
200175e6:	800027b7          	lui	a5,0x80002
200175ea:	a3878793          	addi	a5,a5,-1480 # 80001a38 <metal_segment_heap_target_end+0xfffff2c8>
200175ee:	00f71563          	bne	a4,a5,200175f8 <__metal_driver_sifive_uart0_pinmux+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1146
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
200175f2:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
200175f6:	a829                	j	20017610 <__metal_driver_sifive_uart0_pinmux+0x38>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1148
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
200175f8:	fec42703          	lw	a4,-20(s0)
200175fc:	800027b7          	lui	a5,0x80002
20017600:	a5878793          	addi	a5,a5,-1448 # 80001a58 <metal_segment_heap_target_end+0xfffff2e8>
20017604:	00f71563          	bne	a4,a5,2001760e <__metal_driver_sifive_uart0_pinmux+0x36>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1149
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20017608:	81c18793          	addi	a5,gp,-2020 # 80001abc <__metal_dt_gpio_10012000>
2001760c:	a011                	j	20017610 <__metal_driver_sifive_uart0_pinmux+0x38>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1152
		return 0;
2001760e:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1154
}
20017610:	853e                	mv	a0,a5
20017612:	4472                	lw	s0,28(sp)
20017614:	6105                	addi	sp,sp,32
20017616:	8082                	ret

20017618 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1157
{
20017618:	1101                	addi	sp,sp,-32
2001761a:	ce22                	sw	s0,28(sp)
2001761c:	1000                	addi	s0,sp,32
2001761e:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1158
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017622:	fec42703          	lw	a4,-20(s0)
20017626:	800027b7          	lui	a5,0x80002
2001762a:	a3878793          	addi	a5,a5,-1480 # 80001a38 <metal_segment_heap_target_end+0xfffff2c8>
2001762e:	00f71463          	bne	a4,a5,20017636 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1159
		return 0;
20017632:	4781                	li	a5,0
20017634:	a821                	j	2001764c <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1161
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017636:	fec42703          	lw	a4,-20(s0)
2001763a:	800027b7          	lui	a5,0x80002
2001763e:	a5878793          	addi	a5,a5,-1448 # 80001a58 <metal_segment_heap_target_end+0xfffff2e8>
20017642:	00f71463          	bne	a4,a5,2001764a <__metal_driver_sifive_uart0_pinmux_output_selector+0x32>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1162
		return 0;
20017646:	4781                	li	a5,0
20017648:	a011                	j	2001764c <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1165
		return 0;
2001764a:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1167
}
2001764c:	853e                	mv	a0,a5
2001764e:	4472                	lw	s0,28(sp)
20017650:	6105                	addi	sp,sp,32
20017652:	8082                	ret

20017654 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1170
{
20017654:	1101                	addi	sp,sp,-32
20017656:	ce22                	sw	s0,28(sp)
20017658:	1000                	addi	s0,sp,32
2001765a:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1171
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2001765e:	fec42703          	lw	a4,-20(s0)
20017662:	800027b7          	lui	a5,0x80002
20017666:	a3878793          	addi	a5,a5,-1480 # 80001a38 <metal_segment_heap_target_end+0xfffff2c8>
2001766a:	00f71563          	bne	a4,a5,20017674 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1172
		return 196608;
2001766e:	000307b7          	lui	a5,0x30
20017672:	a829                	j	2001768c <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1174
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017674:	fec42703          	lw	a4,-20(s0)
20017678:	800027b7          	lui	a5,0x80002
2001767c:	a5878793          	addi	a5,a5,-1448 # 80001a58 <metal_segment_heap_target_end+0xfffff2e8>
20017680:	00f71563          	bne	a4,a5,2001768a <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1175
		return 8650752;
20017684:	008407b7          	lui	a5,0x840
20017688:	a011                	j	2001768c <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1178
		return 0;
2001768a:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:1180
}
2001768c:	853e                	mv	a0,a5
2001768e:	4472                	lw	s0,28(sp)
20017690:	6105                	addi	sp,sp,32
20017692:	8082                	ret

20017694 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20017694:	1101                	addi	sp,sp,-32
20017696:	ce06                	sw	ra,28(sp)
20017698:	cc22                	sw	s0,24(sp)
2001769a:	1000                	addi	s0,sp,32
2001769c:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
200176a0:	fec42503          	lw	a0,-20(s0)
200176a4:	e69ff0ef          	jal	ra,2001750c <__metal_driver_sifive_uart0_interrupt_parent>
200176a8:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:39
}
200176aa:	853e                	mv	a0,a5
200176ac:	40f2                	lw	ra,28(sp)
200176ae:	4462                	lw	s0,24(sp)
200176b0:	6105                	addi	sp,sp,32
200176b2:	8082                	ret

200176b4 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
200176b4:	1101                	addi	sp,sp,-32
200176b6:	ce06                	sw	ra,28(sp)
200176b8:	cc22                	sw	s0,24(sp)
200176ba:	1000                	addi	s0,sp,32
200176bc:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
200176c0:	fec42503          	lw	a0,-20(s0)
200176c4:	3d41                	jal	20017554 <__metal_driver_sifive_uart0_interrupt_line>
200176c6:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:43
}
200176c8:	853e                	mv	a0,a5
200176ca:	40f2                	lw	ra,28(sp)
200176cc:	4462                	lw	s0,24(sp)
200176ce:	6105                	addi	sp,sp,32
200176d0:	8082                	ret

200176d2 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
200176d2:	7179                	addi	sp,sp,-48
200176d4:	d606                	sw	ra,44(sp)
200176d6:	d422                	sw	s0,40(sp)
200176d8:	1800                	addi	s0,sp,48
200176da:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200176de:	fdc42503          	lw	a0,-36(s0)
200176e2:	debff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
200176e6:	87aa                	mv	a5,a0
200176e8:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
200176ec:	fec42783          	lw	a5,-20(s0)
200176f0:	07c1                	addi	a5,a5,16
200176f2:	439c                	lw	a5,0(a5)
200176f4:	fec42703          	lw	a4,-20(s0)
200176f8:	0741                	addi	a4,a4,16
200176fa:	0017e793          	ori	a5,a5,1
200176fe:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20017700:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:50
}
20017702:	853e                	mv	a0,a5
20017704:	50b2                	lw	ra,44(sp)
20017706:	5422                	lw	s0,40(sp)
20017708:	6145                	addi	sp,sp,48
2001770a:	8082                	ret

2001770c <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
2001770c:	7179                	addi	sp,sp,-48
2001770e:	d606                	sw	ra,44(sp)
20017710:	d422                	sw	s0,40(sp)
20017712:	1800                	addi	s0,sp,48
20017714:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017718:	fdc42503          	lw	a0,-36(s0)
2001771c:	db1ff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
20017720:	87aa                	mv	a5,a0
20017722:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20017726:	fec42783          	lw	a5,-20(s0)
2001772a:	07c1                	addi	a5,a5,16
2001772c:	439c                	lw	a5,0(a5)
2001772e:	fec42703          	lw	a4,-20(s0)
20017732:	0741                	addi	a4,a4,16
20017734:	9bf9                	andi	a5,a5,-2
20017736:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20017738:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:57
}
2001773a:	853e                	mv	a0,a5
2001773c:	50b2                	lw	ra,44(sp)
2001773e:	5422                	lw	s0,40(sp)
20017740:	6145                	addi	sp,sp,48
20017742:	8082                	ret

20017744 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20017744:	7179                	addi	sp,sp,-48
20017746:	d606                	sw	ra,44(sp)
20017748:	d422                	sw	s0,40(sp)
2001774a:	1800                	addi	s0,sp,48
2001774c:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017750:	fdc42503          	lw	a0,-36(s0)
20017754:	d79ff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
20017758:	87aa                	mv	a5,a0
2001775a:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
2001775e:	fec42783          	lw	a5,-20(s0)
20017762:	07c1                	addi	a5,a5,16
20017764:	439c                	lw	a5,0(a5)
20017766:	fec42703          	lw	a4,-20(s0)
2001776a:	0741                	addi	a4,a4,16
2001776c:	0027e793          	ori	a5,a5,2
20017770:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20017772:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:64
}
20017774:	853e                	mv	a0,a5
20017776:	50b2                	lw	ra,44(sp)
20017778:	5422                	lw	s0,40(sp)
2001777a:	6145                	addi	sp,sp,48
2001777c:	8082                	ret

2001777e <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
2001777e:	7179                	addi	sp,sp,-48
20017780:	d606                	sw	ra,44(sp)
20017782:	d422                	sw	s0,40(sp)
20017784:	1800                	addi	s0,sp,48
20017786:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001778a:	fdc42503          	lw	a0,-36(s0)
2001778e:	d3fff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
20017792:	87aa                	mv	a5,a0
20017794:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20017798:	fec42783          	lw	a5,-20(s0)
2001779c:	07c1                	addi	a5,a5,16
2001779e:	439c                	lw	a5,0(a5)
200177a0:	fec42703          	lw	a4,-20(s0)
200177a4:	0741                	addi	a4,a4,16
200177a6:	9bf5                	andi	a5,a5,-3
200177a8:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
200177aa:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:71
}
200177ac:	853e                	mv	a0,a5
200177ae:	50b2                	lw	ra,44(sp)
200177b0:	5422                	lw	s0,40(sp)
200177b2:	6145                	addi	sp,sp,48
200177b4:	8082                	ret

200177b6 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
200177b6:	7179                	addi	sp,sp,-48
200177b8:	d606                	sw	ra,44(sp)
200177ba:	d422                	sw	s0,40(sp)
200177bc:	1800                	addi	s0,sp,48
200177be:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200177c2:	fdc42503          	lw	a0,-36(s0)
200177c6:	d07ff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
200177ca:	87aa                	mv	a5,a0
200177cc:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
200177d0:	fec42783          	lw	a5,-20(s0)
200177d4:	439c                	lw	a5,0(a5)
200177d6:	83fd                	srli	a5,a5,0x1f
200177d8:	0ff7f793          	zext.b	a5,a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:77
}
200177dc:	853e                	mv	a0,a5
200177de:	50b2                	lw	ra,44(sp)
200177e0:	5422                	lw	s0,40(sp)
200177e2:	6145                	addi	sp,sp,48
200177e4:	8082                	ret

200177e6 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
200177e6:	7179                	addi	sp,sp,-48
200177e8:	d606                	sw	ra,44(sp)
200177ea:	d422                	sw	s0,40(sp)
200177ec:	1800                	addi	s0,sp,48
200177ee:	fca42e23          	sw	a0,-36(s0)
200177f2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200177f6:	fdc42503          	lw	a0,-36(s0)
200177fa:	cd3ff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
200177fe:	87aa                	mv	a5,a0
20017800:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20017804:	fec42783          	lw	a5,-20(s0)
20017808:	07a1                	addi	a5,a5,8
2001780a:	4398                	lw	a4,0(a5)
2001780c:	fd842783          	lw	a5,-40(s0)
20017810:	01079693          	slli	a3,a5,0x10
20017814:	000707b7          	lui	a5,0x70
20017818:	8ff5                	and	a5,a5,a3
2001781a:	fec42683          	lw	a3,-20(s0)
2001781e:	06a1                	addi	a3,a3,8
20017820:	8fd9                	or	a5,a5,a4
20017822:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20017824:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:85
}
20017826:	853e                	mv	a0,a5
20017828:	50b2                	lw	ra,44(sp)
2001782a:	5422                	lw	s0,40(sp)
2001782c:	6145                	addi	sp,sp,48
2001782e:	8082                	ret

20017830 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20017830:	7179                	addi	sp,sp,-48
20017832:	d606                	sw	ra,44(sp)
20017834:	d422                	sw	s0,40(sp)
20017836:	1800                	addi	s0,sp,48
20017838:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001783c:	fdc42503          	lw	a0,-36(s0)
20017840:	c8dff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
20017844:	87aa                	mv	a5,a0
20017846:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
2001784a:	fec42783          	lw	a5,-20(s0)
2001784e:	07a1                	addi	a5,a5,8
20017850:	439c                	lw	a5,0(a5)
20017852:	83c1                	srli	a5,a5,0x10
20017854:	8b9d                	andi	a5,a5,7
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:91
}
20017856:	853e                	mv	a0,a5
20017858:	50b2                	lw	ra,44(sp)
2001785a:	5422                	lw	s0,40(sp)
2001785c:	6145                	addi	sp,sp,48
2001785e:	8082                	ret

20017860 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20017860:	7179                	addi	sp,sp,-48
20017862:	d606                	sw	ra,44(sp)
20017864:	d422                	sw	s0,40(sp)
20017866:	1800                	addi	s0,sp,48
20017868:	fca42e23          	sw	a0,-36(s0)
2001786c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017870:	fdc42503          	lw	a0,-36(s0)
20017874:	c59ff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
20017878:	87aa                	mv	a5,a0
2001787a:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
2001787e:	fec42783          	lw	a5,-20(s0)
20017882:	07b1                	addi	a5,a5,12
20017884:	4398                	lw	a4,0(a5)
20017886:	fd842783          	lw	a5,-40(s0)
2001788a:	01079693          	slli	a3,a5,0x10
2001788e:	000707b7          	lui	a5,0x70
20017892:	8ff5                	and	a5,a5,a3
20017894:	fec42683          	lw	a3,-20(s0)
20017898:	06b1                	addi	a3,a3,12
2001789a:	8fd9                	or	a5,a5,a4
2001789c:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
2001789e:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:99
}
200178a0:	853e                	mv	a0,a5
200178a2:	50b2                	lw	ra,44(sp)
200178a4:	5422                	lw	s0,40(sp)
200178a6:	6145                	addi	sp,sp,48
200178a8:	8082                	ret

200178aa <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
200178aa:	7179                	addi	sp,sp,-48
200178ac:	d606                	sw	ra,44(sp)
200178ae:	d422                	sw	s0,40(sp)
200178b0:	1800                	addi	s0,sp,48
200178b2:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200178b6:	fdc42503          	lw	a0,-36(s0)
200178ba:	c13ff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
200178be:	87aa                	mv	a5,a0
200178c0:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
200178c4:	fec42783          	lw	a5,-20(s0)
200178c8:	07b1                	addi	a5,a5,12
200178ca:	439c                	lw	a5,0(a5)
200178cc:	83c1                	srli	a5,a5,0x10
200178ce:	8b9d                	andi	a5,a5,7
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:105
}
200178d0:	853e                	mv	a0,a5
200178d2:	50b2                	lw	ra,44(sp)
200178d4:	5422                	lw	s0,40(sp)
200178d6:	6145                	addi	sp,sp,48
200178d8:	8082                	ret

200178da <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
200178da:	7179                	addi	sp,sp,-48
200178dc:	d606                	sw	ra,44(sp)
200178de:	d422                	sw	s0,40(sp)
200178e0:	1800                	addi	s0,sp,48
200178e2:	fca42e23          	sw	a0,-36(s0)
200178e6:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200178ea:	fdc42503          	lw	a0,-36(s0)
200178ee:	bdfff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
200178f2:	87aa                	mv	a5,a0
200178f4:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
200178f8:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
200178fa:	fdc42503          	lw	a0,-36(s0)
200178fe:	3d65                	jal	200177b6 <__metal_driver_sifive_uart0_txready>
20017900:	87aa                	mv	a5,a0
20017902:	ffe5                	bnez	a5,200178fa <__metal_driver_sifive_uart0_putc+0x20>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20017904:	fec42783          	lw	a5,-20(s0)
20017908:	fd842703          	lw	a4,-40(s0)
2001790c:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
2001790e:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:115
}
20017910:	853e                	mv	a0,a5
20017912:	50b2                	lw	ra,44(sp)
20017914:	5422                	lw	s0,40(sp)
20017916:	6145                	addi	sp,sp,48
20017918:	8082                	ret

2001791a <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
2001791a:	7179                	addi	sp,sp,-48
2001791c:	d606                	sw	ra,44(sp)
2001791e:	d422                	sw	s0,40(sp)
20017920:	1800                	addi	s0,sp,48
20017922:	fca42e23          	sw	a0,-36(s0)
20017926:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001792a:	fdc42503          	lw	a0,-36(s0)
2001792e:	b9fff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
20017932:	87aa                	mv	a5,a0
20017934:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20017938:	fec42783          	lw	a5,-20(s0)
2001793c:	0791                	addi	a5,a5,4
2001793e:	439c                	lw	a5,0(a5)
20017940:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20017944:	fe842783          	lw	a5,-24(s0)
20017948:	0007d763          	bgez	a5,20017956 <__metal_driver_sifive_uart0_getc+0x3c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
2001794c:	fd842783          	lw	a5,-40(s0)
20017950:	577d                	li	a4,-1
20017952:	c398                	sw	a4,0(a5)
20017954:	a801                	j	20017964 <__metal_driver_sifive_uart0_getc+0x4a>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20017956:	fe842783          	lw	a5,-24(s0)
2001795a:	0ff7f713          	zext.b	a4,a5
2001795e:	fd842783          	lw	a5,-40(s0)
20017962:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20017964:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:129
}
20017966:	853e                	mv	a0,a5
20017968:	50b2                	lw	ra,44(sp)
2001796a:	5422                	lw	s0,40(sp)
2001796c:	6145                	addi	sp,sp,48
2001796e:	8082                	ret

20017970 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20017970:	7179                	addi	sp,sp,-48
20017972:	d622                	sw	s0,44(sp)
20017974:	1800                	addi	s0,sp,48
20017976:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2001797a:	fdc42783          	lw	a5,-36(s0)
2001797e:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20017982:	fec42783          	lw	a5,-20(s0)
20017986:	43dc                	lw	a5,4(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:134
}
20017988:	853e                	mv	a0,a5
2001798a:	5432                	lw	s0,44(sp)
2001798c:	6145                	addi	sp,sp,48
2001798e:	8082                	ret

20017990 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20017990:	7179                	addi	sp,sp,-48
20017992:	d606                	sw	ra,44(sp)
20017994:	d422                	sw	s0,40(sp)
20017996:	1800                	addi	s0,sp,48
20017998:	fca42e23          	sw	a0,-36(s0)
2001799c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
200179a0:	fdc42783          	lw	a5,-36(s0)
200179a4:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
200179a8:	fdc42503          	lw	a0,-36(s0)
200179ac:	b21ff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
200179b0:	87aa                	mv	a5,a0
200179b2:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200179b6:	fdc42503          	lw	a0,-36(s0)
200179ba:	bd7ff0ef          	jal	ra,20017590 <__metal_driver_sifive_uart0_clock>
200179be:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
200179c2:	fd842703          	lw	a4,-40(s0)
200179c6:	fec42783          	lw	a5,-20(s0)
200179ca:	c3d8                	sw	a4,4(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
200179cc:	fe442783          	lw	a5,-28(s0)
200179d0:	cbb1                	beqz	a5,20017a24 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
200179d2:	fe442783          	lw	a5,-28(s0)
200179d6:	439c                	lw	a5,0(a5)
200179d8:	439c                	lw	a5,0(a5)
200179da:	fe442503          	lw	a0,-28(s0)
200179de:	9782                	jalr	a5
200179e0:	fea42023          	sw	a0,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
200179e4:	fe042703          	lw	a4,-32(s0)
200179e8:	fd842783          	lw	a5,-40(s0)
200179ec:	02f747b3          	div	a5,a4,a5
200179f0:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
200179f4:	fe842783          	lw	a5,-24(s0)
200179f8:	07e1                	addi	a5,a5,24
200179fa:	c398                	sw	a4,0(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
200179fc:	fe842783          	lw	a5,-24(s0)
20017a00:	07a1                	addi	a5,a5,8
20017a02:	439c                	lw	a5,0(a5)
20017a04:	fe842703          	lw	a4,-24(s0)
20017a08:	0721                	addi	a4,a4,8
20017a0a:	0017e793          	ori	a5,a5,1
20017a0e:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20017a10:	fe842783          	lw	a5,-24(s0)
20017a14:	07b1                	addi	a5,a5,12
20017a16:	439c                	lw	a5,0(a5)
20017a18:	fe842703          	lw	a4,-24(s0)
20017a1c:	0731                	addi	a4,a4,12
20017a1e:	0017e793          	ori	a5,a5,1
20017a22:	c31c                	sw	a5,0(a4)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20017a24:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:151
}
20017a26:	853e                	mv	a0,a5
20017a28:	50b2                	lw	ra,44(sp)
20017a2a:	5422                	lw	s0,40(sp)
20017a2c:	6145                	addi	sp,sp,48
20017a2e:	8082                	ret

20017a30 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20017a30:	7139                	addi	sp,sp,-64
20017a32:	de06                	sw	ra,60(sp)
20017a34:	dc22                	sw	s0,56(sp)
20017a36:	0080                	addi	s0,sp,64
20017a38:	fca42623          	sw	a0,-52(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20017a3c:	fcc42783          	lw	a5,-52(s0)
20017a40:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20017a44:	fcc42503          	lw	a0,-52(s0)
20017a48:	a85ff0ef          	jal	ra,200174cc <__metal_driver_sifive_uart0_control_base>
20017a4c:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20017a4e:	fef42423          	sw	a5,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20017a52:	fcc42503          	lw	a0,-52(s0)
20017a56:	b3bff0ef          	jal	ra,20017590 <__metal_driver_sifive_uart0_clock>
20017a5a:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20017a5e:	fe842783          	lw	a5,-24(s0)
20017a62:	07a1                	addi	a5,a5,8
20017a64:	4398                	lw	a4,0(a5)
20017a66:	fe842783          	lw	a5,-24(s0)
20017a6a:	07a1                	addi	a5,a5,8
20017a6c:	86be                	mv	a3,a5
20017a6e:	fff907b7          	lui	a5,0xfff90
20017a72:	17fd                	addi	a5,a5,-1
20017a74:	8ff9                	and	a5,a5,a4
20017a76:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20017a78:	fe842783          	lw	a5,-24(s0)
20017a7c:	07a1                	addi	a5,a5,8
20017a7e:	4398                	lw	a4,0(a5)
20017a80:	fe842783          	lw	a5,-24(s0)
20017a84:	07a1                	addi	a5,a5,8
20017a86:	86be                	mv	a3,a5
20017a88:	67c1                	lui	a5,0x10
20017a8a:	8fd9                	or	a5,a5,a4
20017a8c:	c29c                	sw	a5,0(a3)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20017a8e:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20017a90:	fe842783          	lw	a5,-24(s0)
20017a94:	07d1                	addi	a5,a5,20
20017a96:	439c                	lw	a5,0(a5)
20017a98:	8b85                	andi	a5,a5,1
20017a9a:	dbfd                	beqz	a5,20017a90 <pre_rate_change_callback_func+0x60>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20017a9c:	fe842783          	lw	a5,-24(s0)
20017aa0:	07a1                	addi	a5,a5,8
20017aa2:	439c                	lw	a5,0(a5)
20017aa4:	8b89                	andi	a5,a5,2
20017aa6:	c399                	beqz	a5,20017aac <pre_rate_change_callback_func+0x7c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20017aa8:	47a5                	li	a5,9
20017aaa:	a011                	j	20017aae <pre_rate_change_callback_func+0x7e>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20017aac:	47a9                	li	a5,10
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20017aae:	fef42023          	sw	a5,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20017ab2:	fe442783          	lw	a5,-28(s0)
20017ab6:	439c                	lw	a5,0(a5)
20017ab8:	439c                	lw	a5,0(a5)
20017aba:	fe442503          	lw	a0,-28(s0)
20017abe:	9782                	jalr	a5
20017ac0:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20017ac4:	fe042703          	lw	a4,-32(s0)
20017ac8:	fdc42783          	lw	a5,-36(s0)
20017acc:	02f707b3          	mul	a5,a4,a5
20017ad0:	873e                	mv	a4,a5
20017ad2:	fec42783          	lw	a5,-20(s0)
20017ad6:	43dc                	lw	a5,4(a5)
20017ad8:	02f757b3          	divu	a5,a4,a5
20017adc:	fcf42c23          	sw	a5,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20017ae0:	fc042a23          	sw	zero,-44(s0)
20017ae4:	a039                	j	20017af2 <pre_rate_change_callback_func+0xc2>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20017ae6:	0001                	nop
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20017ae8:	fd442783          	lw	a5,-44(s0)
20017aec:	0785                	addi	a5,a5,1
20017aee:	fcf42a23          	sw	a5,-44(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20017af2:	fd442783          	lw	a5,-44(s0)
20017af6:	fd842703          	lw	a4,-40(s0)
20017afa:	fee7c6e3          	blt	a5,a4,20017ae6 <pre_rate_change_callback_func+0xb6>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:180
}
20017afe:	0001                	nop
20017b00:	0001                	nop
20017b02:	50f2                	lw	ra,60(sp)
20017b04:	5462                	lw	s0,56(sp)
20017b06:	6121                	addi	sp,sp,64
20017b08:	8082                	ret

20017b0a <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20017b0a:	7179                	addi	sp,sp,-48
20017b0c:	d606                	sw	ra,44(sp)
20017b0e:	d422                	sw	s0,40(sp)
20017b10:	1800                	addi	s0,sp,48
20017b12:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20017b16:	fdc42783          	lw	a5,-36(s0)
20017b1a:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20017b1e:	fec42703          	lw	a4,-20(s0)
20017b22:	fec42783          	lw	a5,-20(s0)
20017b26:	43dc                	lw	a5,4(a5)
20017b28:	85be                	mv	a1,a5
20017b2a:	853a                	mv	a0,a4
20017b2c:	b91fb0ef          	jal	ra,200136bc <metal_uart_set_baud_rate>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:185
}
20017b30:	0001                	nop
20017b32:	50b2                	lw	ra,44(sp)
20017b34:	5422                	lw	s0,40(sp)
20017b36:	6145                	addi	sp,sp,48
20017b38:	8082                	ret

20017b3a <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
20017b3a:	7139                	addi	sp,sp,-64
20017b3c:	de06                	sw	ra,60(sp)
20017b3e:	dc22                	sw	s0,56(sp)
20017b40:	0080                	addi	s0,sp,64
20017b42:	fca42623          	sw	a0,-52(s0)
20017b46:	fcb42423          	sw	a1,-56(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20017b4a:	fcc42783          	lw	a5,-52(s0)
20017b4e:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20017b52:	fcc42503          	lw	a0,-52(s0)
20017b56:	a3bff0ef          	jal	ra,20017590 <__metal_driver_sifive_uart0_clock>
20017b5a:	fea42423          	sw	a0,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20017b5e:	fcc42503          	lw	a0,-52(s0)
20017b62:	a77ff0ef          	jal	ra,200175d8 <__metal_driver_sifive_uart0_pinmux>
20017b66:	fea42223          	sw	a0,-28(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
20017b6a:	fe842783          	lw	a5,-24(s0)
20017b6e:	c7b9                	beqz	a5,20017bbc <__metal_driver_sifive_uart0_init+0x82>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20017b70:	fec42783          	lw	a5,-20(s0)
20017b74:	20018737          	lui	a4,0x20018
20017b78:	a3070713          	addi	a4,a4,-1488 # 20017a30 <pre_rate_change_callback_func>
20017b7c:	c798                	sw	a4,8(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20017b7e:	fec42783          	lw	a5,-20(s0)
20017b82:	fcc42703          	lw	a4,-52(s0)
20017b86:	c7d8                	sw	a4,12(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
20017b88:	fec42783          	lw	a5,-20(s0)
20017b8c:	07a1                	addi	a5,a5,8
20017b8e:	85be                	mv	a1,a5
20017b90:	fe842503          	lw	a0,-24(s0)
20017b94:	2ab5                	jal	20017d10 <metal_clock_register_pre_rate_change_callback>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20017b96:	fec42783          	lw	a5,-20(s0)
20017b9a:	20018737          	lui	a4,0x20018
20017b9e:	b0a70713          	addi	a4,a4,-1270 # 20017b0a <post_rate_change_callback_func>
20017ba2:	cbd8                	sw	a4,20(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20017ba4:	fec42783          	lw	a5,-20(s0)
20017ba8:	fcc42703          	lw	a4,-52(s0)
20017bac:	cf98                	sw	a4,24(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20017bae:	fec42783          	lw	a5,-20(s0)
20017bb2:	07d1                	addi	a5,a5,20
20017bb4:	85be                	mv	a1,a5
20017bb6:	fe842503          	lw	a0,-24(s0)
20017bba:	2259                	jal	20017d40 <metal_clock_register_post_rate_change_callback>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20017bbc:	fec42783          	lw	a5,-20(s0)
20017bc0:	fc842583          	lw	a1,-56(s0)
20017bc4:	853e                	mv	a0,a5
20017bc6:	af7fb0ef          	jal	ra,200136bc <metal_uart_set_baud_rate>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20017bca:	fe442783          	lw	a5,-28(s0)
20017bce:	cb95                	beqz	a5,20017c02 <__metal_driver_sifive_uart0_init+0xc8>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20017bd0:	fcc42503          	lw	a0,-52(s0)
20017bd4:	a45ff0ef          	jal	ra,20017618 <__metal_driver_sifive_uart0_pinmux_output_selector>
20017bd8:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20017bda:	fef42023          	sw	a5,-32(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20017bde:	fcc42503          	lw	a0,-52(s0)
20017be2:	a73ff0ef          	jal	ra,20017654 <__metal_driver_sifive_uart0_pinmux_source_selector>
20017be6:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20017be8:	fcf42e23          	sw	a5,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20017bec:	fe442783          	lw	a5,-28(s0)
20017bf0:	439c                	lw	a5,0(a5)
20017bf2:	53dc                	lw	a5,36(a5)
20017bf4:	fdc42603          	lw	a2,-36(s0)
20017bf8:	fe042583          	lw	a1,-32(s0)
20017bfc:	fe442503          	lw	a0,-28(s0)
20017c00:	9782                	jalr	a5
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20017c02:	0001                	nop
20017c04:	50f2                	lw	ra,60(sp)
20017c06:	5462                	lw	s0,56(sp)
20017c08:	6121                	addi	sp,sp,64
20017c0a:	8082                	ret

20017c0c <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20017c0c:	7179                	addi	sp,sp,-48
20017c0e:	d606                	sw	ra,44(sp)
20017c10:	d422                	sw	s0,40(sp)
20017c12:	1800                	addi	s0,sp,48
20017c14:	fca42e23          	sw	a0,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20017c18:	fdc42783          	lw	a5,-36(s0)
20017c1c:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:52
    while (current) {
20017c20:	a831                	j	20017c3c <_metal_clock_call_all_callbacks+0x30>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20017c22:	fec42783          	lw	a5,-20(s0)
20017c26:	4398                	lw	a4,0(a5)
20017c28:	fec42783          	lw	a5,-20(s0)
20017c2c:	43dc                	lw	a5,4(a5)
20017c2e:	853e                	mv	a0,a5
20017c30:	9702                	jalr	a4
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:54
        current = current->_next;
20017c32:	fec42783          	lw	a5,-20(s0)
20017c36:	479c                	lw	a5,8(a5)
20017c38:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:52
    while (current) {
20017c3c:	fec42783          	lw	a5,-20(s0)
20017c40:	f3ed                	bnez	a5,20017c22 <_metal_clock_call_all_callbacks+0x16>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:56
    }
}
20017c42:	0001                	nop
20017c44:	0001                	nop
20017c46:	50b2                	lw	ra,44(sp)
20017c48:	5422                	lw	s0,40(sp)
20017c4a:	6145                	addi	sp,sp,48
20017c4c:	8082                	ret

20017c4e <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20017c4e:	7179                	addi	sp,sp,-48
20017c50:	d622                	sw	s0,44(sp)
20017c52:	1800                	addi	s0,sp,48
20017c54:	fca42e23          	sw	a0,-36(s0)
20017c58:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20017c5c:	fd842783          	lw	a5,-40(s0)
20017c60:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:66

    if (!list) {
20017c64:	fdc42783          	lw	a5,-36(s0)
20017c68:	e781                	bnez	a5,20017c70 <_metal_clock_append_to_callbacks+0x22>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:67
        return cb;
20017c6a:	fd842783          	lw	a5,-40(s0)
20017c6e:	a035                	j	20017c9a <_metal_clock_append_to_callbacks+0x4c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20017c70:	fdc42783          	lw	a5,-36(s0)
20017c74:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20017c78:	a031                	j	20017c84 <_metal_clock_append_to_callbacks+0x36>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:73
        current = current->_next;
20017c7a:	fec42783          	lw	a5,-20(s0)
20017c7e:	479c                	lw	a5,8(a5)
20017c80:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20017c84:	fec42783          	lw	a5,-20(s0)
20017c88:	479c                	lw	a5,8(a5)
20017c8a:	fbe5                	bnez	a5,20017c7a <_metal_clock_append_to_callbacks+0x2c>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
20017c8c:	fec42783          	lw	a5,-20(s0)
20017c90:	fd842703          	lw	a4,-40(s0)
20017c94:	c798                	sw	a4,8(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:78

    return list;
20017c96:	fdc42783          	lw	a5,-36(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:79
}
20017c9a:	853e                	mv	a0,a5
20017c9c:	5432                	lw	s0,44(sp)
20017c9e:	6145                	addi	sp,sp,48
20017ca0:	8082                	ret

20017ca2 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20017ca2:	1101                	addi	sp,sp,-32
20017ca4:	ce06                	sw	ra,28(sp)
20017ca6:	cc22                	sw	s0,24(sp)
20017ca8:	1000                	addi	s0,sp,32
20017caa:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20017cae:	fec42783          	lw	a5,-20(s0)
20017cb2:	439c                	lw	a5,0(a5)
20017cb4:	439c                	lw	a5,0(a5)
20017cb6:	fec42503          	lw	a0,-20(s0)
20017cba:	9782                	jalr	a5
20017cbc:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:112
}
20017cbe:	853e                	mv	a0,a5
20017cc0:	40f2                	lw	ra,28(sp)
20017cc2:	4462                	lw	s0,24(sp)
20017cc4:	6105                	addi	sp,sp,32
20017cc6:	8082                	ret

20017cc8 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20017cc8:	7179                	addi	sp,sp,-48
20017cca:	d606                	sw	ra,44(sp)
20017ccc:	d422                	sw	s0,40(sp)
20017cce:	1800                	addi	s0,sp,48
20017cd0:	fca42e23          	sw	a0,-36(s0)
20017cd4:	fcb42c23          	sw	a1,-40(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20017cd8:	fdc42783          	lw	a5,-36(s0)
20017cdc:	43dc                	lw	a5,4(a5)
20017cde:	853e                	mv	a0,a5
20017ce0:	3735                	jal	20017c0c <_metal_clock_call_all_callbacks>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20017ce2:	fdc42783          	lw	a5,-36(s0)
20017ce6:	439c                	lw	a5,0(a5)
20017ce8:	43dc                	lw	a5,4(a5)
20017cea:	fd842583          	lw	a1,-40(s0)
20017cee:	fdc42503          	lw	a0,-36(s0)
20017cf2:	9782                	jalr	a5
20017cf4:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20017cf8:	fdc42783          	lw	a5,-36(s0)
20017cfc:	479c                	lw	a5,8(a5)
20017cfe:	853e                	mv	a0,a5
20017d00:	3731                	jal	20017c0c <_metal_clock_call_all_callbacks>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:135

    return out;
20017d02:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:136
}
20017d06:	853e                	mv	a0,a5
20017d08:	50b2                	lw	ra,44(sp)
20017d0a:	5422                	lw	s0,40(sp)
20017d0c:	6145                	addi	sp,sp,48
20017d0e:	8082                	ret

20017d10 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20017d10:	1101                	addi	sp,sp,-32
20017d12:	ce06                	sw	ra,28(sp)
20017d14:	cc22                	sw	s0,24(sp)
20017d16:	1000                	addi	s0,sp,32
20017d18:	fea42623          	sw	a0,-20(s0)
20017d1c:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20017d20:	fec42783          	lw	a5,-20(s0)
20017d24:	43dc                	lw	a5,4(a5)
20017d26:	fe842583          	lw	a1,-24(s0)
20017d2a:	853e                	mv	a0,a5
20017d2c:	370d                	jal	20017c4e <_metal_clock_append_to_callbacks>
20017d2e:	872a                	mv	a4,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20017d30:	fec42783          	lw	a5,-20(s0)
20017d34:	c3d8                	sw	a4,4(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:149
}
20017d36:	0001                	nop
20017d38:	40f2                	lw	ra,28(sp)
20017d3a:	4462                	lw	s0,24(sp)
20017d3c:	6105                	addi	sp,sp,32
20017d3e:	8082                	ret

20017d40 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20017d40:	1101                	addi	sp,sp,-32
20017d42:	ce06                	sw	ra,28(sp)
20017d44:	cc22                	sw	s0,24(sp)
20017d46:	1000                	addi	s0,sp,32
20017d48:	fea42623          	sw	a0,-20(s0)
20017d4c:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20017d50:	fec42783          	lw	a5,-20(s0)
20017d54:	479c                	lw	a5,8(a5)
20017d56:	fe842583          	lw	a1,-24(s0)
20017d5a:	853e                	mv	a0,a5
20017d5c:	ef3ff0ef          	jal	ra,20017c4e <_metal_clock_append_to_callbacks>
20017d60:	872a                	mv	a4,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20017d62:	fec42783          	lw	a5,-20(s0)
20017d66:	c798                	sw	a4,8(a5)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/clock.h:162
}
20017d68:	0001                	nop
20017d6a:	40f2                	lw	ra,28(sp)
20017d6c:	4462                	lw	s0,24(sp)
20017d6e:	6105                	addi	sp,sp,32
20017d70:	8082                	ret

20017d72 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20017d72:	1101                	addi	sp,sp,-32
20017d74:	ce06                	sw	ra,28(sp)
20017d76:	cc22                	sw	s0,24(sp)
20017d78:	1000                	addi	s0,sp,32
20017d7a:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20017d7e:	fec42783          	lw	a5,-20(s0)
20017d82:	439c                	lw	a5,0(a5)
20017d84:	57dc                	lw	a5,44(a5)
20017d86:	fec42503          	lw	a0,-20(s0)
20017d8a:	9782                	jalr	a5
20017d8c:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/metal/cpu.h:226
}
20017d8e:	853e                	mv	a0,a5
20017d90:	40f2                	lw	ra,28(sp)
20017d92:	4462                	lw	s0,24(sp)
20017d94:	6105                	addi	sp,sp,32
20017d96:	8082                	ret

20017d98 <metal_cpu_get>:
metal_cpu_get():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20017d98:	1101                	addi	sp,sp,-32
20017d9a:	ce22                	sw	s0,28(sp)
20017d9c:	1000                	addi	s0,sp,32
20017d9e:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20017da2:	fec42783          	lw	a5,-20(s0)
20017da6:	eb99                	bnez	a5,20017dbc <metal_cpu_get+0x24>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20017da8:	800027b7          	lui	a5,0x80002
20017dac:	fec42703          	lw	a4,-20(s0)
20017db0:	070a                	slli	a4,a4,0x2
20017db2:	aa878793          	addi	a5,a5,-1368 # 80001aa8 <metal_segment_heap_target_end+0xfffff338>
20017db6:	97ba                	add	a5,a5,a4
20017db8:	439c                	lw	a5,0(a5)
20017dba:	a011                	j	20017dbe <metal_cpu_get+0x26>
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/cpu.c:11
    }
    return NULL;
20017dbc:	4781                	li	a5,0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/cpu.c:12
}
20017dbe:	853e                	mv	a0,a5
20017dc0:	4472                	lw	s0,28(sp)
20017dc2:	6105                	addi	sp,sp,32
20017dc4:	8082                	ret

20017dc6 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20017dc6:	1101                	addi	sp,sp,-32
20017dc8:	ce22                	sw	s0,28(sp)
20017dca:	1000                	addi	s0,sp,32
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20017dcc:	f14027f3          	csrr	a5,mhartid
20017dd0:	fef42623          	sw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/cpu.c:18
    return mhartid;
20017dd4:	fec42783          	lw	a5,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/cpu.c:20
#endif
}
20017dd8:	853e                	mv	a0,a5
20017dda:	4472                	lw	s0,28(sp)
20017ddc:	6105                	addi	sp,sp,32
20017dde:	8082                	ret

20017de0 <metal_shutdown>:
metal_shutdown():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20017de0:	1101                	addi	sp,sp,-32
20017de2:	ce22                	sw	s0,28(sp)
20017de4:	1000                	addi	s0,sp,32
20017de6:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20017dea:	0001                	nop
20017dec:	bffd                	j	20017dea <metal_shutdown+0xa>
	...

20017e00 <__metal_vector_table>:
IRQ_0():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20017e00:	a52fc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e04 <IRQ_1>:
IRQ_1():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20017e04:	a4efc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e08 <IRQ_2>:
IRQ_2():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20017e08:	a4afc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e0c <IRQ_3>:
IRQ_3():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20017e0c:	a74fc06f          	j	20014080 <metal_software_interrupt_vector_handler>

20017e10 <IRQ_4>:
IRQ_4():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20017e10:	a42fc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e14 <IRQ_5>:
IRQ_5():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20017e14:	a3efc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e18 <IRQ_6>:
IRQ_6():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20017e18:	a3afc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e1c <IRQ_7>:
IRQ_7():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20017e1c:	b5efc06f          	j	2001417a <metal_timer_interrupt_vector_handler>

20017e20 <IRQ_8>:
IRQ_8():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20017e20:	a32fc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e24 <IRQ_9>:
IRQ_9():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20017e24:	a2efc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e28 <IRQ_10>:
IRQ_10():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20017e28:	a2afc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e2c <IRQ_11>:
IRQ_11():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20017e2c:	a26fc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e30 <IRQ_12>:
IRQ_12():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20017e30:	a22fc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e34 <IRQ_13>:
IRQ_13():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20017e34:	a1efc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e38 <IRQ_14>:
IRQ_14():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20017e38:	a1afc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e3c <IRQ_15>:
IRQ_15():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20017e3c:	a16fc06f          	j	20014052 <metal_interrupt_vector_handler>

20017e40 <IRQ_LC0>:
IRQ_LC0():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20017e40:	eb8fc06f          	j	200144f8 <metal_lc0_interrupt_vector_handler>

20017e44 <IRQ_LC1>:
IRQ_LC1():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20017e44:	f4afc06f          	j	2001458e <metal_lc1_interrupt_vector_handler>

20017e48 <IRQ_LC2>:
IRQ_LC2():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20017e48:	fdcfc06f          	j	20014624 <metal_lc2_interrupt_vector_handler>

20017e4c <IRQ_LC3>:
IRQ_LC3():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20017e4c:	86ffc06f          	j	200146ba <metal_lc3_interrupt_vector_handler>

20017e50 <IRQ_LC4>:
IRQ_LC4():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20017e50:	901fc06f          	j	20014750 <metal_lc4_interrupt_vector_handler>

20017e54 <IRQ_LC5>:
IRQ_LC5():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20017e54:	993fc06f          	j	200147e6 <metal_lc5_interrupt_vector_handler>

20017e58 <IRQ_LC6>:
IRQ_LC6():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20017e58:	a25fc06f          	j	2001487c <metal_lc6_interrupt_vector_handler>

20017e5c <IRQ_LC7>:
IRQ_LC7():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20017e5c:	ab7fc06f          	j	20014912 <metal_lc7_interrupt_vector_handler>

20017e60 <IRQ_LC8>:
IRQ_LC8():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20017e60:	b49fc06f          	j	200149a8 <metal_lc8_interrupt_vector_handler>

20017e64 <IRQ_LC9>:
IRQ_LC9():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20017e64:	bdbfc06f          	j	20014a3e <metal_lc9_interrupt_vector_handler>

20017e68 <IRQ_LC10>:
IRQ_LC10():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20017e68:	c6dfc06f          	j	20014ad4 <metal_lc10_interrupt_vector_handler>

20017e6c <IRQ_LC11>:
IRQ_LC11():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20017e6c:	cfffc06f          	j	20014b6a <metal_lc11_interrupt_vector_handler>

20017e70 <IRQ_LC12>:
IRQ_LC12():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20017e70:	d91fc06f          	j	20014c00 <metal_lc12_interrupt_vector_handler>

20017e74 <IRQ_LC13>:
IRQ_LC13():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20017e74:	e23fc06f          	j	20014c96 <metal_lc13_interrupt_vector_handler>

20017e78 <IRQ_LC14>:
IRQ_LC14():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20017e78:	eb5fc06f          	j	20014d2c <metal_lc14_interrupt_vector_handler>

20017e7c <IRQ_LC15>:
IRQ_LC15():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20017e7c:	f47fc06f          	j	20014dc2 <metal_lc15_interrupt_vector_handler>

20017e80 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:208
{
20017e80:	1101                	addi	sp,sp,-32
20017e82:	ce22                	sw	s0,28(sp)
20017e84:	1000                	addi	s0,sp,32
20017e86:	fea42623          	sw	a0,-20(s0)
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20017e8a:	fec42703          	lw	a4,-20(s0)
20017e8e:	800017b7          	lui	a5,0x80001
20017e92:	06078793          	addi	a5,a5,96 # 80001060 <metal_segment_heap_target_end+0xffffe8f0>
20017e96:	00f71763          	bne	a4,a5,20017ea4 <__metal_driver_fixed_clock_rate+0x24>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20017e9a:	00f427b7          	lui	a5,0xf42
20017e9e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20017ea2:	a099                	j	20017ee8 <__metal_driver_fixed_clock_rate+0x68>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20017ea4:	fec42703          	lw	a4,-20(s0)
20017ea8:	800017b7          	lui	a5,0x80001
20017eac:	06c78793          	addi	a5,a5,108 # 8000106c <metal_segment_heap_target_end+0xffffe8fc>
20017eb0:	00f71763          	bne	a4,a5,20017ebe <__metal_driver_fixed_clock_rate+0x3e>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20017eb4:	044aa7b7          	lui	a5,0x44aa
20017eb8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20017ebc:	a035                	j	20017ee8 <__metal_driver_fixed_clock_rate+0x68>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20017ebe:	fec42703          	lw	a4,-20(s0)
20017ec2:	800017b7          	lui	a5,0x80001
20017ec6:	07878793          	addi	a5,a5,120 # 80001078 <metal_segment_heap_target_end+0xffffe908>
20017eca:	00f71463          	bne	a4,a5,20017ed2 <__metal_driver_fixed_clock_rate+0x52>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
20017ece:	67a1                	lui	a5,0x8
20017ed0:	a821                	j	20017ee8 <__metal_driver_fixed_clock_rate+0x68>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
20017ed2:	fec42703          	lw	a4,-20(s0)
20017ed6:	800017b7          	lui	a5,0x80001
20017eda:	08478793          	addi	a5,a5,132 # 80001084 <metal_segment_heap_target_end+0xffffe914>
20017ede:	00f71463          	bne	a4,a5,20017ee6 <__metal_driver_fixed_clock_rate+0x66>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
20017ee2:	67a1                	lui	a5,0x8
20017ee4:	a011                	j	20017ee8 <__metal_driver_fixed_clock_rate+0x68>
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:222
		return 0;
20017ee6:	4781                	li	a5,0
C:\Users\shu\wsFreedomStudio\simpira_test\bsp\build\debug/./metal/machine.h:224
}
20017ee8:	853e                	mv	a0,a5
20017eea:	4472                	lw	s0,28(sp)
20017eec:	6105                	addi	sp,sp,32
20017eee:	8082                	ret

20017ef0 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20017ef0:	1101                	addi	sp,sp,-32
20017ef2:	ce06                	sw	ra,28(sp)
20017ef4:	cc22                	sw	s0,24(sp)
20017ef6:	1000                	addi	s0,sp,32
20017ef8:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20017efc:	fec42503          	lw	a0,-20(s0)
20017f00:	3741                	jal	20017e80 <__metal_driver_fixed_clock_rate>
20017f02:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/fixed-clock.c:14
}
20017f04:	853e                	mv	a0,a5
20017f06:	40f2                	lw	ra,28(sp)
20017f08:	4462                	lw	s0,24(sp)
20017f0a:	6105                	addi	sp,sp,32
20017f0c:	8082                	ret

20017f0e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20017f0e:	1101                	addi	sp,sp,-32
20017f10:	ce06                	sw	ra,28(sp)
20017f12:	cc22                	sw	s0,24(sp)
20017f14:	1000                	addi	s0,sp,32
20017f16:	fea42623          	sw	a0,-20(s0)
20017f1a:	feb42423          	sw	a1,-24(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20017f1e:	fec42503          	lw	a0,-20(s0)
20017f22:	37f9                	jal	20017ef0 <__metal_driver_fixed_clock_get_rate_hz>
20017f24:	87aa                	mv	a5,a0
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/src/drivers/fixed-clock.c:19
}
20017f26:	853e                	mv	a0,a5
20017f28:	40f2                	lw	ra,28(sp)
20017f2a:	4462                	lw	s0,24(sp)
20017f2c:	6105                	addi	sp,sp,32
20017f2e:	8082                	ret

20017f30 <_exit>:
_exit():
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20017f30:	1101                	addi	sp,sp,-32
20017f32:	ce06                	sw	ra,28(sp)
20017f34:	cc22                	sw	s0,24(sp)
20017f36:	1000                	addi	s0,sp,32
20017f38:	fea42623          	sw	a0,-20(s0)
C:/Users/shu/wsFreedomStudio/simpira_test/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20017f3c:	fec42503          	lw	a0,-20(s0)
20017f40:	ea1ff0ef          	jal	ra,20017de0 <metal_shutdown>
